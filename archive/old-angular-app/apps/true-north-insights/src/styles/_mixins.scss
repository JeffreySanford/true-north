@use 'sass:color';
@use './variables' as vars;

// Flexbox mixins
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

// Box shadow levels
@mixin box-shadow($level: 1) {
  @if $level == 1 {
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  } @else if $level == 2 {
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  } @else if $level == 3 {
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
  } @else {
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  }
}

// Text shadow levels
@mixin text-shadow($level: 1) {
  @if $level == 1 {
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
  } @else if $level == 2 {
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
  } @else if $level == 3 {
    text-shadow: 0 3px 6px rgba(0, 0, 0, 0.5);
  } @else {
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
  }
}

// Patriotic button styling
@mixin patriotic-button {
  display: inline-block;
  padding: 10px 20px;
  color: white;
  font-weight: bold;
  text-transform: uppercase;
  letter-spacing: 1px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: all vars.$transition-medium;
  position: relative;

  &:hover {
    transform: translateY(-2px);
    @include box-shadow(2);
  }
  
  &:active {
    transform: translateY(0);
    @include box-shadow(1);
  }
}

// American flag style stripes - unified from both files
@mixin flag-stripes($height: 5px) {
  height: $height * 3;
  background: repeating-linear-gradient(
    to bottom,
    vars.$patriotic-red $height * 0,
    vars.$patriotic-red $height,
    vars.$patriotic-white $height,
    vars.$patriotic-white $height * 2,
    vars.$patriotic-blue $height * 2,
    vars.$patriotic-blue $height * 3
  );
  box-shadow: 0 -1px 5px rgba(0, 0, 0, 0.2);
}

// Horizontal flag stripes
@mixin flag-stripes-horizontal($width: 100%) {
  width: $width;
  background: linear-gradient(
    90deg,
    vars.$patriotic-red 0%,
    vars.$patriotic-red 33%,
    vars.$patriotic-white 33%,
    vars.$patriotic-white 66%,
    vars.$patriotic-blue 66%,
    vars.$patriotic-blue 100%
  );
}

// Military texture background - unified from both files
@mixin military-texture {
  background-image: url('/assets/backgrounds/camo-pattern.png');
  background-size: 200px;
  background-repeat: repeat;
}

// Add the missing stars-background mixin here
@mixin stars-background($opacity: 0.3, $color: vars.$patriotic-blue) {
  background-color: $color;
  background-image: url('/assets/images/stars-background.png');
  background-size: cover;
  background-position: center;
  position: relative;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, $opacity);
  }
}

// Responsive text sizing
@mixin responsive-font-size($desktop-size, $mobile-size) {
  font-size: $desktop-size;
  
  @media (max-width: vars.$breakpoint-sm) {
    font-size: $mobile-size;
  }
}

// Border utilities
@mixin border-radius($radius: 4px) {
  border-radius: $radius;
}

// Screen reader only content
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// Truncate text with ellipsis
@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Animations
@mixin keyframes($name) {
  @keyframes #{$name} {
    @content;
  }
}
