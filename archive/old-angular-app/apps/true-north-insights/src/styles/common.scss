@use 'sass:color';
// Common styles that can be imported by both the main styles.scss and component scss files
// Import variables for use in this file
@use './variables' as vars;

// Export common mixins, functions, and basic shared styles

// Patriotic gradient - unique to common.scss
@mixin patriotic-gradient {
  background: linear-gradient(
    to right,
    vars.$patriotic-red,
    vars.$patriotic-blue
  );
}

@mixin patriotic-text-shadow {
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.8);
}

@mixin section-padding {
  padding: vars.$section-padding;
  
  @media (max-width: vars.$breakpoint-sm) {
    padding: vars.$mobile-section-padding;
  }
}

@mixin responsive-container {
  width: 100%;
  max-width: vars.$content-max-width;
  margin: 0 auto;
}

// Common transitions
@mixin smooth-transition {
  transition: all vars.$transition-medium;
}

// Stars background - enhanced with parameters
@mixin stars-background($opacity: 0.3, $color: vars.$patriotic-blue) {
  background-color: $color;
  background-image: url('/assets/images/stars-background.png');
  background-size: cover;
  background-position: center;
  position: relative;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, $opacity);
  }
}

// American flag style stripes mixin
@mixin flag-stripes($height: 5px) {
  height: $height * 3;
  background: repeating-linear-gradient(
    to bottom,
    vars.$patriotic-red $height * 0,
    vars.$patriotic-red $height,
    vars.$patriotic-white $height,
    vars.$patriotic-white $height * 2,
    vars.$patriotic-blue $height * 2,
    vars.$patriotic-blue $height * 3
  );
  box-shadow: 0 -1px 5px rgba(0, 0, 0, 0.2);
}

// Common element styles
%centered-flex {
  display: flex;
  align-items: center;
  justify-content: center;
}

%patriotic-border {
  border: 2px solid vars.$service-gold;
  box-shadow: 0 0 10px rgba(vars.$service-gold, 0.3);
}

// Responsive mixins
@mixin for-phone-only {
  @media (max-width: vars.$breakpoint-xs) { @content; }
}

@mixin for-tablet-portrait-up {
  @media (min-width: vars.$breakpoint-sm) { @content; }
}

@mixin for-tablet-landscape-up {
  @media (min-width: vars.$breakpoint-md) { @content; }
}

@mixin for-desktop-up {
  @media (min-width: vars.$breakpoint-lg) { @content; }
}

@mixin for-big-desktop-up {
  @media (min-width: vars.$breakpoint-xl) { @content; }
}

@mixin for-ultra-wide {
  @media (min-width: vars.$breakpoint-xxl) { @content; }
}

// Add the patriotic button mixin here as well to avoid the undefined mixin error
@mixin patriotic-button {
  display: inline-block;
  padding: 10px 20px;
  color: white;
  font-weight: bold;
  text-transform: uppercase;
  letter-spacing: 1px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: all vars.$transition-medium;
  position: relative;
  background-color: vars.$army-green;
  border: 1px solid vars.$service-gold;
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    background-color: color.adjust(vars.$army-green, $lightness: -5%);
  }
  
  &:active {
    transform: translateY(0);
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  }
}

// Box shadow levels - duplicate from _mixins.scss to ensure availability
@mixin box-shadow($level) {
  @if $level == 1 {
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  } @else if $level == 2 {
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  } @else if $level == 3 {
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
  } @else {
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  }
}
