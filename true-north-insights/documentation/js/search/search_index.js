var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.149,1,0.676]],["body/components/AboutComponent.html",[0,0.272,1,1.28,2,1.285,3,0.578,4,0.664,5,1.47,6,1.47,7,1.47,8,0.578,9,3.418,10,1.069,11,2.117,12,1.716,13,1.962,14,0.908,15,1.767,16,5.006,17,1.767,18,5.006,19,0.578,20,0.041,21,0.578,22,1.191,23,0.664,24,0.664,25,2.726,26,1.069,27,1.767,28,1.767,29,1.47,30,1.966,31,1.47,32,1.15,33,1.47,34,0.957,35,1.47,36,0.957,37,1.47,38,0.957,39,1.47,40,0.957,41,1.47,42,1.069,43,1.47,44,0.957,45,1.47,46,0.957,47,1.47,48,1.069,49,1.191,50,1.47,51,1.47,52,0.034,53,0.034]],["title/components/AppComponent.html",[0,0.149,34,0.676]],["body/components/AppComponent.html",[0,0.265,1,0.901,2,1.239,3,0.544,4,0.625,5,1.384,6,1.384,7,1.384,8,0.544,10,1.006,11,2.1,12,1.702,13,1.891,14,0.989,15,1.703,17,1.703,19,0.726,20,0.041,21,0.544,22,1.38,23,0.625,24,0.625,26,1.006,27,1.703,28,1.703,29,1.384,30,1.926,31,1.384,32,1.109,33,1.384,34,1.254,35,1.384,36,0.901,37,1.384,38,0.901,39,1.384,40,0.901,41,1.384,42,1.401,43,1.384,44,0.901,45,1.384,46,0.901,47,1.384,48,1.006,49,1.121,50,1.384,51,1.384,52,0.033,53,0.033,54,3.218,55,3.962,56,3.962,57,2.345,58,3.675,59,4.826,60,4.826,61,1.246,62,1.891,63,2.541,64,2.541,65,4.292,66,1.384,67,1.905,68,1.708,69,1.708,70,1.891,71,2.967,72,2.41,73,3.92,74,3.218,75,2.41,76,3.218]],["title/modules/AppModule.html",[77,1.038,78,1.809]],["body/modules/AppModule.html",[1,0.808,3,0.488,4,0.561,8,0.488,12,1.634,14,0.638,19,0.836,20,0.042,21,0.488,22,1.006,23,0.561,24,0.561,26,0.903,34,1.246,36,0.808,38,0.808,40,0.808,42,0.903,44,0.808,46,0.808,52,0.031,53,0.031,57,2.55,58,2.472,70,1.378,75,2.162,76,2.887,77,1.852,78,3.47,79,1.709,80,1.378,81,3.059,82,3.497,83,3.497,84,2.472,85,2.887,86,2.887,87,2.887,88,3.169,89,2.472,90,2.162,91,3.516,92,2.472,93,2.168,94,3.226,95,2.418,96,2.168,97,2.418,98,3.059,99,2.286,100,1.767,101,3.169,102,3.169,103,2.771,104,1.767,105,1.591,106,2.19,107,2.454,108,4.507,109,4.507,110,4.507,111,3.7,112,2.162,113,4.507,114,3.516,115,3.516,116,3.516,117,2.887,118,2.887,119,2.472,120,2.472,121,2.472,122,2.472,123,2.887,124,2.887,125,2.472,126,3.516,127,1.915,128,2.887,129,2.887,130,3.516,131,3.516,132,3.516,133,3.516,134,3.516,135,3.516,136,1.378,137,1.767,138,1.964,139,1.289,140,1.964,141,1.532,142,1.118,143,1.591,144,3.516,145,2.887,146,2.771,147,3.516,148,3.516,149,3.516,150,1.532,151,1.532]],["title/interfaces/AuditEntry.html",[152,0.935,153,1.809]],["body/interfaces/AuditEntry.html",[0,0.048,3,0.51,4,0.15,8,0.131,10,1.468,14,0.395,19,0.302,20,0.042,21,0.131,23,0.515,24,0.15,32,0.845,52,0.015,53,0.018,57,0.459,61,0.3,62,0.643,63,2.488,64,2.553,66,1.141,67,2.882,68,0.949,69,1.514,93,2.247,100,2.234,104,1.715,105,0.333,107,1.891,136,0.37,137,0.643,138,1.949,139,1.304,140,1.949,141,1.134,142,0.827,143,1.864,146,0.58,150,2.247,151,2.247,152,0.692,153,1.987,154,0.514,155,0.411,156,0.58,157,1.009,158,2.371,159,2.803,160,3.309,161,2.419,162,2.851,163,2.851,164,3.404,165,2.654,166,0.893,167,0.893,168,1.338,169,0.893,170,0.411,171,0.58,172,0.514,173,1.347,174,0.514,175,1.987,176,2.272,177,1.829,178,2.567,179,2.272,180,2.053,181,1.338,182,2.135,183,2.807,184,3.808,185,3.211,186,4.379,187,4.336,188,3.42,189,2.851,190,2.654,191,2.654,192,1.829,193,2.441,194,2.586,195,3.311,196,3.358,197,3.292,198,2.601,199,2.852,200,1.338,201,2.378,202,1.264,203,2.654,204,2.136,205,3.51,206,1.787,207,1.153,208,0.775,209,0.775,210,0.775,211,3.404,212,0.775,213,2.851,214,0.58,215,2.272,216,1.153,217,2.896,218,2.441,219,2.173,220,1.185,221,0.58,222,0.797,223,0.459,224,2.258,225,0.514,226,2.173,227,0.775,228,0.775,229,0.459,230,0.663,231,4.638,232,2.586,233,0.775,234,1.604,235,1.812,236,0.775,237,0.775,238,1.347,239,2.272,240,2.419,241,0.775,242,0.775,243,0.775,244,0.775,245,0.893,246,0.58,247,3.582,248,0.775,249,0.775,250,1.009,251,2.448,252,2.015,253,3.335,254,1.347,255,0.663,256,2.136,257,1.347,258,1.153,259,1.347,260,1.987,261,1.417,262,0.775,263,0.775,264,2.419,265,1.347,266,2.441,267,0.58,268,1.185,269,0.775,270,0.775,271,2.93,272,1.347,273,4.06,274,0.775,275,0.775,276,3.165,277,2.419,278,3.292,279,2.852,280,4.232,281,2.803,282,2.184,283,0.775,284,0.775,285,0.663,286,0.775,287,0.775,288,0.893,289,0.775,290,0.775,291,0.775,292,0.775,293,0.775,294,0.775,295,1.347,296,1.009,297,0.775,298,1.347,299,1.347,300,1.53,301,2.136,302,0.775,303,1.347,304,0.775,305,0.775,306,1.347,307,0.775,308,1.688,309,1.185,310,0.775,311,3.098,312,2.371,313,2.262,314,1.787,315,1.009,316,1.6,317,0.514,318,0.58,319,1.6,320,0.775,321,1.347,322,0.775,323,1.347,324,0.775,325,2.099,326,0.58,327,1.417,328,2.136,329,1.338,330,1.009,331,2.135,332,1.338,333,1.812,334,0.663,335,0.58,336,2.482,337,2.624,338,2.184,339,3.671,340,0.775,341,2.419,342,0.775,343,1.338,344,2.624,345,2.654,346,0.775,347,1.185,348,0.514,349,1.829,350,1.009,351,0.893,352,1.009,353,1.787,354,0.775,355,3.591,356,0.775,357,2.419,358,0.775,359,0.775,360,0.775,361,0.58,362,0.663,363,1.787,364,0.775,365,0.775,366,0.775,367,0.514,368,0.775,369,0.58,370,1.153,371,3.503,372,3.075,373,3,374,3.075,375,1.009,376,0.775,377,1.009,378,0.775,379,0.775,380,0.775,381,0.775,382,0.775,383,0.775,384,0.775,385,2.136,386,1.347,387,0.775,388,1.347,389,1.347,390,0.775,391,1.347,392,1.347,393,1.347,394,0.775,395,1.153,396,2.419,397,0.775,398,0.775,399,0.775,400,1.153,401,0.775,402,2.851,403,0.775,404,0.775,405,1.812,406,0.775,407,0.775,408,1.347,409,1.347,410,1.347,411,1.347,412,1.347,413,1.6,414,2.136,415,1.787,416,0.775,417,1.787,418,1.787,419,1.787,420,0.775,421,0.663,422,0.775,423,0.775,424,0.775,425,0.775,426,1.347,427,1.347,428,2.419,429,1.347,430,2.136,431,0.775,432,0.775,433,1.787,434,0.775,435,0.775,436,1.347,437,0.775,438,0.775,439,0.775,440,1.347,441,0.775,442,0.663,443,0.775,444,1.787,445,0.775,446,0.775,447,0.775,448,0.663,449,0.775,450,0.893,451,0.775,452,0.775,453,0.775,454,0.775,455,1.347,456,1.347,457,0.775,458,0.775,459,2.419,460,2.419,461,2.419,462,0.775,463,0.775,464,0.775,465,0.775,466,0.775,467,0.775,468,0.775,469,0.775,470,0.775,471,0.58,472,0.775,473,0.893,474,0.775,475,0.775,476,0.775,477,0.775,478,0.663,479,0.775,480,0.663,481,0.775,482,1.787,483,2.136,484,0.775,485,0.775,486,1.347,487,0.775,488,1.347,489,0.775,490,1.347,491,0.775,492,0.775,493,1.787,494,0.775,495,1.347,496,0.775,497,0.775,498,0.775,499,0.775,500,0.775,501,1.347,502,0.775,503,0.775,504,2.136,505,1.53,506,1.347,507,1.347,508,0.58,509,0.58,510,1.009,511,1.787,512,0.775,513,1.347,514,0.775,515,1.347,516,0.775,517,1.787,518,1.347,519,0.663,520,0.775,521,2.419,522,1.153,523,0.775,524,0.663,525,2.136,526,0.58,527,0.663,528,0.775,529,1.787,530,0.775,531,0.775,532,1.347,533,0.775,534,0.775,535,0.775,536,1.347,537,0.775,538,0.775,539,0.775,540,0.775,541,0.775,542,0.775,543,0.58,544,0.775,545,0.775,546,0.775,547,0.775,548,0.775,549,0.775,550,0.775,551,0.775,552,0.775,553,1.009,554,0.58,555,0.775,556,0.775,557,0.58,558,0.775,559,0.775,560,0.514,561,0.775,562,0.775,563,0.514,564,0.514]],["title/components/BlogComponent.html",[0,0.149,36,0.676]],["body/components/BlogComponent.html",[0,0.271,1,0.952,2,1.281,3,0.575,4,0.66,5,1.462,6,1.462,7,1.462,8,0.575,10,1.064,11,2.116,12,1.714,13,1.956,14,0.905,15,1.761,17,1.761,19,0.575,20,0.041,21,0.575,22,1.185,23,0.66,24,0.66,25,2.718,26,1.064,27,1.761,28,1.761,29,1.462,30,1.962,31,1.462,32,1.147,33,1.462,34,0.952,35,1.462,36,1.277,37,1.462,38,0.952,39,1.462,40,0.952,41,1.462,42,1.064,43,1.462,44,0.952,45,1.462,46,0.952,47,1.462,48,1.064,49,1.185,50,1.462,51,1.462,52,0.034,53,0.034,565,3.401,566,3.419,567,4.991,568,4.991]],["title/components/ContactComponent.html",[0,0.149,38,0.676]],["body/components/ContactComponent.html",[0,0.271,1,0.952,2,1.281,3,0.575,4,0.66,5,1.462,6,1.462,7,1.462,8,0.575,10,1.064,11,2.116,12,1.714,13,1.956,14,0.905,15,1.761,17,1.761,19,0.575,20,0.041,21,0.575,22,1.185,23,0.66,24,0.66,25,2.718,26,1.064,27,1.761,28,1.761,29,1.462,30,1.962,31,1.462,32,1.147,33,1.462,34,0.952,35,1.462,36,0.952,37,1.462,38,1.277,39,1.462,40,0.952,41,1.462,42,1.064,43,1.462,44,0.952,45,1.462,46,0.952,47,1.462,48,1.064,49,1.185,50,1.462,51,1.462,52,0.034,53,0.034,569,3.401,570,3.909,571,4.991,572,4.991]],["title/modules/CoreModule.html",[77,1.038,573,2.068]],["body/modules/CoreModule.html",[2,1.14,3,0.616,4,0.708,8,0.616,19,0.722,20,0.042,21,0.616,22,1.27,23,0.708,24,0.708,52,0.035,53,0.035,77,1.567,79,2.158,81,2.73,92,3.121,93,1.935,94,3.198,99,1.935,103,2.73,138,1.935,139,1.27,140,1.935,143,1.567,146,2.73,150,1.935,151,1.935,573,3.656,574,4.44,575,4.27,576,3.121,577,2.418,578,3.645,579,3.645,580,4.44,581,3.645]],["title/components/DevelopmentComponent.html",[0,0.149,40,0.676]],["body/components/DevelopmentComponent.html",[0,0.229,1,0.49,2,1.085,3,0.442,4,0.508,5,0.753,6,0.753,7,0.753,8,0.296,10,0.548,11,1.883,12,1.525,13,1.656,14,0.891,15,1.124,17,1.124,19,0.627,20,0.042,21,0.296,22,0.61,23,0.34,24,0.34,26,0.548,27,1.124,28,1.124,29,0.753,30,1.491,31,0.753,32,0.732,33,0.753,34,0.49,35,0.753,36,0.49,37,0.753,38,0.49,39,0.753,40,1.039,41,0.753,42,0.548,43,0.753,44,0.49,45,0.753,46,0.49,47,0.753,48,0.548,49,0.61,50,0.753,51,0.753,52,0.022,53,0.022,55,2.614,56,2.614,61,0.678,62,1.248,63,2.753,64,2.625,65,3.711,66,0.753,67,1.037,68,1.841,69,1.841,70,1.772,71,2.779,72,3.231,74,1.751,90,1.958,95,2.388,96,2.354,97,2.388,99,0.93,100,1.656,102,3.178,104,1.248,105,1.491,106,1.851,107,2.582,128,2.614,136,1.858,137,1.656,139,1.208,142,1.437,143,1.345,167,2.075,169,2.075,170,0.93,172,1.162,174,1.162,178,1.037,180,1.66,207,2.238,217,1.312,222,1.037,223,1.547,224,2.941,225,2.075,226,1.547,229,1.547,230,2.238,232,1.5,251,2.304,252,2.625,255,2.238,266,2.238,308,2.053,325,2.75,327,2.675,336,1.734,347,2.582,348,2.582,349,1.5,351,2.075,362,2.238,370,2.238,395,2.97,421,2.238,519,1.5,526,2.779,527,2.238,560,2.301,563,1.162,564,1.162,577,2.075,582,1.751,583,3.128,584,3.184,585,3.184,586,3.81,587,3.178,588,2.614,589,4.225,590,3.468,591,4.225,592,4.225,593,4.225,594,2.133,595,2.133,596,2.133,597,2.133,598,2.133,599,2.133,600,2.133,601,3.184,602,2.133,603,2.133,604,3.184,605,2.133,606,2.133,607,2.133,608,1.037,609,2.133,610,2.133,611,2.133,612,2.133,613,2.133,614,3.184,615,2.133,616,3.184,617,5.894,618,4.144,619,5.556,620,3.333,621,4.146,622,2.133,623,1.5,624,2.614,625,3.184,626,1.958,627,2.133,628,2.133,629,3.184,630,2.133,631,2.238,632,2.133,633,3.184,634,2.133,635,3.81,636,2.133,637,1.5,638,2.133,639,2.133,640,2.133,641,2.133,642,2.133,643,2.133,644,2.133,645,1.5,646,2.133,647,2.133,648,4.225,649,4.033,650,2.133,651,2.133,652,2.133,653,2.133,654,2.133,655,2.133,656,2.133,657,1.751,658,2.133,659,2.133,660,3.81,661,2.133,662,2.133,663,2.133,664,2.133,665,3.81,666,2.133,667,3.81,668,2.133,669,2.133,670,2.133,671,2.133,672,2.133,673,1.751,674,2.133,675,2.133,676,2.133,677,2.133,678,2.133,679,1.751,680,2.133,681,2.133,682,1.751,683,2.133,684,2.133,685,2.133,686,2.133,687,2.133,688,2.133,689,2.614,690,3.184,691,3.468,692,3.184,693,2.238,694,2.614,695,2.614,696,3.184,697,2.238,698,2.614,699,3.184,700,2.301,701,3.184,702,3.184,703,3.468,704,3.184,705,3.184,706,3.184,707,3.184,708,2.238,709,3.468,710,3.184,711,3.184,712,3.184,713,3.184,714,3.184,715,2.133,716,3.184,717,3.184,718,3.184,719,3.184,720,3.184,721,3.184,722,3.184,723,3.184,724,3.184]],["title/components/HeaderComponent.html",[0,0.149,42,0.755]],["body/components/HeaderComponent.html",[0,0.262,1,0.878,2,1.22,3,0.53,4,0.609,5,1.349,6,1.349,7,1.349,8,0.53,10,0.981,11,2.093,12,1.696,13,1.862,14,0.981,15,1.677,17,1.677,19,0.787,20,0.042,21,0.53,22,1.359,23,0.609,24,0.609,26,0.981,27,1.677,28,1.677,29,1.349,30,1.909,31,1.349,32,1.092,33,1.349,34,0.878,35,1.349,36,0.878,37,1.349,38,0.878,39,1.349,40,0.878,41,1.349,42,1.388,43,1.349,44,0.878,45,1.349,46,0.878,47,1.349,48,0.981,49,1.093,50,1.349,51,1.349,52,0.032,53,0.032,58,3.634,70,1.862,71,2.921,75,2.35,99,2.07,117,4.244,118,3.138,119,3.634,120,2.687,121,3.634,122,2.687,123,4.244,124,3.138,139,1.359,268,2.587,566,2.921,570,3.34,725,3.138,726,4.751,727,4.751,728,4.751,729,3.34,730,4.751,731,4.751,732,4.751,733,5.408,734,4.751]],["title/components/HomeComponent.html",[0,0.149,44,0.676]],["body/components/HomeComponent.html",[0,0.271,1,0.952,2,1.281,3,0.575,4,0.66,5,1.462,6,1.462,7,1.462,8,0.575,10,1.064,11,2.116,12,1.714,13,1.956,14,0.905,15,1.761,17,1.761,19,0.575,20,0.041,21,0.575,22,1.185,23,0.66,24,0.66,25,2.718,26,1.064,27,1.761,28,1.761,29,1.462,30,1.962,31,1.462,32,1.147,33,1.462,34,0.952,35,1.462,36,0.952,37,1.462,38,0.952,39,1.462,40,0.952,41,1.462,42,1.064,43,1.462,44,1.277,45,1.462,46,0.952,47,1.462,48,1.064,49,1.185,50,1.462,51,1.462,52,0.034,53,0.034,729,3.909,735,3.401,736,4.991,737,4.991]],["title/interfaces/LogEntry.html",[152,0.935,158,1.809]],["body/interfaces/LogEntry.html",[0,0.047,3,0.504,4,0.147,8,0.128,10,1.471,14,0.387,19,0.296,20,0.042,21,0.128,23,0.508,24,0.147,32,0.834,52,0.015,53,0.017,57,0.447,61,0.292,62,0.629,63,2.473,64,2.54,66,1.673,67,2.892,68,0.93,69,1.493,93,2.234,100,2.228,104,1.699,105,0.325,107,1.865,136,0.36,137,0.629,138,1.931,139,1.293,140,1.931,141,1.113,142,0.812,143,1.855,146,0.565,150,2.234,151,2.234,152,0.678,153,1.782,154,0.501,155,0.401,156,0.565,157,0.565,158,2.343,159,2.598,160,3.441,161,1.317,162,2.097,163,2.097,164,2.981,165,1.751,166,0.873,167,0.873,168,1.312,169,0.873,170,0.401,171,0.565,172,0.501,173,1.317,174,0.501,175,2.233,176,2.238,177,1.796,178,2.554,179,2.238,180,2.037,181,1.958,182,2.438,183,2.891,184,3.943,185,3.248,186,4.417,187,4.359,188,3.433,189,3.256,190,3.128,191,3.128,192,1.796,193,2.408,194,2.884,195,3.286,196,3.333,197,3.558,198,2.675,199,2.988,200,1.312,201,2.434,202,1.242,203,2.614,204,2.097,205,3.578,206,1.751,207,1.128,208,0.755,209,0.755,210,0.755,211,3.638,212,0.755,213,2.812,214,0.565,215,2.238,216,1.128,217,2.874,218,2.408,219,2.154,220,1.162,221,0.565,222,0.779,223,0.447,224,2.234,225,0.501,226,2.154,227,0.755,228,0.755,229,0.447,230,0.646,231,4.624,232,2.553,233,0.755,234,1.578,235,1.782,236,0.755,237,0.755,238,1.317,239,2.238,240,2.38,241,0.755,242,0.755,243,0.755,244,0.755,245,0.873,246,0.565,247,3.574,248,0.755,249,0.755,250,0.986,251,2.434,252,1.994,253,3.321,254,1.317,255,0.646,256,2.097,257,1.317,258,1.128,259,1.317,260,1.958,261,1.391,262,0.755,263,0.755,264,2.38,265,1.317,266,2.408,267,0.565,268,1.162,269,0.755,270,0.755,271,2.918,272,1.317,273,4.033,274,0.755,275,0.755,276,3.128,277,2.38,278,3.256,279,2.829,280,4.209,281,2.779,282,2.159,283,0.755,284,0.755,285,0.646,286,0.755,287,0.755,288,0.873,289,0.755,290,0.755,291,0.755,292,0.755,293,0.755,294,0.755,295,1.317,296,0.986,297,0.755,298,1.317,299,1.317,300,1.5,301,2.097,302,0.755,303,1.317,304,0.755,305,0.755,306,1.317,307,0.755,308,1.665,309,1.162,310,0.755,311,3.079,312,2.343,313,2.233,314,1.751,315,0.986,316,1.571,317,0.501,318,0.565,319,1.571,320,0.755,321,1.317,322,0.755,323,1.317,324,0.755,325,2.075,326,0.565,327,1.391,328,2.097,329,1.312,330,0.986,331,2.106,332,1.312,333,1.782,334,0.646,335,0.565,336,2.461,337,2.598,338,2.159,339,3.638,340,0.755,341,2.38,342,0.755,343,1.312,344,2.598,345,2.614,346,0.755,347,1.162,348,0.501,349,1.796,350,0.986,351,0.873,352,0.986,353,1.751,354,0.755,355,3.558,356,0.755,357,2.38,358,0.755,359,0.755,360,0.755,361,0.565,362,0.646,363,1.751,364,0.755,365,0.755,366,0.755,367,0.501,368,0.755,369,0.565,370,1.128,371,3.468,372,3.047,373,2.97,374,3.047,375,0.986,376,0.755,377,0.986,378,0.755,379,0.755,380,0.755,381,0.755,382,0.755,383,0.755,384,0.755,385,2.097,386,1.317,387,0.755,388,1.317,389,1.317,390,0.755,391,1.317,392,1.317,393,1.317,394,0.755,395,1.128,396,2.38,397,0.755,398,0.755,399,0.755,400,1.128,401,0.755,402,2.812,403,0.755,404,0.755,405,1.782,406,0.755,407,0.755,408,1.317,409,1.317,410,1.317,411,1.317,412,1.317,413,1.571,414,2.097,415,1.751,416,0.755,417,1.751,418,1.751,419,1.751,420,0.755,421,0.646,422,0.755,423,0.755,424,0.755,425,0.755,426,1.317,427,1.317,428,2.38,429,1.317,430,2.097,431,0.755,432,0.755,433,1.751,434,0.755,435,0.755,436,1.317,437,0.755,438,0.755,439,0.755,440,1.317,441,0.755,442,0.646,443,0.755,444,1.751,445,0.755,446,0.755,447,0.755,448,0.646,449,0.755,450,0.873,451,0.755,452,0.755,453,0.755,454,0.755,455,1.317,456,1.317,457,0.755,458,0.755,459,2.38,460,2.38,461,2.38,462,0.755,463,0.755,464,0.755,465,0.755,466,0.755,467,0.755,468,0.755,469,0.755,470,0.755,471,0.565,472,0.755,473,0.873,474,0.755,475,0.755,476,0.755,477,0.755,478,0.646,479,0.755,480,0.646,481,0.755,482,1.751,483,2.097,484,0.755,485,0.755,486,1.317,487,0.755,488,1.317,489,0.755,490,1.317,491,0.755,492,0.755,493,1.751,494,0.755,495,1.317,496,0.755,497,0.755,498,0.755,499,0.755,500,0.755,501,1.317,502,0.755,503,0.755,504,2.097,505,1.5,506,1.317,507,1.317,508,0.565,509,0.565,510,0.986,511,1.751,512,0.755,513,1.317,514,0.755,515,1.317,516,0.755,517,1.751,518,1.317,519,0.646,520,0.755,521,2.38,522,1.128,523,0.755,524,0.646,525,2.097,526,0.565,527,0.646,528,0.755,529,1.751,530,0.755,531,0.755,532,1.317,533,0.755,534,0.755,535,0.755,536,1.317,537,0.755,538,0.755,539,0.755,540,0.755,541,0.755,542,0.755,543,0.565,544,0.755,545,0.755,546,0.755,547,0.755,548,0.755,549,0.755,550,0.755,551,0.755,552,0.755,553,0.986,554,0.565,555,0.755,556,0.755,557,0.565,558,0.755,559,0.755,560,0.501,561,0.755,562,0.755,563,0.501,564,0.501]],["title/components/ServicesComponent.html",[0,0.149,46,0.676]],["body/components/ServicesComponent.html",[0,0.271,1,0.952,2,1.281,3,0.575,4,0.66,5,1.462,6,1.462,7,1.462,8,0.575,10,1.064,11,2.116,12,1.714,13,1.956,14,0.905,15,1.761,17,1.761,19,0.575,20,0.041,21,0.575,22,1.185,23,0.66,24,0.66,25,2.718,26,1.064,27,1.761,28,1.761,29,1.462,30,1.962,31,1.462,32,1.147,33,1.462,34,0.952,35,1.462,36,0.952,37,1.462,38,0.952,39,1.462,40,0.952,41,1.462,42,1.064,43,1.462,44,0.952,45,1.462,46,1.277,47,1.462,48,1.064,49,1.185,50,1.462,51,1.462,52,0.034,53,0.034,99,2.423,738,3.401,739,4.991,740,4.991]],["title/components/SwaggerComponent.html",[0,0.149,48,0.755]],["body/components/SwaggerComponent.html",[0,0.265,1,0.902,2,1.24,3,0.545,4,0.626,5,1.385,6,1.385,7,1.385,8,0.545,10,1.008,11,2.101,12,1.702,15,1.704,17,1.704,19,0.545,20,0.042,21,0.545,23,0.626,24,0.626,26,1.008,27,1.704,28,1.704,29,1.385,30,1.926,31,1.385,32,1.11,33,1.385,34,0.902,35,1.385,36,0.902,37,1.385,38,0.902,39,1.385,40,0.902,41,1.385,42,1.008,43,1.385,44,0.902,45,1.385,46,0.902,47,1.385,48,1.401,49,1.561,50,1.385,51,1.385,52,0.033,53,0.033,61,1.247,72,2.413,98,2.413,223,2.347,251,1.907,252,2.347,271,2.137,522,2.759,583,4.294,588,3.965,590,4.481,741,2.759,742,4.829,743,4.829,744,3.925,745,3.222,746,3.925,747,3.925,748,3.222,749,3.925,750,3.925,751,3.925,752,3.395,753,4.829,754,3.925,755,3.925,756,3.925,757,3.925,758,3.925,759,3.925,760,3.925,761,3.925,762,3.925,763,3.925,764,3.925]],["title/interfaces/ToasterConfig.html",[152,0.935,765,1.809]],["body/interfaces/ToasterConfig.html",[3,0.619,4,0.26,8,0.226,14,0.725,19,0.509,20,0.042,21,0.226,23,0.584,24,0.26,32,0.595,52,0.018,53,0.018,57,0.792,61,0.518,62,1.015,63,2.534,64,2.589,66,1.861,67,2.876,68,2.017,69,1.403,70,0.639,77,0.576,80,0.639,93,2.378,95,2.068,96,1.742,97,1.943,100,2.279,104,1.015,105,1.926,106,2.726,136,0.639,137,1.015,138,1.128,139,0.74,140,1.128,141,0.711,142,0.518,143,0.914,150,0.711,151,0.711,152,0.823,154,0.888,155,0.711,157,1.592,159,3.503,160,3.276,166,1.41,167,1.753,168,1.592,169,1.41,170,0.711,171,1.003,172,0.888,174,0.888,178,2.502,180,1.128,181,1.592,182,2.617,183,1.753,185,3.552,188,3.206,198,3.009,199,3.065,200,2.254,201,2.317,202,1.564,214,1.979,219,0.792,220,0.888,221,1.003,223,0.792,224,2.177,225,1.41,226,1.943,229,0.792,234,1.41,235,1.979,245,0.888,246,1.003,247,3.543,250,1.003,251,2.563,252,2.068,253,3.398,260,1.592,261,1.41,267,1.003,268,2.177,271,2.596,279,1.592,281,3.065,282,2.66,288,2.429,296,3.003,308,2.374,309,0.888,311,2.254,312,2.254,313,1.003,315,2.254,316,1.979,317,1.41,318,1.003,319,2.254,325,1.41,326,1.003,327,1.753,329,1.592,330,1.592,331,1.592,332,1.592,333,2.743,335,1.003,336,2.52,337,2.617,338,2.803,343,1.592,344,2.617,347,2.177,348,0.888,350,2.458,351,1.996,352,2.458,361,1.592,367,0.888,369,2.254,375,1.003,377,1.003,405,1.003,413,1.003,450,1.41,471,1.003,473,0.888,508,2.931,509,1.592,510,1.003,543,1.003,553,1.592,554,1.592,557,1.003,560,0.888,563,0.888,564,0.888,577,0.888,587,3.666,608,1.258,618,1.146,620,1.146,623,1.146,626,1.003,631,1.146,637,1.146,645,1.146,693,3.136,700,1.41,708,1.146,765,1.592,766,1.003,767,3.009,768,4.281,769,3.009,770,2.743,771,2.643,772,2.125,773,1.146,774,1.82,775,1.339,776,2.254,777,1.146,778,1.339,779,2.643,780,2.643,781,1.339,782,1.339,783,1.339,784,2.643,785,1.339,786,1.339,787,1.339,788,1.339,789,4.33,790,1.339,791,3.009,792,3.282,793,3.493,794,2.577,795,3.493,796,3.282,797,1.339,798,3.493,799,1.339,800,2.125,801,2.125,802,1.82,803,2.125,804,2.125,805,1.339,806,1.339,807,1.339,808,2.125,809,1.339,810,1.339,811,1.339,812,1.339,813,1.339,814,1.339,815,1.339,816,1.146,817,1.003,818,2.643,819,2.125,820,1.339,821,3.009,822,1.339,823,1.339,824,1.339,825,1.339,826,1.339,827,2.125,828,1.339,829,1.339,830,1.339,831,2.125,832,1.339,833,1.339,834,1.339,835,1.339,836,2.125,837,2.125,838,2.125,839,1.339,840,1.339,841,1.339,842,2.125,843,1.339,844,1.339,845,1.339,846,1.339,847,1.339,848,1.339,849,2.125,850,1.339,851,1.339,852,1.339,853,1.339,854,2.125,855,3.009,856,1.339,857,2.125,858,3.009,859,2.125,860,1.339,861,1.339,862,1.339,863,1.146,864,2.125,865,1.339,866,1.339,867,2.125,868,1.339,869,1.339,870,1.339,871,1.339,872,1.339,873,1.339,874,1.339,875,1.339,876,1.339,877,1.339,878,1.339,879,1.339,880,1.339,881,1.339,882,1.146,883,1.339,884,1.339,885,1.339,886,1.339,887,2.125,888,1.339,889,1.339]],["title/interfaces/ToasterMessage.html",[152,0.935,776,1.809]],["body/interfaces/ToasterMessage.html",[3,0.617,4,0.258,8,0.224,14,0.722,19,0.506,20,0.042,21,0.224,23,0.581,24,0.258,32,0.591,52,0.018,53,0.018,57,0.786,61,0.514,62,1.008,63,2.529,64,2.584,66,1.909,67,2.887,68,2.011,69,1.395,70,0.634,77,0.571,80,0.634,93,2.375,95,2.06,96,1.735,97,1.935,100,2.277,104,1.008,105,1.923,106,2.723,136,0.634,137,1.008,138,1.12,139,0.735,140,1.12,141,0.705,142,0.514,143,0.907,150,0.705,151,0.705,152,0.817,154,0.88,155,0.705,157,0.994,159,3.499,160,3.2,166,1.4,167,1.743,168,1.581,169,1.4,170,0.705,171,0.994,172,0.88,174,0.88,178,2.496,180,1.12,181,2.448,182,2.923,183,2.168,185,3.573,188,3.2,198,3.051,199,3.159,200,2.243,201,2.31,202,1.556,214,1.968,219,0.786,220,0.88,221,0.994,223,0.786,224,2.168,225,1.4,226,1.935,229,0.786,234,1.4,235,1.968,245,0.88,246,0.994,247,3.54,250,0.994,251,2.558,252,2.06,253,3.393,260,1.581,261,1.4,267,0.994,268,2.168,271,2.589,279,1.581,281,3.058,282,2.653,288,2.421,296,2.996,308,2.368,309,0.88,311,2.243,312,2.243,313,0.994,315,2.243,316,1.968,317,1.4,318,0.994,319,2.243,325,1.4,326,0.994,327,1.743,329,1.581,330,1.581,331,1.581,332,1.581,333,2.733,335,0.994,336,2.512,337,2.607,338,2.797,343,1.581,344,2.607,347,2.168,348,0.88,350,2.448,351,1.986,352,2.448,361,1.581,367,0.88,369,2.243,375,0.994,377,0.994,405,0.994,413,0.994,450,1.4,471,0.994,473,0.88,508,2.733,509,1.581,510,0.994,543,0.994,553,1.581,554,1.581,557,0.994,560,0.88,563,0.88,564,0.88,577,0.88,587,3.659,608,1.249,618,1.136,620,1.136,623,1.136,626,0.994,631,1.136,637,1.136,645,1.136,693,3.125,700,1.4,708,1.136,765,0.994,766,0.994,767,2.628,768,4.272,769,1.327,770,2.733,771,2.628,772,2.111,773,1.136,774,1.807,775,1.327,776,2.448,777,1.136,778,1.327,779,2.628,780,2.628,781,1.327,782,1.327,783,1.327,784,2.628,785,1.327,786,1.327,787,1.327,788,1.327,789,4.322,790,1.327,791,2.995,792,3.268,793,3.48,794,2.564,795,3.48,796,3.268,797,1.327,798,3.48,799,1.327,800,2.111,801,2.111,802,1.807,803,2.111,804,2.111,805,1.327,806,1.327,807,1.327,808,2.111,809,1.327,810,1.327,811,1.327,812,1.327,813,1.327,814,1.327,815,1.327,816,1.136,817,0.994,818,2.628,819,2.111,820,1.327,821,2.995,822,1.327,823,1.327,824,1.327,825,1.327,826,1.327,827,2.111,828,1.327,829,1.327,830,1.327,831,2.111,832,1.327,833,1.327,834,1.327,835,1.327,836,2.111,837,2.111,838,2.111,839,1.327,840,1.327,841,1.327,842,2.111,843,1.327,844,1.327,845,1.327,846,1.327,847,1.327,848,1.327,849,2.111,850,1.327,851,1.327,852,1.327,853,1.327,854,2.111,855,2.995,856,1.327,857,2.111,858,2.995,859,2.111,860,1.327,861,1.327,862,1.327,863,1.136,864,2.111,865,1.327,866,1.327,867,2.111,868,1.327,869,1.327,870,1.327,871,1.327,872,1.327,873,1.327,874,1.327,875,1.327,876,1.327,877,1.327,878,1.327,879,1.327,880,1.327,881,1.327,882,1.136,883,1.327,884,1.327,885,1.327,886,1.327,887,2.111,888,1.327,889,1.327]],["title/modules/UIServicesModuleService.html",[77,1.038,127,1.602]],["body/modules/UIServicesModuleService.html",[2,0.991,3,0.536,4,0.615,8,0.536,14,0.7,19,0.799,20,0.042,21,0.536,22,1.103,23,0.615,24,0.615,26,0.991,52,0.033,53,0.033,70,1.512,77,1.832,79,1.875,80,1.512,81,2.373,82,2.713,83,3.65,84,3.36,88,3.36,89,2.713,90,2.373,92,2.713,93,2.083,94,2.939,95,2.322,96,1.682,97,1.875,98,2.939,99,2.431,100,1.512,101,2.713,103,2.373,104,1.512,105,1.362,106,2.322,119,3.65,120,2.713,121,3.65,122,2.713,127,3.169,129,3.168,136,1.512,137,1.512,138,2.083,139,1.367,140,2.083,141,1.682,142,1.227,143,1.687,145,4.262,150,1.682,151,1.682,155,1.682,219,1.875,222,2.762,450,2.101,575,3.923,576,2.713,578,3.168,579,3.923,608,2.762,697,2.713,700,2.602,773,2.713,774,2.713,777,2.713,817,2.373,890,3.168,891,3.168,892,3.859,893,3.859,894,3.859,895,3.859,896,3.859]],["title/coverage.html",[897,2.816]],["body/coverage.html",[0,0.299,1,0.917,8,0.554,9,3.278,20,0.042,34,0.917,36,0.917,38,0.917,40,0.917,42,1.025,44,0.917,46,0.917,48,1.025,52,0.033,53,0.033,54,3.278,66,1.86,125,2.807,142,1.269,152,1.745,153,2.455,155,2.553,156,3.376,158,2.455,166,2.658,175,2.455,202,2.956,222,1.941,226,1.941,261,2.174,334,2.807,374,2.807,565,3.278,569,3.278,582,3.278,608,1.941,725,3.278,735,3.278,738,3.278,741,3.431,752,2.807,765,2.455,766,3.376,770,2.455,776,2.455,897,2.807,898,3.278,899,3.278,900,4.881,901,5.936,902,4.881,903,3.993,904,3.993,905,3.993,906,3.993,907,4.881,908,3.993,909,3.993,910,3.993,911,3.993]],["title/dependencies.html",[80,1.386,912,2.02]],["body/dependencies.html",[10,1.089,20,0.042,21,0.589,49,1.213,52,0.034,53,0.034,75,2.608,80,1.662,98,2.608,111,4.155,112,3.112,170,1.848,576,2.981,682,3.482,913,4.241,914,4.241,915,4.241,916,5.062,917,5.873,918,4.241,919,4.241,920,4.241,921,4.241,922,4.241,923,5.062,924,4.241,925,5.41,926,4.241,927,4.241,928,5.062,929,5.062,930,4.241,931,5.062,932,4.241,933,4.241,934,4.241,935,4.241,936,4.241,937,4.241,938,4.241,939,4.241,940,4.241,941,4.241,942,4.241,943,4.241,944,4.241,945,4.241,946,4.241,947,4.241]],["title/index.html",[61,0.935,948,2.942]],["body/index.html",[14,0.486,19,0.372,20,0.04,52,0.026,53,0.026,70,1.051,71,1.649,72,1.649,80,1.473,94,1.649,95,2.108,96,1.891,97,1.826,100,1.843,101,1.886,102,2.642,103,2.891,104,1.051,105,1.531,106,1.826,107,1.461,112,2.668,136,1.473,137,1.473,139,1.241,141,2.049,142,1.379,143,1.659,152,1.195,170,1.638,180,1.638,183,1.461,192,3.479,193,3.703,194,2.642,195,3.05,196,3.05,198,2.046,201,1.303,205,1.886,215,3.305,216,1.886,217,1.649,218,2.642,219,1.303,220,2.046,229,1.303,234,1.461,239,1.886,245,1.461,258,1.886,282,1.461,285,1.886,300,1.886,308,2.405,309,2.362,317,1.461,367,1.461,372,1.886,373,1.886,400,1.886,442,1.886,448,3.05,478,2.642,480,2.642,505,1.886,524,3.606,526,3.154,566,1.649,577,1.461,581,3.085,621,3.085,624,2.202,626,2.668,657,3.085,673,2.202,679,2.202,689,3.085,691,2.202,694,2.202,695,3.085,697,3.479,698,2.202,700,2.362,703,2.202,709,4.484,745,3.085,748,3.859,794,2.642,802,1.886,816,2.642,817,2.891,863,1.886,882,2.642,897,1.886,898,2.202,949,2.682,950,4.338,951,2.682,952,2.682,953,2.682,954,2.682,955,2.682,956,2.682,957,2.682,958,2.682,959,3.758,960,2.682,961,2.682,962,3.758,963,3.758,964,2.682,965,2.682,966,2.682,967,2.682,968,2.682,969,2.682,970,2.682,971,2.682,972,2.682,973,2.682,974,2.682,975,2.682,976,2.682,977,2.682,978,2.682,979,2.682,980,2.682,981,4.338,982,4.338,983,2.682,984,4.338,985,3.758,986,2.682,987,2.682,988,3.758,989,3.758,990,2.682,991,2.682,992,4.701,993,4.338,994,2.682,995,2.682,996,2.682,997,2.682,998,2.682,999,2.682,1000,2.682,1001,3.758,1002,3.758,1003,3.758,1004,3.758,1005,2.682,1006,4.338,1007,5.376,1008,2.682,1009,2.682,1010,2.682,1011,2.682,1012,4.338,1013,3.758,1014,2.682,1015,2.682,1016,2.682,1017,2.682,1018,2.682,1019,2.682,1020,2.682,1021,2.682,1022,2.682,1023,2.682,1024,2.682,1025,2.682,1026,2.682,1027,2.682,1028,4.701,1029,5.376,1030,5.376,1031,5.916,1032,3.758,1033,2.682,1034,2.682,1035,2.682,1036,2.682,1037,2.682,1038,4.701,1039,4.338,1040,4.701,1041,2.682,1042,4.338,1043,2.682,1044,2.682,1045,4.338,1046,2.682,1047,2.682,1048,3.758,1049,5.13,1050,2.682,1051,2.682,1052,4.338,1053,2.202,1054,4.338,1055,2.682,1056,2.682,1057,2.682,1058,2.682,1059,2.682,1060,2.682,1061,4.701,1062,4.95,1063,3.758,1064,2.682,1065,2.682,1066,2.682,1067,2.682,1068,2.682,1069,3.758,1070,4.338,1071,2.682,1072,3.758,1073,2.682,1074,2.682,1075,2.682,1076,2.682,1077,2.682,1078,2.202,1079,4.701,1080,4.701,1081,2.682,1082,2.682,1083,2.682,1084,2.682,1085,2.682,1086,5.376,1087,2.682,1088,2.682,1089,2.682,1090,2.682,1091,3.758,1092,2.682,1093,2.682,1094,2.682,1095,2.682,1096,2.682,1097,2.682,1098,2.682,1099,2.682,1100,2.682,1101,2.682,1102,2.682,1103,2.682,1104,2.682,1105,2.682,1106,2.682,1107,3.758,1108,2.682,1109,3.758,1110,2.682,1111,2.682,1112,2.682,1113,2.682,1114,2.682,1115,2.682,1116,2.682,1117,2.682,1118,2.682,1119,2.202,1120,2.682,1121,2.682,1122,2.682,1123,2.682,1124,2.682,1125,2.682,1126,2.682,1127,2.682,1128,2.682,1129,2.682,1130,2.682,1131,2.682,1132,2.682,1133,2.682]],["title/modules.html",[79,1.947]],["body/modules.html",[20,0.036,52,0.036,53,0.036,78,2.877,79,2.274,112,3.297,127,2.548,573,3.29,1078,3.842,1119,3.842,1134,5.362,1135,5.362,1136,5.635]],["title/overview.html",[1137,3.288]],["body/overview.html",[2,1.137,12,1.625,20,0.04,26,1.137,34,1.266,52,0.035,53,0.035,77,1.563,78,3.562,79,2.152,80,1.735,81,2.723,82,3.113,83,3.113,84,3.113,85,3.635,86,3.635,87,3.635,88,3.65,89,3.113,90,2.723,96,1.93,127,3.195,142,1.407,154,2.411,202,2.152,222,2.677,473,2.411,608,2.677,649,3.635,890,3.635,891,3.635,1137,3.635,1138,4.428]],["title/properties.html",[62,1.386,912,2.02]],["body/properties.html",[20,0.04,52,0.037,53,0.037,62,1.856,1053,3.887,1139,4.735,1140,4.735,1141,4.735]],["title/routes.html",[1142,3.288]],["body/routes.html",[20,0.037,52,0.037,53,0.037,1142,3.922]],["title/miscellaneous/typealiases.html",[1143,1.513,1144,3.536]],["body/miscellaneous/typealiases.html",[3,0.731,20,0.041,52,0.036,53,0.036,61,1.443,66,1.603,105,1.603,155,2.296,156,2.792,175,3.24,176,3.192,177,3.192,178,2.561,179,3.192,180,1.979,201,2.207,288,2.473,338,2.473,766,2.792,770,3.24,1143,2.792,1145,4.541,1146,4.541,1147,4.541]],["title/miscellaneous/variables.html",[1143,1.513,1148,2.903]],["body/miscellaneous/variables.html",[0,0.299,1,0.995,20,0.042,36,0.995,38,0.995,40,0.995,44,0.995,46,0.995,48,1.112,49,1.239,52,0.035,53,0.035,61,1.377,66,1.809,68,1.888,69,1.888,99,1.888,125,3.604,139,1.239,566,2.664,570,3.046,729,3.604,741,3.046,752,3.604,899,3.557,1143,2.664,1148,3.557,1149,4.332,1150,4.332,1151,4.332,1152,5.943,1153,4.332,1154,4.332,1155,4.332]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AuditEntry.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"modules/CoreModule.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogEntry.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":202,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"coverage.html":{},"overview.html":{}}}],["0.0.0",{"_index":1139,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":942,"title":{},"body":{"dependencies.html":{}}}],["0.15.0",{"_index":947,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":901,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":903,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":906,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":902,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":908,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":909,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":905,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":910,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":672,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["02",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuditEntry.html":{},"modules/CoreModule.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{}}}],["1",{"_index":526,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"index.html":{}}}],["1.6.0",{"_index":938,"title":{},"body":{"dependencies.html":{}}}],["1/40",{"_index":904,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuditEntry.html":{},"modules/CoreModule.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{}}}],["100",{"_index":203,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["1000",{"_index":444,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["11",{"_index":1020,"title":{},"body":{"index.html":{}}}],["11.0.0",{"_index":925,"title":{},"body":{"dependencies.html":{}}}],["11.1.6",{"_index":931,"title":{},"body":{"dependencies.html":{}}}],["11.2.0",{"_index":933,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":671,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["12:00",{"_index":949,"title":{},"body":{"index.html":{}}}],["13.2.0",{"_index":923,"title":{},"body":{"dependencies.html":{}}}],["16.11.0",{"_index":940,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["20.2.5",{"_index":916,"title":{},"body":{"dependencies.html":{}}}],["20.3",{"_index":1017,"title":{},"body":{"index.html":{}}}],["20.3.0",{"_index":917,"title":{},"body":{"dependencies.html":{}}}],["20.3.2",{"_index":914,"title":{},"body":{"dependencies.html":{}}}],["2025",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuditEntry.html":{},"modules/CoreModule.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{},"index.html":{}}}],["24",{"_index":537,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["2:00",{"_index":957,"title":{},"body":{"index.html":{}}}],["3",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"components/DevelopmentComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{},"index.html":{},"overview.html":{}}}],["3.13.0",{"_index":936,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":649,"title":{},"body":{"components/DevelopmentComponent.html":{},"overview.html":{}}}],["4000",{"_index":796,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["5.29.2",{"_index":945,"title":{},"body":{"dependencies.html":{}}}],["5000",{"_index":819,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["6",{"_index":979,"title":{},"body":{"index.html":{}}}],["60",{"_index":536,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["6000",{"_index":808,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["6:30",{"_index":960,"title":{},"body":{"index.html":{}}}],["7.8.0",{"_index":943,"title":{},"body":{"dependencies.html":{}}}],["8000",{"_index":806,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["9",{"_index":473,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"overview.html":{}}}],["about'},{'name",{"_index":33,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{}}}],["about.html",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.scss",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{}}}],["aboutcomponent",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["access",{"_index":362,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{}}}],["accomplished",{"_index":528,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["account_circle",{"_index":731,"title":{},"body":{"components/HeaderComponent.html":{}}}],["accountability",{"_index":480,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"index.html":{}}}],["accurate",{"_index":1067,"title":{},"body":{"index.html":{}}}],["achievements",{"_index":521,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["acted",{"_index":364,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["action",{"_index":159,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["active",{"_index":645,"title":{},"body":{"components/DevelopmentComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["actual",{"_index":506,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["actual_component",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{}}}],["actually",{"_index":1060,"title":{},"body":{"index.html":{}}}],["actualresults",{"_index":511,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["add",{"_index":377,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["adding",{"_index":1087,"title":{},"body":{"index.html":{}}}],["additional",{"_index":279,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["addtologs(entry",{"_index":439,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["aesthetics",{"_index":983,"title":{},"body":{"index.html":{}}}],["afterstart",{"_index":435,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["alias",{"_index":907,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1145,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["always",{"_index":1083,"title":{},"body":{"index.html":{}}}],["amber",{"_index":807,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["american",{"_index":967,"title":{},"body":{"index.html":{}}}],["analysis",{"_index":396,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["angular",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{},"index.html":{}}}],["angular/animations",{"_index":913,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":915,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":576,"title":{},"body":{"modules/CoreModule.html":{},"modules/UIServicesModuleService.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":918,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AuditEntry.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"modules/CoreModule.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogEntry.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":919,"title":{},"body":{"dependencies.html":{}}}],["angular/jest",{"_index":990,"title":{},"body":{"index.html":{}}}],["angular/material",{"_index":920,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{},"modules/UIServicesModuleService.html":{}}}],["angular/material/icon",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{},"modules/UIServicesModuleService.html":{}}}],["angular/material/menu",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{}}}],["angular/material/snack",{"_index":773,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{}}}],["angular/material/toolbar",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{}}}],["angular/platform",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"dependencies.html":{}}}],["api",{"_index":1021,"title":{},"body":{"index.html":{}}}],["apollo",{"_index":935,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{},"overview.html":{}}}],["app.html",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["app.routes",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["app.scss",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":34,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuditEntry.html":{},"modules/CoreModule.html":{},"interfaces/LogEntry.html":{}}}],["applications",{"_index":896,"title":{},"body":{"modules/UIServicesModuleService.html":{}}}],["appmodule",{"_index":78,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutes",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["architectural",{"_index":665,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["architecture",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"components/DevelopmentComponent.html":{},"index.html":{}}}],["archived",{"_index":674,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["array",{"_index":413,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["arrival",{"_index":549,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["async/await",{"_index":997,"title":{},"body":{"index.html":{}}}],["audit",{"_index":180,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["audit_warning",{"_index":675,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["auditentry",{"_index":153,"title":{"interfaces/AuditEntry.html":{}},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"coverage.html":{}}}],["auditlogs",{"_index":236,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["auditsubject",{"_index":228,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["auth",{"_index":266,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{}}}],["auth_test",{"_index":632,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["authaction",{"_index":358,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["authenticated",{"_index":262,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["authentication",{"_index":347,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["authmetadata",{"_index":357,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["author",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuditEntry.html":{},"modules/CoreModule.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{}}}],["auto",{"_index":794,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"index.html":{}}}],["autocompletion",{"_index":1117,"title":{},"body":{"index.html":{}}}],["automated",{"_index":984,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":1045,"title":{},"body":{"index.html":{}}}],["available",{"_index":1119,"title":{},"body":{"index.html":{},"modules.html":{}}}],["axios",{"_index":937,"title":{},"body":{"dependencies.html":{}}}],["backend",{"_index":478,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"index.html":{}}}],["backend's",{"_index":756,"title":{},"body":{"components/SwaggerComponent.html":{}}}],["backup",{"_index":681,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["bar",{"_index":774,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{}}}],["based",{"_index":1068,"title":{},"body":{"index.html":{}}}],["before",{"_index":369,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["beforeend",{"_index":437,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["behaviorsubject",{"_index":168,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["behaviorsubject(auditentry).pipe",{"_index":384,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["behaviorsubject(entry).pipe",{"_index":552,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["behaviorsubject(toastermessage).pipe",{"_index":881,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["behaviorsubject>(new",{"_index":243,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["being",{"_index":312,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["blog",{"_index":566,"title":{},"body":{"components/BlogComponent.html":{},"components/HeaderComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["blog'},{'name",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{}}}],["blog.html",{"_index":567,"title":{},"body":{"components/BlogComponent.html":{}}}],["blog.scss",{"_index":568,"title":{},"body":{"components/BlogComponent.html":{}}}],["blogcomponent",{"_index":36,"title":{"components/BlogComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["blue",{"_index":810,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["bold",{"_index":470,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["boolean",{"_index":508,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["bootstrap",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/UIServicesModuleService.html":{},"overview.html":{}}}],["bootstraps",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["break",{"_index":461,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["browse",{"_index":1136,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/animations",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["browsers",{"_index":1011,"title":{},"body":{"index.html":{}}}],["build",{"_index":1039,"title":{},"body":{"index.html":{}}}],["building",{"_index":706,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["built",{"_index":964,"title":{},"body":{"index.html":{}}}],["button",{"_index":792,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["caching",{"_index":1099,"title":{},"body":{"index.html":{}}}],["calculation",{"_index":482,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["call",{"_index":399,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["case",{"_index":344,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["categorization",{"_index":422,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["category",{"_index":186,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["change",{"_index":370,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{}}}],["changedetection",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/DevelopmentComponent.html":{}}}],["changedetectionstrategy",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/DevelopmentComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/DevelopmentComponent.html":{}}}],["changes",{"_index":360,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["channel",{"_index":1133,"title":{},"body":{"index.html":{}}}],["checks",{"_index":628,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["chromium",{"_index":994,"title":{},"body":{"index.html":{}}}],["ci",{"_index":1086,"title":{},"body":{"index.html":{}}}],["class",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AuditEntry.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"modules/CoreModule.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogEntry.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{}}}],["classification",{"_index":546,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["cleanup",{"_index":557,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["clear",{"_index":267,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["clearall",{"_index":848,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["cleared",{"_index":274,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["clearusercontext",{"_index":270,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["clicks",{"_index":877,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["cloud",{"_index":1091,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_uiservicesmoduleservice",{"_index":890,"title":{},"body":{"modules/UIServicesModuleService.html":{},"overview.html":{}}}],["cluster_uiservicesmoduleservice_providers",{"_index":891,"title":{},"body":{"modules/UIServicesModuleService.html":{},"overview.html":{}}}],["code",{"_index":1012,"title":{},"body":{"index.html":{}}}],["coding",{"_index":451,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["color",{"_index":450,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{}}}],["command",{"_index":1080,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":575,"title":{},"body":{"modules/CoreModule.html":{},"modules/UIServicesModuleService.html":{}}}],["community",{"_index":1127,"title":{},"body":{"index.html":{}}}],["complete",{"_index":505,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"index.html":{}}}],["completed",{"_index":405,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["completedat",{"_index":197,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["completedat.gettime",{"_index":513,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["completedat.toisostring",{"_index":518,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["completedpriority",{"_index":954,"title":{},"body":{"index.html":{}}}],["completetrackedoperation",{"_index":512,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["completion",{"_index":195,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"index.html":{}}}],["completionmetadata",{"_index":515,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["compliance",{"_index":220,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"index.html":{}}}],["component",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"interfaces/AuditEntry.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogEntry.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["component_lifecycle",{"_index":612,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["component_template",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"modules/CoreModule.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{},"modules/UIServicesModuleService.html":{},"overview.html":{}}}],["comprehensive",{"_index":215,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"index.html":{}}}],["config",{"_index":864,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["configuration",{"_index":367,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"index.html":{}}}],["configurations",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":863,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"index.html":{}}}],["configuring",{"_index":655,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["connect",{"_index":679,"title":{},"body":{"components/DevelopmentComponent.html":{},"index.html":{}}}],["connectconnecting",{"_index":1092,"title":{},"body":{"index.html":{}}}],["connecting",{"_index":622,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["connection_error",{"_index":684,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["connections",{"_index":653,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["console",{"_index":448,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"index.html":{}}}],["console.debug(prefix",{"_index":458,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["console.error(prefix",{"_index":464,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["console.info(prefix",{"_index":462,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["console.log('%c",{"_index":466,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["console.log('audit",{"_index":383,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["console.log('step_progress",{"_index":826,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["console.log('toaster_action",{"_index":879,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["console.warn(prefix",{"_index":463,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["const",{"_index":271,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"components/SwaggerComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["constructor",{"_index":245,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"index.html":{}}}],["constructor(private",{"_index":788,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["contact",{"_index":570,"title":{},"body":{"components/ContactComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["contact'},{'name",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{}}}],["contact.html",{"_index":571,"title":{},"body":{"components/ContactComponent.html":{}}}],["contact.scss",{"_index":572,"title":{},"body":{"components/ContactComponent.html":{}}}],["contactcomponent",{"_index":38,"title":{"components/ContactComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["containing",{"_index":281,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["content",{"_index":545,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["context",{"_index":240,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["continue",{"_index":846,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["contracting",{"_index":372,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"index.html":{}}}],["copy",{"_index":715,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["core",{"_index":577,"title":{},"body":{"modules/CoreModule.html":{},"components/DevelopmentComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"index.html":{}}}],["coremodule",{"_index":573,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules.html":{}}}],["correct",{"_index":1084,"title":{},"body":{"index.html":{}}}],["correctly",{"_index":1075,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":897,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":329,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["created",{"_index":282,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"index.html":{}}}],["creation",{"_index":544,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["critical",{"_index":303,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["criticalassigned",{"_index":955,"title":{},"body":{"index.html":{}}}],["crud",{"_index":326,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["current",{"_index":315,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["currentauditlogs",{"_index":378,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["currentlogs",{"_index":440,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["currentmessages",{"_index":860,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["currentperf",{"_index":388,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["currentperf.delete(`${operationname}_start",{"_index":404,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["currentperf.get(`${operationname}_start",{"_index":403,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["currentperf.set(`${operationname}_start",{"_index":390,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["currentstep",{"_index":821,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["currentstep}/${totalsteps",{"_index":823,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["data",{"_index":624,"title":{},"body":{"components/DevelopmentComponent.html":{},"index.html":{}}}],["database",{"_index":325,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["date",{"_index":183,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"index.html":{}}}],["date(starttime.gettime",{"_index":489,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["date.now",{"_index":391,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["days",{"_index":538,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["db_test",{"_index":615,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["dbmetadata",{"_index":341,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["dboperation",{"_index":342,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["deallocation",{"_index":558,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["debug",{"_index":176,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"miscellaneous/typealiases.html":{}}}],["debug(message",{"_index":283,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["declarations",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/UIServicesModuleService.html":{},"overview.html":{}}}],["declare",{"_index":751,"title":{},"body":{"components/SwaggerComponent.html":{}}}],["default",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":277,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["defense",{"_index":974,"title":{},"body":{"index.html":{}}}],["defined",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/DevelopmentComponent.html":{},"components/SwaggerComponent.html":{},"index.html":{}}}],["delegates",{"_index":888,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["delete",{"_index":332,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["delivering",{"_index":970,"title":{},"body":{"index.html":{}}}],["demo",{"_index":641,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["demonstrate",{"_index":692,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["demonstratetacticalnotifications",{"_index":589,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["demonstration",{"_index":640,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["dependencies",{"_index":80,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deployment",{"_index":711,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["description",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuditEntry.html":{},"modules/CoreModule.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{}}}],["design",{"_index":700,"title":{},"body":{"components/DevelopmentComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{},"index.html":{}}}],["destroy",{"_index":225,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["destroyed",{"_index":687,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["destruction",{"_index":555,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["detailed",{"_index":499,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["details",{"_index":296,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["detection",{"_index":698,"title":{},"body":{"components/DevelopmentComponent.html":{},"index.html":{}}}],["dev_page_destroy",{"_index":688,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["developer",{"_index":1113,"title":{},"body":{"index.html":{}}}],["development",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuditEntry.html":{},"modules/CoreModule.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["development'},{'name",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{}}}],["development.html",{"_index":584,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["development.scss",{"_index":585,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["developmentcomponent",{"_index":40,"title":{"components/DevelopmentComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["di",{"_index":1018,"title":{},"body":{"index.html":{}}}],["directive",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{}}}],["directives",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{}}}],["disable",{"_index":746,"title":{},"body":{"components/SwaggerComponent.html":{}}}],["discord",{"_index":1128,"title":{},"body":{"index.html":{}}}],["dismiss",{"_index":795,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["dismissed",{"_index":803,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["display",{"_index":789,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["displaying",{"_index":787,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["dist",{"_index":944,"title":{},"body":{"dependencies.html":{}}}],["distribution",{"_index":1100,"title":{},"body":{"index.html":{}}}],["docs",{"_index":1050,"title":{},"body":{"index.html":{}}}],["document",{"_index":366,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["documentation",{"_index":374,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{}}}],["dom_id",{"_index":759,"title":{},"body":{"components/SwaggerComponent.html":{}}}],["done",{"_index":1071,"title":{},"body":{"index.html":{}}}],["down",{"_index":562,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["driven",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/UIServicesModuleService.html":{},"index.html":{}}}],["dry",{"_index":1056,"title":{},"body":{"index.html":{}}}],["dual",{"_index":694,"title":{},"body":{"components/DevelopmentComponent.html":{},"index.html":{}}}],["duration",{"_index":198,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"index.html":{}}}],["duration}ms",{"_index":517,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["dynamic",{"_index":921,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":206,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["e2e",{"_index":992,"title":{},"body":{"index.html":{}}}],["editor",{"_index":1110,"title":{},"body":{"index.html":{}}}],["element",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{}}}],["end",{"_index":395,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{}}}],["enddate",{"_index":430,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["endtiming(operationname",{"_index":401,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["enforce",{"_index":1082,"title":{},"body":{"index.html":{}}}],["enhanced",{"_index":542,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["enriches",{"_index":1112,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":673,"title":{},"body":{"components/DevelopmentComponent.html":{},"index.html":{}}}],["ensures",{"_index":1093,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/UIServicesModuleService.html":{},"index.html":{}}}],["entity",{"_index":333,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["entries",{"_index":414,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["entry",{"_index":280,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["entry.category",{"_index":457,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["entry.level",{"_index":456,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["entry.message",{"_index":459,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["entry.metadata",{"_index":460,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["entry.stacktrace",{"_index":465,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["entry.timestamp.toisostring",{"_index":454,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["entry].slice",{"_index":446,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["error",{"_index":178,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"miscellaneous/typealiases.html":{}}}],["error(message",{"_index":297,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["error.message",{"_index":299,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["error.stack",{"_index":301,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["errormetadata",{"_index":298,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["errors",{"_index":293,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["eslint",{"_index":745,"title":{},"body":{"components/SwaggerComponent.html":{},"index.html":{}}}],["eslint/no",{"_index":749,"title":{},"body":{"components/SwaggerComponent.html":{}}}],["essential",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["est",{"_index":961,"title":{},"body":{"index.html":{}}}],["establishing",{"_index":652,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["estimated",{"_index":548,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["estimatedcompletiontime",{"_index":488,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["estimatedduration",{"_index":492,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["estimateddurationms",{"_index":483,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["estimation",{"_index":485,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["estlast",{"_index":958,"title":{},"body":{"index.html":{}}}],["estplanned",{"_index":951,"title":{},"body":{"index.html":{}}}],["eta",{"_index":194,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"index.html":{}}}],["etc",{"_index":363,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["example",{"_index":1029,"title":{},"body":{"index.html":{}}}],["exceptions",{"_index":294,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["exit_to_app",{"_index":734,"title":{},"body":{"components/HeaderComponent.html":{}}}],["expected",{"_index":484,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["experience",{"_index":1114,"title":{},"body":{"index.html":{}}}],["explicit",{"_index":750,"title":{},"body":{"components/SwaggerComponent.html":{}}}],["explore",{"_index":646,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["export",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AuditEntry.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"modules/CoreModule.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogEntry.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{}}}],["exportlogs(startdate",{"_index":432,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["exports",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/UIServicesModuleService.html":{},"overview.html":{}}}],["express",{"_index":929,"title":{},"body":{"dependencies.html":{}}}],["expressive",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"components/DevelopmentComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{},"index.html":{}}}],["extends",{"_index":157,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["extension",{"_index":1111,"title":{},"body":{"index.html":{}}}],["extent",{"_index":723,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["external",{"_index":425,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["factor",{"_index":841,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["failed",{"_index":519,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{}}}],["failed${details",{"_index":836,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["failure",{"_index":353,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["failures",{"_index":304,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["false",{"_index":804,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["fast",{"_index":1094,"title":{},"body":{"index.html":{}}}],["fatal",{"_index":179,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"miscellaneous/typealiases.html":{}}}],["fatal(message",{"_index":305,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["fatalmetadata",{"_index":306,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["feature",{"_index":704,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["features",{"_index":982,"title":{},"body":{"index.html":{}}}],["federal",{"_index":219,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{},"index.html":{}}}],["federalcompliance",{"_index":355,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["feedback",{"_index":691,"title":{},"body":{"components/DevelopmentComponent.html":{},"index.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AuditEntry.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"modules/CoreModule.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogEntry.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{},"coverage.html":{}}}],["files",{"_index":1048,"title":{},"body":{"index.html":{}}}],["filter",{"_index":412,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["filter(boolean",{"_index":868,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["filtered",{"_index":408,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["filtering",{"_index":276,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["finished",{"_index":550,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["firefox",{"_index":995,"title":{},"body":{"index.html":{}}}],["fix",{"_index":1004,"title":{},"body":{"index.html":{}}}],["flakiness",{"_index":1104,"title":{},"body":{"index.html":{}}}],["flow",{"_index":348,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["follow",{"_index":1129,"title":{},"body":{"index.html":{}}}],["following",{"_index":1079,"title":{},"body":{"index.html":{}}}],["font",{"_index":468,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["forbidden",{"_index":696,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["found",{"_index":407,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["foundation",{"_index":207,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{}}}],["frontend",{"_index":989,"title":{},"body":{"index.html":{}}}],["frontend/.../app.routes.ts",{"_index":1149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["frontend/.../logging.service.ts",{"_index":1146,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["frontend/.../swagger.ts",{"_index":1150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["frontend/.../toaster.service.ts",{"_index":1147,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["frontend/src/app/app",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["frontend/src/app/app.routes.ts",{"_index":899,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["frontend/src/app/app.ts",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["frontend/src/app/app.ts:14",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["frontend/src/app/layout/header.ts",{"_index":725,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["frontend/src/app/pages/about.ts",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["frontend/src/app/pages/blog.ts",{"_index":565,"title":{},"body":{"components/BlogComponent.html":{},"coverage.html":{}}}],["frontend/src/app/pages/contact.ts",{"_index":569,"title":{},"body":{"components/ContactComponent.html":{},"coverage.html":{}}}],["frontend/src/app/pages/development.ts",{"_index":582,"title":{},"body":{"components/DevelopmentComponent.html":{},"coverage.html":{}}}],["frontend/src/app/pages/development.ts:17",{"_index":603,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["frontend/src/app/pages/development.ts:18",{"_index":600,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["frontend/src/app/pages/development.ts:20",{"_index":605,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["frontend/src/app/pages/development.ts:21",{"_index":602,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["frontend/src/app/pages/development.ts:217",{"_index":595,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["frontend/src/app/pages/development.ts:23",{"_index":596,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["frontend/src/app/pages/development.ts:27",{"_index":597,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["frontend/src/app/pages/development.ts:31",{"_index":599,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["frontend/src/app/pages/development.ts:69",{"_index":598,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["frontend/src/app/pages/development.ts:97",{"_index":594,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["frontend/src/app/pages/home.ts",{"_index":735,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["frontend/src/app/pages/services.ts",{"_index":738,"title":{},"body":{"components/ServicesComponent.html":{},"coverage.html":{}}}],["frontend/src/app/shared/core/core",{"_index":574,"title":{},"body":{"modules/CoreModule.html":{}}}],["frontend/src/app/shared/ui",{"_index":155,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["frontend/src/app/swagger/swagger.ts",{"_index":741,"title":{},"body":{"components/SwaggerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["frontend/src/app/swagger/swagger.ts:12",{"_index":744,"title":{},"body":{"components/SwaggerComponent.html":{}}}],["full",{"_index":1155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fullest",{"_index":722,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["function",{"_index":1074,"title":{},"body":{"index.html":{}}}],["functionalities",{"_index":707,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["fundamental",{"_index":580,"title":{},"body":{"modules/CoreModule.html":{}}}],["future",{"_index":259,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["g",{"_index":1032,"title":{},"body":{"index.html":{}}}],["general",{"_index":278,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["generate",{"_index":882,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"index.html":{}}}],["generateid",{"_index":471,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["generatesessionid",{"_index":474,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["generating",{"_index":634,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["getclientip",{"_index":476,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["gethistory",{"_index":852,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["getlogsbycategory(category",{"_index":423,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["getlogsbylevel(level",{"_index":416,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["go",{"_index":712,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["government",{"_index":973,"title":{},"body":{"index.html":{}}}],["grade",{"_index":817,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{},"index.html":{}}}],["graph",{"_index":1078,"title":{},"body":{"index.html":{},"modules.html":{}}}],["graphql",{"_index":939,"title":{},"body":{"dependencies.html":{}}}],["green",{"_index":790,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["handle",{"_index":876,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["happen",{"_index":1058,"title":{},"body":{"index.html":{}}}],["header",{"_index":726,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{}}}],["header.html",{"_index":727,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.scss",{"_index":728,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":42,"title":{"components/HeaderComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{},"coverage.html":{}}}],["history",{"_index":779,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["home",{"_index":729,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["home'},{'name",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{}}}],["home.html",{"_index":736,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.scss",{"_index":737,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":44,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hook",{"_index":554,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["horizontalposition",{"_index":871,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["hot",{"_index":229,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"index.html":{}}}],["hours",{"_index":980,"title":{},"body":{"index.html":{}}}],["hoursactual",{"_index":952,"title":{},"body":{"index.html":{}}}],["hoursstatus",{"_index":953,"title":{},"body":{"index.html":{}}}],["html",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{}}}],["http://localhost:3000/api",{"_index":754,"title":{},"body":{"components/SwaggerComponent.html":{}}}],["httpclientmodule",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["id",{"_index":181,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["ide",{"_index":1118,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":261,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"coverage.html":{}}}],["implementation",{"_index":705,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["implements",{"_index":223,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"components/SwaggerComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["import",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AuditEntry.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"modules/CoreModule.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogEntry.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{},"index.html":{}}}],["importpath=@my",{"_index":1036,"title":{},"body":{"index.html":{}}}],["imports",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"modules/CoreModule.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"modules/UIServicesModuleService.html":{}}}],["improves",{"_index":1116,"title":{},"body":{"index.html":{}}}],["includes",{"_index":1097,"title":{},"body":{"index.html":{}}}],["inclusive",{"_index":429,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["index",{"_index":61,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"components/SwaggerComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":498,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["inferred",{"_index":1044,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AuditEntry.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"modules/CoreModule.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogEntry.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{},"miscellaneous/typealiases.html":{}}}],["info(message",{"_index":286,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["information",{"_index":285,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"index.html":{}}}],["informational",{"_index":811,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["infrastructure",{"_index":581,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["initialization",{"_index":648,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["initialized",{"_index":255,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{}}}],["initializes",{"_index":246,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["inject",{"_index":606,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["inject(loggingservice",{"_index":601,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["inject(toasterservice",{"_index":604,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["injectable",{"_index":166,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"coverage.html":{}}}],["injectables",{"_index":1138,"title":{},"body":{"overview.html":{}}}],["injected",{"_index":785,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["innovative",{"_index":972,"title":{},"body":{"index.html":{}}}],["insights",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"index.html":{}}}],["install",{"_index":1109,"title":{},"body":{"index.html":{}}}],["integrated",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["integration",{"_index":708,"title":{},"body":{"components/DevelopmentComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["integrity",{"_index":627,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["intellij",{"_index":1121,"title":{},"body":{"index.html":{}}}],["interface",{"_index":152,"title":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":154,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"overview.html":{}}}],["ipaddress",{"_index":161,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["issues",{"_index":290,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["jest",{"_index":1022,"title":{},"body":{"index.html":{}}}],["job",{"_index":1088,"title":{},"body":{"index.html":{}}}],["join",{"_index":1126,"title":{},"body":{"index.html":{}}}],["json",{"_index":755,"title":{},"body":{"components/SwaggerComponent.html":{}}}],["jwt",{"_index":635,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["kanban",{"_index":978,"title":{},"body":{"index.html":{}}}],["keep",{"_index":442,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"index.html":{}}}],["key",{"_index":527,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{}}}],["last",{"_index":443,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["lastmodified",{"_index":339,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["law",{"_index":724,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["layout",{"_index":763,"title":{},"body":{"components/SwaggerComponent.html":{}}}],["layout/header",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["learn",{"_index":1061,"title":{},"body":{"index.html":{}}}],["led",{"_index":965,"title":{},"body":{"index.html":{}}}],["legend",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{},"modules/UIServicesModuleService.html":{},"overview.html":{}}}],["legendary",{"_index":689,"title":{},"body":{"components/DevelopmentComponent.html":{},"index.html":{}}}],["lets",{"_index":1115,"title":{},"body":{"index.html":{}}}],["level",{"_index":184,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["library",{"_index":1028,"title":{},"body":{"index.html":{}}}],["license",{"_index":1140,"title":{},"body":{"properties.html":{}}}],["lifecycle",{"_index":553,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["line",{"_index":747,"title":{},"body":{"components/SwaggerComponent.html":{}}}],["linkedin",{"_index":1131,"title":{},"body":{"index.html":{}}}],["links",{"_index":1123,"title":{},"body":{"index.html":{}}}],["lint:fix",{"_index":1008,"title":{},"body":{"index.html":{}}}],["linting",{"_index":1001,"title":{},"body":{"index.html":{}}}],["live",{"_index":713,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["loading",{"_index":650,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["log",{"_index":231,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["log.category",{"_index":424,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["log.level",{"_index":420,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["log.timestamp.gettime",{"_index":434,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["log_${date.now()}_${math.random().tostring(36).substr(2",{"_index":472,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["logauthflow",{"_index":356,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["logdatabaseoperation",{"_index":340,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["logentry",{"_index":158,"title":{"interfaces/LogEntry.html":{}},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"coverage.html":{}}}],["logger",{"_index":586,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["logging",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{},"index.html":{}}}],["logging.service",{"_index":893,"title":{},"body":{"modules/UIServicesModuleService.html":{}}}],["loggingservice",{"_index":222,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"modules/UIServicesModuleService.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":350,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["loglevel",{"_index":175,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["logmessage",{"_index":504,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["logout",{"_index":268,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/HeaderComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["logphasecompletion",{"_index":531,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["logs",{"_index":232,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{}}}],["logs.filter(log",{"_index":419,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["logssubject",{"_index":227,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["logstep",{"_index":320,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["logtime",{"_index":433,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["long",{"_index":813,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["machines",{"_index":1102,"title":{},"body":{"index.html":{}}}],["major",{"_index":1010,"title":{},"body":{"index.html":{}}}],["management",{"_index":559,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["manually",{"_index":802,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"index.html":{}}}],["map",{"_index":173,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["map((logs",{"_index":418,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["map(currentperf",{"_index":393,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["markdownlint",{"_index":1003,"title":{},"body":{"index.html":{}}}],["marker",{"_index":486,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["market",{"_index":208,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["matbuttonmodule",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{},"modules/UIServicesModuleService.html":{}}}],["match",{"_index":397,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["matching",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AuditEntry.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"modules/CoreModule.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogEntry.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"components/DevelopmentComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{},"index.html":{}}}],["math.round((stepnumber",{"_index":322,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["math.round(duration",{"_index":535,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["maticonmodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{},"modules/UIServicesModuleService.html":{}}}],["matmenumodule",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{}}}],["matsnackbar",{"_index":771,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["matsnackbarconfig",{"_index":767,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["matsnackbarmodule",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/UIServicesModuleService.html":{}}}],["matsnackbarref",{"_index":772,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["mattoolbarmodule",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{}}}],["meets",{"_index":371,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["message",{"_index":185,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["message.id",{"_index":828,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["message.timestamp",{"_index":829,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["messageid",{"_index":827,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["messages",{"_index":780,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["messagessubject",{"_index":778,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["messaging",{"_index":497,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"interfaces/AuditEntry.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogEntry.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{},"dependencies.html":{}}}],["method",{"_index":543,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["methods",{"_index":588,"title":{},"body":{"components/DevelopmentComponent.html":{},"components/SwaggerComponent.html":{}}}],["metrics",{"_index":400,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"index.html":{}}}],["mfa",{"_index":351,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["milestone",{"_index":211,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["military",{"_index":816,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"index.html":{}}}],["milliseconds",{"_index":200,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["miscellaneous",{"_index":1143,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1141,"title":{},"body":{"properties.html":{}}}],["module",{"_index":77,"title":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/UIServicesModuleService.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{},"overview.html":{}}}],["module.ts",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/UIServicesModuleService.html":{}}}],["modules",{"_index":79,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/UIServicesModuleService.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":1023,"title":{},"body":{"index.html":{}}}],["monitoring",{"_index":218,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"index.html":{}}}],["more",{"_index":1049,"title":{},"body":{"index.html":{}}}],["more_vert",{"_index":732,"title":{},"body":{"components/HeaderComponent.html":{}}}],["multi",{"_index":309,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"index.html":{}}}],["multiple",{"_index":1101,"title":{},"body":{"index.html":{}}}],["name",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"interfaces/AuditEntry.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogEntry.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["navigation",{"_index":212,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["navigator.useragent",{"_index":257,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["nestjs",{"_index":1019,"title":{},"body":{"index.html":{}}}],["nestjs/apollo",{"_index":922,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":924,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":926,"title":{},"body":{"dependencies.html":{}}}],["nestjs/graphql",{"_index":927,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jest",{"_index":991,"title":{},"body":{"index.html":{}}}],["nestjs/platform",{"_index":928,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":932,"title":{},"body":{"dependencies.html":{}}}],["nestjs/websockets",{"_index":934,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":226,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"coverage.html":{}}}],["newlogs",{"_index":445,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["newvalue",{"_index":162,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["next",{"_index":522,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"components/SwaggerComponent.html":{}}}],["nextphase",{"_index":529,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["ngmodule",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/UIServicesModuleService.html":{},"index.html":{}}}],["ngmodules",{"_index":667,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["ngondestroy",{"_index":560,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["ngoninit",{"_index":590,"title":{},"body":{"components/DevelopmentComponent.html":{},"components/SwaggerComponent.html":{}}}],["none",{"_index":248,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["north",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{},"index.html":{}}}],["notification",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"components/DevelopmentComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{},"index.html":{}}}],["notifications",{"_index":693,"title":{},"body":{"components/DevelopmentComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["npm",{"_index":1006,"title":{},"body":{"index.html":{}}}],["npx",{"_index":1030,"title":{},"body":{"index.html":{}}}],["number",{"_index":199,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["nx",{"_index":1031,"title":{},"body":{"index.html":{}}}],["nx/js:lib",{"_index":1033,"title":{},"body":{"index.html":{}}}],["object",{"_index":295,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["observable",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{},"index.html":{}}}],["observables",{"_index":230,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{}}}],["october",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{},"index.html":{}}}],["ondemonstratetoaster",{"_index":591,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["ondestroy",{"_index":167,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["oninit",{"_index":583,"title":{},"body":{"components/DevelopmentComponent.html":{},"components/SwaggerComponent.html":{}}}],["onmoduledestroy",{"_index":887,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["onpush",{"_index":699,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["ontestauthenticationflow",{"_index":592,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["ontestdatabaseoperations",{"_index":593,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["openapi",{"_index":757,"title":{},"body":{"components/SwaggerComponent.html":{}}}],["operated",{"_index":335,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["operation",{"_index":188,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["operation.tolowercase",{"_index":833,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["operational",{"_index":421,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{}}}],["operationname",{"_index":311,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["operations",{"_index":327,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["operationtype",{"_index":493,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["optional",{"_index":160,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["options",{"_index":855,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["options.action",{"_index":858,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["options.duration",{"_index":857,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["options.persistent",{"_index":859,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["options.showtimestamp",{"_index":867,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["org/pkg1run",{"_index":1037,"title":{},"body":{"index.html":{}}}],["original",{"_index":507,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["out",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"components/DevelopmentComponent.html":{},"modules/UIServicesModuleService.html":{},"overview.html":{}}}],["output",{"_index":449,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["outputtoconsole(entry",{"_index":453,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["overview",{"_index":1137,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":912,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["package.json",{"_index":1047,"title":{},"body":{"index.html":{}}}],["packages",{"_index":1124,"title":{},"body":{"index.html":{}}}],["packages/pkg1",{"_index":1034,"title":{},"body":{"index.html":{}}}],["page",{"_index":686,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["pages/about",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/blog",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/contact",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/development",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/home",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/services",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["panelclass",{"_index":865,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["param",{"_index":247,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["parameters",{"_index":249,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["partial",{"_index":854,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["partners",{"_index":975,"title":{},"body":{"index.html":{}}}],["path",{"_index":1152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":1154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pattern",{"_index":666,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["patterns",{"_index":697,"title":{},"body":{"components/DevelopmentComponent.html":{},"modules/UIServicesModuleService.html":{},"index.html":{}}}],["peak",{"_index":661,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["penetration",{"_index":209,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["percentage",{"_index":204,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["perfect",{"_index":479,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["performance",{"_index":217,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"index.html":{}}}],["performancesubject",{"_index":242,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["performed",{"_index":361,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["performs",{"_index":556,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["persist",{"_index":800,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["persistence",{"_index":695,"title":{},"body":{"components/DevelopmentComponent.html":{},"index.html":{}}}],["persistent",{"_index":768,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["phase",{"_index":205,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"index.html":{}}}],["phase_${phasename.touppercase",{"_index":541,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["phase_tracking",{"_index":540,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["phaseduration",{"_index":534,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["phasemetadata",{"_index":532,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["phasename",{"_index":525,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["phases",{"_index":702,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["phasetype",{"_index":533,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["pipe(takeuntil(this.destroy",{"_index":617,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["pipeline",{"_index":1096,"title":{},"body":{"index.html":{}}}],["pkg1to",{"_index":1041,"title":{},"body":{"index.html":{}}}],["planned",{"_index":1025,"title":{},"body":{"index.html":{}}}],["plannedvsactual",{"_index":516,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["platform",{"_index":969,"title":{},"body":{"index.html":{}}}],["playwright",{"_index":993,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":1125,"title":{},"body":{"index.html":{}}}],["pm",{"_index":950,"title":{},"body":{"index.html":{}}}],["point",{"_index":825,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["postgresql",{"_index":1024,"title":{},"body":{"index.html":{}}}],["potential",{"_index":289,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["prefix",{"_index":455,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["preparation",{"_index":523,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["presets",{"_index":760,"title":{},"body":{"components/SwaggerComponent.html":{}}}],["previous",{"_index":368,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["previoususerid",{"_index":272,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["previousvalue",{"_index":163,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["primary",{"_index":623,"title":{},"body":{"components/DevelopmentComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["private",{"_index":224,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["pro",{"_index":966,"title":{},"body":{"index.html":{}}}],["process",{"_index":1077,"title":{},"body":{"index.html":{}}}],["processes",{"_index":310,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["production",{"_index":714,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["professional",{"_index":981,"title":{},"body":{"index.html":{}}}],["progress",{"_index":201,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["progress_update",{"_index":502,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["progressmessage",{"_index":822,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["progressmetadata",{"_index":501,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["progresspercentage",{"_index":503,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["prohibited",{"_index":720,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["project",{"_index":524,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"index.html":{}}}],["project.json",{"_index":1046,"title":{},"body":{"index.html":{}}}],["properties",{"_index":62,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"properties.html":{}}}],["prosecuted",{"_index":721,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["providebrowserglobalerrorlisteners",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":477,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["providedin",{"_index":221,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["providers",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/UIServicesModuleService.html":{},"overview.html":{}}}],["providing",{"_index":579,"title":{},"body":{"modules/CoreModule.html":{},"modules/UIServicesModuleService.html":{}}}],["public",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["publishable",{"_index":1035,"title":{},"body":{"index.html":{}}}],["purple",{"_index":467,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["qa",{"_index":710,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["quality",{"_index":1013,"title":{},"body":{"index.html":{}}}],["random",{"_index":883,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["range",{"_index":427,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["read",{"_index":330,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["readme",{"_index":948,"title":{"index.html":{}},"body":{}}],["readonly",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["ready",{"_index":657,"title":{},"body":{"components/DevelopmentComponent.html":{},"index.html":{}}}],["real",{"_index":192,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"index.html":{}}}],["record",{"_index":187,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["red",{"_index":799,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["redirectto",{"_index":1153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["references",{"_index":1062,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":941,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":352,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["regular",{"_index":381,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["related",{"_index":354,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["release",{"_index":1054,"title":{},"body":{"index.html":{}}}],["releasepass",{"_index":1055,"title":{},"body":{"index.html":{}}}],["releasing",{"_index":1052,"title":{},"body":{"index.html":{}}}],["reliability",{"_index":986,"title":{},"body":{"index.html":{}}}],["remain",{"_index":1066,"title":{},"body":{"index.html":{}}}],["remote",{"_index":1098,"title":{},"body":{"index.html":{}}}],["remove",{"_index":269,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["reporting",{"_index":426,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["require",{"_index":1069,"title":{},"body":{"index.html":{}}}],["required",{"_index":250,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["rerunning",{"_index":1105,"title":{},"body":{"index.html":{}}}],["reserved",{"_index":717,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["reset",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/UIServicesModuleService.html":{},"overview.html":{}}}],["resource",{"_index":164,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["resources",{"_index":886,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["responsive",{"_index":1027,"title":{},"body":{"index.html":{}}}],["results",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AuditEntry.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"modules/CoreModule.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogEntry.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":837,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["retrying",{"_index":683,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["return",{"_index":253,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["returns",{"_index":251,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"components/SwaggerComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["right",{"_index":872,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["rights",{"_index":716,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["root",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["root'},{'name",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{}}}],["route",{"_index":1151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{}}}],["routermodule.forroot(routes",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["routes",{"_index":1142,"title":{"routes.html":{}},"body":{"routes.html":{}}}],["run",{"_index":1007,"title":{},"body":{"index.html":{}}}],["running",{"_index":626,"title":{},"body":{"components/DevelopmentComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"index.html":{}}}],["runs",{"_index":1089,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":170,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"dependencies.html":{},"index.html":{}}}],["rxjs/operators",{"_index":174,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["scalable",{"_index":1095,"title":{},"body":{"index.html":{}}}],["scaling",{"_index":210,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["scheduled",{"_index":670,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["scheme",{"_index":782,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["schemes",{"_index":777,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{}}}],["scripts",{"_index":1005,"title":{},"body":{"index.html":{}}}],["search",{"_index":730,"title":{},"body":{"components/HeaderComponent.html":{}}}],["secure",{"_index":971,"title":{},"body":{"index.html":{}}}],["security",{"_index":349,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{}}}],["see",{"_index":1057,"title":{},"body":{"index.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{}}}],["server",{"_index":682,"title":{},"body":{"components/DevelopmentComponent.html":{},"dependencies.html":{}}}],["service",{"_index":214,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["services",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/ServicesComponent.html":{},"modules/UIServicesModuleService.html":{},"miscellaneous/variables.html":{}}}],["services'},{'name",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{}}}],["services.html",{"_index":739,"title":{},"body":{"components/ServicesComponent.html":{}}}],["services.scss",{"_index":740,"title":{},"body":{"components/ServicesComponent.html":{}}}],["services/logging.service",{"_index":610,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["services/logging.service.ts",{"_index":156,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["services/toaster.service",{"_index":609,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["services/toaster.service.ts",{"_index":766,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["services/ui",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"modules/UIServicesModuleService.html":{}}}],["servicescomponent",{"_index":46,"title":{"components/ServicesComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["session",{"_index":238,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["session_${date.now()}_${math.random().tostring(36).substr(2",{"_index":475,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["sessionid",{"_index":190,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["set",{"_index":258,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"index.html":{}}}],["settings",{"_index":733,"title":{},"body":{"components/HeaderComponent.html":{}}}],["setup",{"_index":703,"title":{},"body":{"components/DevelopmentComponent.html":{},"index.html":{}}}],["setusercontext(userid",{"_index":263,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["severity",{"_index":410,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["shared",{"_index":578,"title":{},"body":{"modules/CoreModule.html":{},"modules/UIServicesModuleService.html":{}}}],["shared/ui",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"components/DevelopmentComponent.html":{}}}],["sharereplay",{"_index":171,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["sharereplay(1",{"_index":234,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"index.html":{}}}],["show",{"_index":856,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["showauthflow",{"_index":839,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["showdatabaseoperation",{"_index":830,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["showerror",{"_index":677,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["showerror(message",{"_index":805,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["showinfo",{"_index":664,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["showinfo(message",{"_index":812,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["showprogress(message",{"_index":814,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["showstepprogress",{"_index":620,"title":{},"body":{"components/DevelopmentComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["showstepprogress('auth",{"_index":633,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["showsuccess",{"_index":659,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["showsuccess('authentication",{"_index":638,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["showsuccess('database",{"_index":630,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["showsuccess(message",{"_index":797,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["showtactical",{"_index":643,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["showtactical(message",{"_index":820,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["showtimestamp",{"_index":769,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["showwarning",{"_index":669,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["showwarning(message",{"_index":809,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["shutting",{"_index":561,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["simulated",{"_index":678,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["snack",{"_index":786,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["snackbar",{"_index":784,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["snackbar/toaster",{"_index":999,"title":{},"body":{"index.html":{}}}],["snackbarref",{"_index":873,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["snackbarref.onaction().pipe",{"_index":878,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["socket.io",{"_index":930,"title":{},"body":{"dependencies.html":{}}}],["solutions",{"_index":962,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AuditEntry.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"modules/CoreModule.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogEntry.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{}}}],["spec",{"_index":758,"title":{},"body":{"components/SwaggerComponent.html":{}}}],["special",{"_index":815,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["specialized",{"_index":976,"title":{},"body":{"index.html":{}}}],["specific",{"_index":409,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["specified",{"_index":415,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["splitting",{"_index":1103,"title":{},"body":{"index.html":{}}}],["stack",{"_index":300,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"index.html":{}}}],["stacktrace",{"_index":191,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["standalone",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{}}}],["standalonelayout",{"_index":764,"title":{},"body":{"components/SwaggerComponent.html":{}}}],["standards",{"_index":373,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"index.html":{}}}],["start",{"_index":337,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["start_tracked",{"_index":494,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["startdate",{"_index":428,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["startdate.gettime",{"_index":436,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["started",{"_index":530,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["starting",{"_index":496,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["starttime",{"_index":402,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["starttime.gettime",{"_index":514,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["starttime.toisostring",{"_index":491,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["starttiming",{"_index":398,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["starttiming(operationname",{"_index":387,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["starttrackedoperation",{"_index":487,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["state",{"_index":1085,"title":{},"body":{"index.html":{}}}],["statements",{"_index":898,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["status",{"_index":336,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["status}${details",{"_index":831,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["step",{"_index":308,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"index.html":{}}}],["stepdescription",{"_index":319,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["stepmetadata",{"_index":321,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["stepname",{"_index":842,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["stepnames",{"_index":840,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["stepnames[step",{"_index":843,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["stepnumber",{"_index":314,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["stepnumber}/${totalsteps",{"_index":324,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["steps",{"_index":318,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["stream",{"_index":851,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["streams",{"_index":998,"title":{},"body":{"index.html":{}}}],["strictly",{"_index":719,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["string",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["stylelint",{"_index":1002,"title":{},"body":{"index.html":{}}}],["styleurl",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{}}}],["styling",{"_index":818,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["subject",{"_index":169,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["subscribe",{"_index":618,"title":{},"body":{"components/DevelopmentComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["success",{"_index":338,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"miscellaneous/typealiases.html":{}}}],["successful",{"_index":631,"title":{},"body":{"components/DevelopmentComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["successfully",{"_index":510,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["such",{"_index":1072,"title":{},"body":{"index.html":{}}}],["suffix",{"_index":884,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["suite",{"_index":987,"title":{},"body":{"index.html":{}}}],["support",{"_index":1134,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1135,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["swagger.css",{"_index":743,"title":{},"body":{"components/SwaggerComponent.html":{}}}],["swagger.html",{"_index":742,"title":{},"body":{"components/SwaggerComponent.html":{}}}],["swaggercomponent",{"_index":48,"title":{"components/SwaggerComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggeruibundle",{"_index":752,"title":{},"body":{"components/SwaggerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggeruibundle.presets.apis",{"_index":761,"title":{},"body":{"components/SwaggerComponent.html":{}}}],["swaggeruibundle.swaggeruistandalonepreset",{"_index":762,"title":{},"body":{"components/SwaggerComponent.html":{}}}],["switch",{"_index":343,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["sync",{"_index":1070,"title":{},"body":{"index.html":{}}}],["sync:checklearn",{"_index":1090,"title":{},"body":{"index.html":{}}}],["syncyou",{"_index":1081,"title":{},"body":{"index.html":{}}}],["system",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"index.html":{}}}],["system_ready",{"_index":662,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["systems",{"_index":660,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["table",{"_index":334,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":911,"title":{},"body":{"coverage.html":{}}}],["tactical",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["tacticalcolors",{"_index":783,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["takeuntil",{"_index":172,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["takeuntil(this.destroy",{"_index":235,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["tap",{"_index":775,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["targeted",{"_index":411,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["targets",{"_index":1043,"title":{},"body":{"index.html":{}}}],["task",{"_index":1042,"title":{},"body":{"index.html":{}}}],["tasks",{"_index":1038,"title":{},"body":{"index.html":{}}}],["team",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuditEntry.html":{},"modules/CoreModule.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{}}}],["teamactual",{"_index":956,"title":{},"body":{"index.html":{}}}],["technical",{"_index":1016,"title":{},"body":{"index.html":{}}}],["technology",{"_index":968,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{}}}],["templateurl",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{}}}],["tertiary",{"_index":680,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["test",{"_index":621,"title":{},"body":{"components/DevelopmentComponent.html":{},"index.html":{}}}],["test:all",{"_index":1009,"title":{},"body":{"index.html":{}}}],["testing",{"_index":709,"title":{},"body":{"components/DevelopmentComponent.html":{},"index.html":{}}}],["text",{"_index":793,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["theme",{"_index":791,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["this.addtologs(auditentry",{"_index":382,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.addtologs(entry",{"_index":551,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.auditsubject$.next([...currentauditlogs",{"_index":380,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.auditsubject$.pipe",{"_index":237,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.auditsubject$.value",{"_index":379,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.debug(`started",{"_index":394,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.demonstratetacticalnotifications",{"_index":613,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["this.destroy$.complete",{"_index":564,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["this.destroy$.next",{"_index":563,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["this.error(message",{"_index":346,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.generateid",{"_index":375,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["this.generatesessionid",{"_index":241,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.getclientip",{"_index":376,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.info",{"_index":323,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.info('loggingservice",{"_index":254,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.info('user",{"_index":265,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.info(message",{"_index":345,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.log('audit",{"_index":539,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.log('info",{"_index":495,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.log(level",{"_index":438,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.log(success",{"_index":520,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.logbasic('debug",{"_index":284,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.logbasic('error",{"_index":302,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.logbasic('fatal",{"_index":307,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.logbasic('info",{"_index":287,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.logbasic('warn",{"_index":292,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.logger.info('development",{"_index":685,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["this.logger.info('starting",{"_index":639,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["this.logger.info('testing",{"_index":614,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["this.logger.log('info",{"_index":611,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["this.logs$.pipe",{"_index":417,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.logssubject$.next(newlogs",{"_index":447,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.logssubject$.pipe",{"_index":233,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.logssubject$.value",{"_index":441,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.messages",{"_index":853,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["this.messagessubject$.next",{"_index":850,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["this.messagessubject$.next([...currentmessages",{"_index":862,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["this.messagessubject$.pipe",{"_index":781,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["this.messagessubject$.value",{"_index":861,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["this.onmoduledestroy",{"_index":889,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["this.outputtoconsole(entry",{"_index":452,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.performancesubject$.next(new",{"_index":392,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.performancesubject$.pipe",{"_index":244,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.performancesubject$.value",{"_index":389,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.sessionid",{"_index":256,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.show(message",{"_index":798,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["this.show(progressmessage",{"_index":824,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["this.showerror(`${operation",{"_index":835,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["this.showerror(`${stepname",{"_index":847,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["this.showinfo(message",{"_index":838,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["this.showprogress(`${stepname",{"_index":844,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["this.showprogress(`starting",{"_index":832,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["this.showsuccess(`${operation",{"_index":834,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["this.showtactical(`${stepname",{"_index":845,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["this.snackbar.dismiss",{"_index":849,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["this.snackbar.open",{"_index":874,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["this.tacticalcolors[type",{"_index":866,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["this.toaster",{"_index":619,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["this.userid",{"_index":264,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.warn",{"_index":406,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["this.warn(message",{"_index":359,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["throughout",{"_index":895,"title":{},"body":{"modules/UIServicesModuleService.html":{}}}],["time",{"_index":193,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"index.html":{}}}],["timed",{"_index":386,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["timer",{"_index":607,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["timer(1000",{"_index":642,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["timer(11000",{"_index":663,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["timer(13000",{"_index":668,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["timer(1500",{"_index":625,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["timer(15000",{"_index":676,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["timer(2500",{"_index":629,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["timer(3000",{"_index":647,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["timer(4500",{"_index":651,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["timer(500",{"_index":616,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["timer(6000",{"_index":654,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["timer(7500",{"_index":656,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["timer(9000",{"_index":658,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["timestamp",{"_index":182,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["timestamps",{"_index":985,"title":{},"body":{"index.html":{}}}],["timing",{"_index":385,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["title",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/DevelopmentComponent.html":{}}}],["toaster",{"_index":587,"title":{},"body":{"components/DevelopmentComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["toaster.service",{"_index":892,"title":{},"body":{"modules/UIServicesModuleService.html":{}}}],["toaster_${date.now()}_${math.random().tostring(36).substr(2",{"_index":885,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["toasterconfig",{"_index":765,"title":{"interfaces/ToasterConfig.html":{}},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"coverage.html":{}}}],["toastermessage",{"_index":776,"title":{"interfaces/ToasterMessage.html":{}},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"coverage.html":{}}}],["toastermessage.id",{"_index":880,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["toastermessage.timestamp.tolocaletimestring",{"_index":875,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["toasterservice",{"_index":608,"title":{},"body":{"components/DevelopmentComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{},"coverage.html":{},"overview.html":{}}}],["toastertype",{"_index":770,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["token",{"_index":637,"title":{},"body":{"components/DevelopmentComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["top",{"_index":870,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["total",{"_index":317,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"index.html":{}}}],["totalsteps",{"_index":316,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["trace",{"_index":547,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["tracked",{"_index":313,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["tracking",{"_index":196,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"index.html":{}}}],["trackingmetadata",{"_index":490,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["traditional",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{},"index.html":{}}}],["trail",{"_index":328,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["trails",{"_index":216,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"index.html":{}}}],["transparency",{"_index":481,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{}}}],["trigger",{"_index":1076,"title":{},"body":{"index.html":{}}}],["troubleshooting",{"_index":275,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["true",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AuditEntry.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/LogEntry.html":{},"components/ServicesComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"modules/UIServicesModuleService.html":{},"index.html":{}}}],["tsconfig.json",{"_index":1065,"title":{},"body":{"index.html":{}}}],["type",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1144,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typecheck",{"_index":1073,"title":{},"body":{"index.html":{}}}],["typescript",{"_index":748,"title":{},"body":{"components/SwaggerComponent.html":{},"index.html":{}}}],["ui",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"components/SwaggerComponent.html":{},"modules/UIServicesModuleService.html":{},"dependencies.html":{}}}],["ui/ux",{"_index":1026,"title":{},"body":{"index.html":{}}}],["uiservicesmoduleservice",{"_index":127,"title":{"modules/UIServicesModuleService.html":{}},"body":{"modules/AppModule.html":{},"modules/UIServicesModuleService.html":{},"modules.html":{},"overview.html":{}}}],["unauthorized",{"_index":718,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["undefined",{"_index":273,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["unique",{"_index":260,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["unit",{"_index":988,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":213,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["until",{"_index":801,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["up",{"_index":1063,"title":{},"body":{"index.html":{}}}],["update",{"_index":331,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["updated",{"_index":959,"title":{},"body":{"index.html":{}}}],["updateprogress",{"_index":500,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["updates",{"_index":1064,"title":{},"body":{"index.html":{}}}],["upon",{"_index":365,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["url",{"_index":753,"title":{},"body":{"components/SwaggerComponent.html":{}}}],["use",{"_index":1040,"title":{},"body":{"index.html":{}}}],["useful",{"_index":1122,"title":{},"body":{"index.html":{}}}],["user",{"_index":239,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"index.html":{}}}],["useragent",{"_index":165,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["userid",{"_index":189,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["using",{"_index":894,"title":{},"body":{"modules/UIServicesModuleService.html":{}}}],["ux",{"_index":690,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["v3",{"_index":701,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["validating",{"_index":636,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["validation",{"_index":1000,"title":{},"body":{"index.html":{}}}],["value",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/DevelopmentComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{},"components/SwaggerComponent.html":{}}}],["variable",{"_index":900,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1148,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1053,"title":{},"body":{"index.html":{},"properties.html":{}}}],["versioning",{"_index":1051,"title":{},"body":{"index.html":{}}}],["verticalposition",{"_index":869,"title":{},"body":{"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["veteran",{"_index":963,"title":{},"body":{"index.html":{}}}],["violations",{"_index":1015,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":977,"title":{},"body":{"index.html":{}}}],["void",{"_index":252,"title":{},"body":{"interfaces/AuditEntry.html":{},"components/DevelopmentComponent.html":{},"interfaces/LogEntry.html":{},"components/SwaggerComponent.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["vscode",{"_index":1120,"title":{},"body":{"index.html":{}}}],["warn",{"_index":177,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"miscellaneous/typealiases.html":{}}}],["warn(message",{"_index":291,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["warning",{"_index":288,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{},"miscellaneous/typealiases.html":{}}}],["webkit",{"_index":996,"title":{},"body":{"index.html":{}}}],["weight",{"_index":469,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["welcome",{"_index":644,"title":{},"body":{"components/DevelopmentComponent.html":{}}}],["whether",{"_index":509,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{},"interfaces/ToasterConfig.html":{},"interfaces/ToasterMessage.html":{}}}],["within",{"_index":431,"title":{},"body":{"interfaces/AuditEntry.html":{},"interfaces/LogEntry.html":{}}}],["without",{"_index":1059,"title":{},"body":{"index.html":{}}}],["workflow",{"_index":1106,"title":{},"body":{"index.html":{}}}],["workflowlearn",{"_index":1108,"title":{},"body":{"index.html":{}}}],["works",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{},"components/BlogComponent.html":{},"components/ContactComponent.html":{},"components/HomeComponent.html":{},"components/ServicesComponent.html":{}}}],["workspace",{"_index":1107,"title":{},"body":{"index.html":{}}}],["x",{"_index":1130,"title":{},"body":{"index.html":{}}}],["youtube",{"_index":1132,"title":{},"body":{"index.html":{}}}],["zero",{"_index":1014,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":946,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/UIServicesModuleService.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    frontend/src/app/pages/about.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./about.html\n            \n\n\n\n            \n                styleUrl\n                ./about.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  standalone: true,\n  imports: [],\n  templateUrl: './about.html',\n  styleUrl: './about.scss',\n})\nexport class AboutComponent {}\n\n    \n\n    \n        about works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'about works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogComponent', 'selector': 'app-blog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DevelopmentComponent', 'selector': 'app-development'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ServicesComponent', 'selector': 'app-services'},{'name': 'SwaggerComponent', 'selector': 'app-swagger'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    frontend/src/app/app.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                                HeaderComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.html\n            \n\n\n\n            \n                styleUrl\n                ./app.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'True North Insights'\n                    \n                \n                    \n                        \n                                Defined in frontend/src/app/app.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HeaderComponent } from './layout/header';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterModule, HeaderComponent],\n  templateUrl: './app.html',\n  styleUrl: './app.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent {\n  public readonly title = 'True North Insights';\n}\n\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogComponent', 'selector': 'app-blog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DevelopmentComponent', 'selector': 'app-development'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ServicesComponent', 'selector': 'app-services'},{'name': 'SwaggerComponent', 'selector': 'app-swagger'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nApp \n\nApp \n\nApp  -->\n\nAppModule->App \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            frontend/src/app/app-module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Root NgModule with Material 3 Expressive UI services\nObservable-driven architecture with enterprise logging\nTactical notification system integrated\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            App\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, provideBrowserGlobalErrorListeners } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { App } from './app';\nimport { appRoutes } from './app.routes';\nimport { UIServicesModuleService } from './shared/ui-services/ui-services-module';\nimport { HeaderComponent } from './layout/header';\nimport { HomeComponent } from './pages/home';\nimport { AboutComponent } from './pages/about';\nimport { ServicesComponent } from './pages/services';\nimport { BlogComponent } from './pages/blog';\nimport { ContactComponent } from './pages/contact';\nimport { DevelopmentComponent } from './pages/development';\n\n/**\n * @description Traditional Angular root module with Material 3 Expressive UI services\n * @author True North Development Team\n * @since October 2, 2025\n * \n * Root NgModule with Material 3 Expressive UI services\n * Observable-driven architecture with enterprise logging\n * Tactical notification system integrated\n */\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(routes),\n    BrowserAnimationsModule,\n    MatSnackBarModule,\n  ],\n  providers: [\n    provideBrowserGlobalErrorListeners()\n  ],\n  bootstrap: [App],\n})\n/**\n * @description Root application module that bootstraps the Angular application with essential configurations and providers\n * @author Development Team\n * @since 2025-10-02\n */\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuditEntry.html":{"url":"interfaces/AuditEntry.html","title":"interface - AuditEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuditEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            frontend/src/app/shared/ui-services/logging.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            LogEntry\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ipAddress\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            newValue\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            previousValue\n                                        \n                                \n                                \n                                        \n                                            resource\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userAgent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ipAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ipAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newValue:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        previousValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        previousValue:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resource\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resource:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userAgent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userAgent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Subject, Observable } from 'rxjs';\nimport { shareReplay, takeUntil, map } from 'rxjs/operators';\n\nexport type LogLevel = 'DEBUG' | 'INFO' | 'WARN' | 'ERROR' | 'FATAL' | 'AUDIT';\n\nexport interface LogEntry {\n  readonly id: string;\n  readonly timestamp: Date;\n  readonly level: LogLevel;\n  readonly message: string;\n  readonly category: string;\n  readonly metadata?: Record;\n  readonly operation?: string;\n  readonly userId?: string;\n  readonly sessionId?: string;\n  readonly stackTrace?: string;\n  // Real-time ETA and completion tracking\n  readonly eta?: Date;\n  readonly completedAt?: Date;\n  readonly duration?: number; // milliseconds\n  readonly progress?: number; // 0-100 percentage\n  readonly phase?: string; // e.g., \"Foundation\", \"Market Penetration\", \"Scaling\"\n  readonly milestone?: string; // e.g., \"Tactical Interface\", \"Navigation System\"\n}\n\nexport interface AuditEntry extends LogEntry {\n  readonly action: string;\n  readonly resource: string;\n  readonly previousValue?: unknown;\n  readonly newValue?: unknown;\n  readonly ipAddress?: string;\n  readonly userAgent?: string;\n}\n\n/**\n * @description Traditional Angular logging service with comprehensive audit trails and performance monitoring for federal compliance\n * @author Development Team\n * @since 2025-10-02\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggingService implements OnDestroy {\n  private readonly destroy$ = new Subject();\n  private readonly logsSubject$ = new BehaviorSubject([]);\n  private readonly auditSubject$ = new BehaviorSubject([]);\n  \n  // Hot observables for real-time log monitoring\n  public readonly logs$ = this.logsSubject$.pipe(\n    shareReplay(1),\n    takeUntil(this.destroy$)\n  );\n  \n  public readonly auditLogs$ = this.auditSubject$.pipe(\n    shareReplay(1),\n    takeUntil(this.destroy$)\n  );\n  \n  // Session and user context\n  private sessionId: string = this.generateSessionId();\n  private userId?: string;\n  \n  // Performance monitoring\n  private readonly performanceSubject$ = new BehaviorSubject>(new Map());\n  public readonly performance$ = this.performanceSubject$.pipe(\n    shareReplay(1),\n    takeUntil(this.destroy$)\n  );\n\n  /**\n   * @description Constructor for LoggingService - initializes logging with session tracking\n   * @param None - No parameters required\n   * @returns {void} No return value  \n   * @author Development Team\n   * @since 2025-10-02\n   */\n  constructor() {\n    this.info('LoggingService initialized', 'SYSTEM', {\n      sessionId: this.sessionId,\n      timestamp: new Date(),\n      userAgent: navigator.userAgent\n    });\n  }\n\n  /**\n   * @description Set user context for all future logs\n   * @param {string} userId - The unique identifier for the authenticated user\n   * @returns {void} No return value\n   */\n  public setUserContext(userId: string): void {\n    this.userId = userId;\n    this.info('User context set', 'AUTH', { userId });\n  }\n\n  /**\n   * @description Clear user context (logout) and remove user tracking from future logs\n   * @returns {void} No return value\n   */\n  public clearUserContext(): void {\n    const previousUserId = this.userId;\n    this.userId = undefined;\n    this.info('User context cleared', 'AUTH', { previousUserId });\n  }\n\n  /**\n   * @description Debug level logging for development and troubleshooting\n   * @param {string} message - The debug message to log\n   * @param {string} category - Log category for filtering (defaults to 'GENERAL')\n   * @param {Record} metadata - Additional metadata for the log entry\n   * @returns {Observable} Observable containing the created log entry\n   */\n  public debug(message: string, category = 'GENERAL', metadata?: Record): Observable {\n    return this.logBasic('DEBUG', message, category, metadata);\n  }\n\n  /**\n   * @description Info level logging - general information\n   * @param {string} message - The info message to log\n   * @param {string} [category] - Log category for filtering (defaults to 'GENERAL')\n   * @param {Record} [metadata] - Additional metadata for the log entry\n   * @returns {Observable} Observable containing the created log entry\n   */\n  public info(message: string, category = 'GENERAL', metadata?: Record): Observable {\n    return this.logBasic('INFO', message, category, metadata);\n  }\n\n  /**\n   * @description Warning level logging - potential issues\n   * @param {string} message - The warning message to log\n   * @param {string} [category] - Log category for filtering (defaults to 'GENERAL')\n   * @param {Record} [metadata] - Additional metadata for the log entry\n   * @returns {Observable} Observable containing the created log entry\n   */\n  public warn(message: string, category = 'GENERAL', metadata?: Record): Observable {\n    return this.logBasic('WARN', message, category, metadata);\n  }\n\n  /**\n   * @description Error level logging - errors and exceptions\n   * @param {string} message - The error message to log\n   * @param {string} [category] - Log category for filtering (defaults to 'GENERAL')\n   * @param {Error} [error] - Optional Error object for additional details\n   * @param {Record} [metadata] - Additional metadata for the log entry\n   * @returns {Observable} Observable containing the created log entry\n   */\n  public error(message: string, category = 'GENERAL', error?: Error, metadata?: Record): Observable {\n    const errorMetadata = {\n      ...metadata,\n      error: error ? error.message : undefined,\n      stack: error ? error.stack : undefined\n    };\n    \n    return this.logBasic('ERROR', message, category, errorMetadata, undefined, error ? error.stack : undefined);\n  }\n\n  /**\n   * @description Fatal level logging - critical system failures\n   * @param {string} message - The fatal error message to log\n   * @param {string} [category] - Log category for filtering (defaults to 'SYSTEM')\n   * @param {Error} [error] - Optional Error object for additional details\n   * @param {Record} [metadata] - Additional metadata for the log entry\n   * @returns {Observable} Observable containing the created log entry\n   */\n  public fatal(message: string, category = 'SYSTEM', error?: Error, metadata?: Record): Observable {\n    const fatalMetadata = {\n      ...metadata,\n      error: error ? error.message : undefined,\n      stack: error ? error.stack : undefined,\n      critical: true\n    };\n    \n    return this.logBasic('FATAL', message, category, fatalMetadata, undefined, error ? error.stack : undefined);\n  }\n\n  /**\n   * @description Step-by-step operation logging for tracking multi-step processes\n   * @param {string} operationName - The name of the operation being tracked\n   * @param {number} stepNumber - The current step number\n   * @param {number} totalSteps - The total number of steps in the operation\n   * @param {string} stepDescription - Description of the current step\n   * @param {Record} [metadata] - Additional metadata for the log entry\n   * @returns {Observable} Observable containing the created log entry\n   */\n  public logStep(\n    operationName: string,\n    stepNumber: number,\n    totalSteps: number,\n    stepDescription: string,\n    metadata?: Record\n  ): Observable {\n    const stepMetadata = {\n      ...metadata,\n      operation: operationName,\n      step: stepNumber,\n      totalSteps,\n      stepDescription,\n      progress: Math.round((stepNumber / totalSteps) * 100)\n    };\n\n    return this.info(\n      `Operation: ${operationName} - Step ${stepNumber}/${totalSteps}: ${stepDescription}`,\n      'OPERATION',\n      stepMetadata\n    );\n  }\n\n  /**\n   * @description Database operation logging for CRUD operations with audit trail\n   * @param {string} operation - The database operation type (CREATE, READ, UPDATE, DELETE)\n   * @param {string} entity - The database entity or table being operated on\n   * @param {string} status - The operation status (START, SUCCESS, ERROR)\n   * @param {Record} [metadata] - Additional metadata for the database operation\n   * @returns {Observable} Observable containing the created log entry\n   * @since October 2, 2025\n   * @lastModified October 2, 2025\n   */\n  public logDatabaseOperation(\n    operation: 'CREATE' | 'READ' | 'UPDATE' | 'DELETE',\n    entity: string,\n    status: 'START' | 'SUCCESS' | 'ERROR',\n    metadata?: Record\n  ): Observable {\n    const dbMetadata = {\n      ...metadata,\n      dbOperation: operation,\n      entity,\n      status\n    };\n\n    const message = `Database ${operation} on ${entity}: ${status}`;\n    \n    switch (status) {\n      case 'START':\n        return this.info(message, 'DATABASE', dbMetadata);\n      case 'SUCCESS':\n        return this.info(message, 'DATABASE', dbMetadata);\n      case 'ERROR':\n        return this.error(message, 'DATABASE', undefined, dbMetadata);\n      default:\n        return this.info(message, 'DATABASE', dbMetadata);\n    }\n  }\n\n  /**\n   * @description Authentication flow logging for security audit trail\n   * @param {string} action - The authentication action (LOGIN, LOGOUT, MFA, REFRESH)\n   * @param {string} status - The operation status (START, SUCCESS, FAILURE)\n   * @param {Record} [metadata] - Additional security-related metadata\n   * @returns {Observable} Observable containing the created log entry\n   * @since October 2, 2025\n   * @lastModified October 2, 2025\n   * @federalCompliance Required for security audit trails\n   */\n  public logAuthFlow(\n    action: 'LOGIN' | 'LOGOUT' | 'MFA' | 'REFRESH',\n    status: 'START' | 'SUCCESS' | 'FAILURE',\n    metadata?: Record\n  ): Observable {\n    const authMetadata = {\n      ...metadata,\n      authAction: action,\n      status,\n      sessionId: this.sessionId\n    };\n\n    const message = `Authentication ${action}: ${status}`;\n    \n    switch (status) {\n      case 'START':\n        return this.info(message, 'AUTH', authMetadata);\n      case 'SUCCESS':\n        return this.info(message, 'AUTH', authMetadata);\n      case 'FAILURE':\n        return this.warn(message, 'AUTH', authMetadata);\n      default:\n        return this.info(message, 'AUTH', authMetadata);\n    }\n  }\n\n  /**\n   * @description Audit logging for compliance and security with comprehensive tracking of resource changes\n   * @param {string} action - The action being performed (CREATE, UPDATE, DELETE, ACCESS, etc.)\n   * @param {string} resource - The resource being acted upon (user, document, configuration, etc.)\n   * @param {unknown} previousValue - Optional previous value before the change\n   * @param {unknown} newValue - Optional new value after the change\n   * @param {Record} metadata - Optional additional metadata for the audit entry\n   * @returns {Observable} Observable containing the created audit entry\n   * @author Development Team\n   * @since 2025-10-02\n   * @lastModified 2025-10-02\n   * @federalCompliance Meets federal contracting standards for audit trail documentation\n   */\n  public audit(\n    action: string,\n    resource: string,\n    previousValue?: unknown,\n    newValue?: unknown,\n    metadata?: Record\n  ): Observable {\n    const auditEntry: AuditEntry = {\n      id: this.generateId(),\n      timestamp: new Date(),\n      level: 'AUDIT',\n      message: `AUDIT: ${action} on ${resource}`,\n      category: 'AUDIT',\n      operation: action,\n      userId: this.userId,\n      sessionId: this.sessionId,\n      action,\n      resource,\n      previousValue,\n      newValue,\n      ipAddress: this.getClientIP(),\n      userAgent: navigator.userAgent,\n      metadata\n    };\n\n    // Add to audit log\n    const currentAuditLogs = this.auditSubject$.value;\n    this.auditSubject$.next([...currentAuditLogs, auditEntry]);\n\n    // Also add to regular logs\n    this.addToLogs(auditEntry);\n\n    console.log('AUDIT:', auditEntry);\n\n    return new BehaviorSubject(auditEntry).pipe(\n      shareReplay(1),\n      takeUntil(this.destroy$)\n    );\n  }\n\n  /**\n   * @description Performance timing - start tracking an operation for performance monitoring\n   * @param {string} operationName - The unique name of the operation being timed\n   * @returns {void} No return value\n   * @author Development Team\n   * @since 2025-10-02\n   * @lastModified 2025-10-02\n   * @federalCompliance Meets federal contracting standards for performance monitoring documentation\n   */\n  public startTiming(operationName: string): void {\n    const currentPerf = this.performanceSubject$.value;\n    currentPerf.set(`${operationName}_start`, Date.now());\n    this.performanceSubject$.next(new Map(currentPerf));\n    \n    this.debug(`Started timing: ${operationName}`, 'PERFORMANCE');\n  }\n\n  /**\n   * @description Performance timing - end tracking and log duration for comprehensive performance analysis\n   * @param {string} operationName - The unique name of the operation being timed (must match startTiming call)\n   * @returns {Observable} Observable containing the performance log entry with duration metrics\n   * @author Development Team\n   * @since 2025-10-02\n   * @lastModified 2025-10-02\n   * @federalCompliance Meets federal contracting standards for performance monitoring documentation\n   */\n  public endTiming(operationName: string): Observable {\n    const currentPerf = this.performanceSubject$.value;\n    const startTime = currentPerf.get(`${operationName}_start`);\n    \n    if (startTime) {\n      const duration = Date.now() - startTime;\n      currentPerf.delete(`${operationName}_start`);\n      this.performanceSubject$.next(new Map(currentPerf));\n      \n      return this.info(\n        `Operation completed: ${operationName}`,\n        'PERFORMANCE',\n        { duration, operationName }\n      );\n    }\n    \n    return this.warn(\n      `Timing not found for operation: ${operationName}`,\n      'PERFORMANCE'\n    );\n  }\n\n  /**\n   * @description Get logs filtered by specific severity level for targeted log analysis\n   * @param {LogLevel} level - The log level to filter by (DEBUG, INFO, WARN, ERROR, FATAL)\n   * @returns {Observable} Observable array of log entries matching the specified level\n   * @author Development Team\n   * @since 2025-10-02\n   * @lastModified 2025-10-02\n   * @federalCompliance Meets federal contracting standards for log filtering documentation\n   */\n  public getLogsByLevel(level: LogLevel): Observable {\n    return this.logs$.pipe(\n      map((logs: LogEntry[]) => logs.filter(log => log.level === level))\n    );\n  }\n\n  /**\n   * @description Get logs filtered by specific category for targeted operational analysis\n   * @param {string} category - The log category to filter by (GENERAL, AUTH, PERFORMANCE, SYSTEM, etc.)\n   * @returns {Observable} Observable array of log entries matching the specified category\n   * @author Development Team\n   * @since 2025-10-02\n   * @lastModified 2025-10-02\n   * @federalCompliance Meets federal contracting standards for log categorization documentation\n   */\n  public getLogsByCategory(category: string): Observable {\n    return this.logs$.pipe(\n      map((logs: LogEntry[]) => logs.filter(log => log.category === category))\n    );\n  }\n\n  /**\n   * @description Export logs for external analysis and compliance reporting with optional date range filtering\n   * @param {Date} startDate - Optional start date for log filtering (inclusive)\n   * @param {Date} endDate - Optional end date for log filtering (inclusive)\n   * @returns {Observable} Observable array of log entries within the specified date range\n   * @author Development Team\n   * @since 2025-10-02\n   * @lastModified 2025-10-02\n   * @federalCompliance Meets federal contracting standards for log export and audit documentation\n   */\n  public exportLogs(startDate?: Date, endDate?: Date): Observable {\n    return this.logs$.pipe(\n      map((logs: LogEntry[]) => {\n        if (!startDate && !endDate) return logs;\n        \n        return logs.filter(log => {\n          const logTime = log.timestamp.getTime();\n          const afterStart = !startDate || logTime >= startDate.getTime();\n          const beforeEnd = !endDate || logTime ,\n    operation?: string,\n    stackTrace?: string\n  ): Observable {\n    return this.log(level, message, category, metadata, operation, stackTrace);\n  }\n\n  private addToLogs(entry: LogEntry): void {\n    const currentLogs = this.logsSubject$.value;\n    // Keep only last 1000 entries for performance\n    const newLogs = [...currentLogs, entry].slice(-1000);\n    this.logsSubject$.next(newLogs);\n    \n    // Console output with color coding\n    this.outputToConsole(entry);\n  }\n\n  private outputToConsole(entry: LogEntry): void {\n    const timestamp = entry.timestamp.toISOString();\n    const prefix = `[${timestamp}] [${entry.level}] [${entry.category}]`;\n    \n    switch (entry.level) {\n      case 'DEBUG':\n        console.debug(prefix, entry.message, entry.metadata);\n        break;\n      case 'INFO':\n        console.info(prefix, entry.message, entry.metadata);\n        break;\n      case 'WARN':\n        console.warn(prefix, entry.message, entry.metadata);\n        break;\n      case 'ERROR':\n      case 'FATAL':\n        console.error(prefix, entry.message, entry.metadata, entry.stackTrace);\n        break;\n      case 'AUDIT':\n        console.log('%c' + prefix, 'color: purple; font-weight: bold;', entry.message, entry.metadata);\n        break;\n    }\n  }\n\n  private generateId(): string {\n    return `log_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  private generateSessionId(): string {\n    return `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  private getClientIP(): string {\n    // In a real application, this would be provided by the backend\n    return 'unknown';\n  }\n\n  /**\n   * REAL-TIME ETA & COMPLETION TRACKING\n   * Perfect for federal contracting accountability and transparency\n   */\n\n  /**\n   * @description Start a tracked operation with ETA calculation and comprehensive performance monitoring\n   * @param {string} operationName - The unique name of the operation being tracked\n   * @param {number} estimatedDurationMs - Expected duration in milliseconds for completion time estimation\n   * @param {string} phase - Optional phase identifier for multi-phase operations\n   * @param {string} milestone - Optional milestone marker for progress tracking\n   * @param {Record} metadata - Optional additional metadata for the tracked operation\n   * @returns {Observable} Observable containing the operation start log entry\n   * @author Development Team\n   * @since 2025-10-02\n   * @lastModified 2025-10-02\n   * @federalCompliance Meets federal contracting standards for operation tracking documentation\n   */\n  public startTrackedOperation(\n    operationName: string,\n    estimatedDurationMs: number,\n    phase?: string,\n    milestone?: string,\n    metadata?: Record\n  ): Observable {\n    const startTime = new Date();\n    const estimatedCompletionTime = new Date(startTime.getTime() + estimatedDurationMs);\n    \n    const trackingMetadata = {\n      ...metadata,\n      startTime: startTime.toISOString(),\n      estimatedDuration: estimatedDurationMs,\n      operationType: 'START_TRACKED'\n    };\n\n    return this.log('INFO', `Starting tracked operation: ${operationName}`, 'TRACKING', trackingMetadata, operationName, undefined, estimatedCompletionTime, undefined, undefined, 0, phase, milestone);\n  }\n\n  /**\n   * @description Update progress of a tracked operation with percentage completion and status messaging\n   * @param {string} operationName - The unique name of the operation being tracked\n   * @param {number} progress - Progress percentage (0-100) indicating completion status\n   * @param {string} message - Optional progress message for detailed status reporting\n   * @param {Record} metadata - Optional additional metadata for the progress update\n   * @returns {Observable} Observable containing the progress update log entry\n   * @author Development Team\n   * @since 2025-10-02\n   * @lastModified 2025-10-02\n   * @federalCompliance Meets federal contracting standards for progress tracking documentation\n   */\n  public updateProgress(\n    operationName: string,\n    progress: number,\n    message?: string,\n    metadata?: Record\n  ): Observable {\n    const progressMetadata = {\n      ...metadata,\n      operationType: 'PROGRESS_UPDATE',\n      progressPercentage: progress\n    };\n\n    const logMessage = message || `Progress update for ${operationName}: ${progress}%`;\n    \n    return this.log('INFO', logMessage, 'TRACKING', progressMetadata, operationName, undefined, undefined, undefined, undefined, progress);\n  }\n\n  /**\n   * @description Complete a tracked operation with actual completion time and duration analysis for performance metrics\n   * @param {string} operationName - The unique name of the operation being completed\n   * @param {Date} startTime - The original start time of the operation for duration calculation\n   * @param {boolean} success - Whether the operation completed successfully (default: true)\n   * @param {string} actualResults - Optional description of the actual operation results\n   * @param {Record} metadata - Optional additional metadata for the completion record\n   * @returns {Observable} Observable containing the operation completion log entry\n   * @author Development Team\n   * @since 2025-10-02\n   * @lastModified 2025-10-02\n   * @federalCompliance Meets federal contracting standards for operation completion documentation\n   */\n  public completeTrackedOperation(\n    operationName: string,\n    startTime: Date,\n    success = true,\n    actualResults?: string,\n    metadata?: Record\n  ): Observable {\n    const completedAt = new Date();\n    const duration = completedAt.getTime() - startTime.getTime();\n    \n    const completionMetadata = {\n      ...metadata,\n      operationType: 'COMPLETION',\n      success,\n      actualResults,\n      plannedVsActual: {\n        duration: `${duration}ms`,\n        completedAt: completedAt.toISOString()\n      }\n    };\n\n    const logMessage = success \n      ? `✅ Successfully completed: ${operationName} (${duration}ms)`\n      : `❌ Failed to complete: ${operationName} (${duration}ms)`;\n    \n    return this.log(success ? 'INFO' : 'ERROR', logMessage, 'TRACKING', completionMetadata, operationName, undefined, undefined, completedAt, duration, 100);\n  }\n\n  /**\n   * @description Log phase completion with achievements tracking and next phase preparation for project milestone documentation\n   * @param {string} phaseName - The name of the completed phase (e.g., \"Phase 1 Foundation\")\n   * @param {Date} startDate - The original start date of the phase for duration calculation\n   * @param {string[]} achievements - Array of key achievements accomplished in this phase\n   * @param {string} nextPhase - Optional name of the next phase to be started\n   * @param {Record} metadata - Optional additional metadata for the phase completion\n   * @returns {Observable} Observable containing the phase completion log entry\n   * @author Development Team\n   * @since 2025-10-02\n   * @lastModified 2025-10-02\n   * @federalCompliance Meets federal contracting standards for phase milestone documentation\n   */\n  public logPhaseCompletion(\n    phaseName: string,\n    startDate: Date,\n    achievements: string[],\n    nextPhase?: string,\n    metadata?: Record\n  ): Observable {\n    const completedAt = new Date();\n    const duration = completedAt.getTime() - startDate.getTime();\n    \n    const phaseMetadata = {\n      ...metadata,\n      phaseType: 'COMPLETION',\n      achievements,\n      nextPhase,\n      phaseDuration: `${Math.round(duration / (1000 * 60 * 60 * 24))} days`,\n      completedAt: completedAt.toISOString()\n    };\n\n    return this.log('AUDIT', `🎯 PHASE COMPLETE: ${phaseName}`, 'PHASE_TRACKING', phaseMetadata, `PHASE_${phaseName.toUpperCase()}`, undefined, undefined, completedAt, duration, 100, phaseName);\n  }\n\n  /**\n   * @description Enhanced log method with ETA and completion tracking for comprehensive audit trail creation\n   * @param {LogLevel} level - The severity level of the log entry (DEBUG, INFO, WARN, ERROR, FATAL)\n   * @param {string} message - The log message content\n   * @param {string} category - The category classification for the log entry\n   * @param {Record} metadata - Optional additional metadata for the log entry\n   * @param {string} operation - Optional operation identifier for tracking\n   * @param {string} stackTrace - Optional stack trace for error logging\n   * @param {Date} eta - Optional estimated time of arrival for completion\n   * @param {Date} completedAt - Optional completion timestamp for finished operations\n   * @param {number} duration - Optional operation duration in milliseconds\n   * @param {number} progress - Optional progress percentage (0-100)\n   * @param {string} phase - Optional phase identifier for multi-phase operations\n   * @param {string} milestone - Optional milestone marker for progress tracking\n   * @returns {Observable} Observable containing the created log entry\n   * @author Development Team\n   * @since 2025-10-02\n   * @lastModified 2025-10-02\n   * @federalCompliance Meets federal contracting standards for comprehensive logging documentation\n   */\n  public log(\n    level: LogLevel,\n    message: string,\n    category: string,\n    metadata?: Record,\n    operation?: string,\n    stackTrace?: string,\n    eta?: Date,\n    completedAt?: Date,\n    duration?: number,\n    progress?: number,\n    phase?: string,\n    milestone?: string\n  ): Observable {\n    const entry: LogEntry = {\n      id: this.generateId(),\n      timestamp: new Date(),\n      level,\n      message,\n      category,\n      metadata,\n      operation,\n      userId: this.userId,\n      sessionId: this.sessionId,\n      stackTrace,\n      eta,\n      completedAt,\n      duration,\n      progress,\n      phase,\n      milestone\n    };\n\n    this.addToLogs(entry);\n    \n    return new BehaviorSubject(entry).pipe(\n      shareReplay(1),\n      takeUntil(this.destroy$)\n    );\n  }\n\n  /**\n   * @description Angular lifecycle hook for component destruction - performs cleanup and resource deallocation\n   * @returns {void} No return value\n   * @author Development Team\n   * @since 2025-10-02\n   * @lastModified 2025-10-02\n   * @federalCompliance Meets federal contracting standards for lifecycle management documentation\n   */\n  public ngOnDestroy(): void {\n    this.info('LoggingService shutting down', 'SYSTEM');\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlogComponent.html":{"url":"components/BlogComponent.html","title":"component - BlogComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  BlogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    frontend/src/app/pages/blog.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-blog\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./blog.html\n            \n\n\n\n            \n                styleUrl\n                ./blog.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-blog',\n  standalone: true,\n  imports: [],\n  templateUrl: './blog.html',\n  styleUrl: './blog.scss',\n})\nexport class BlogComponent {}\n\n    \n\n    \n        blog works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'blog works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogComponent', 'selector': 'app-blog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DevelopmentComponent', 'selector': 'app-development'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ServicesComponent', 'selector': 'app-services'},{'name': 'SwaggerComponent', 'selector': 'app-swagger'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BlogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactComponent.html":{"url":"components/ContactComponent.html","title":"component - ContactComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ContactComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    frontend/src/app/pages/contact.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./contact.html\n            \n\n\n\n            \n                styleUrl\n                ./contact.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  standalone: true,\n  imports: [],\n  templateUrl: './contact.html',\n  styleUrl: './contact.scss',\n})\nexport class ContactComponent {}\n\n    \n\n    \n        contact works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'contact works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogComponent', 'selector': 'app-blog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DevelopmentComponent', 'selector': 'app-development'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ServicesComponent', 'selector': 'app-services'},{'name': 'SwaggerComponent', 'selector': 'app-swagger'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    CoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            frontend/src/app/shared/core/core-module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\n/**\n * @description Core shared module providing fundamental application services and enterprise infrastructure components\n * @author Development Team\n * @since 2025-10-02\n */\nexport class CoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DevelopmentComponent.html":{"url":"components/DevelopmentComponent.html","title":"component - DevelopmentComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  DevelopmentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    frontend/src/app/pages/development.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-development\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./development.html\n            \n\n\n\n            \n                styleUrl\n                ./development.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                destroy$\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Public\n                                    Readonly\n                                title\n                            \n                            \n                                    Private\n                                    Readonly\n                                toaster\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                demonstrateTacticalNotifications\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onDemonstrateToaster\n                            \n                            \n                                    Public\n                                onTestAuthenticationFlow\n                            \n                            \n                                    Public\n                                onTestDatabaseOperations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        demonstrateTacticalNotifications\n                        \n                    \n                \n            \n            \n                \n                        \n                    demonstrateTacticalNotifications()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/app/pages/development.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/app/pages/development.ts:217\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/app/pages/development.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onDemonstrateToaster\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDemonstrateToaster()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/app/pages/development.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onTestAuthenticationFlow\n                        \n                    \n                \n            \n            \n                \n                        \n                    onTestAuthenticationFlow()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/app/pages/development.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onTestDatabaseOperations\n                        \n                    \n                \n            \n            \n                \n                        \n                    onTestDatabaseOperations()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/app/pages/development.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in frontend/src/app/pages/development.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(LoggingService)\n                    \n                \n                    \n                        \n                                Defined in frontend/src/app/pages/development.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'True North Insights'\n                    \n                \n                    \n                        \n                                Defined in frontend/src/app/pages/development.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        toaster\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToasterService)\n                    \n                \n                    \n                        \n                                Defined in frontend/src/app/pages/development.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, inject } from '@angular/core';\nimport { Subject, timer } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { ToasterService } from '../shared/ui-services/toaster.service';\nimport { LoggingService } from '../shared/ui-services/logging.service';\n\n@Component({\n  selector: 'app-development',\n  standalone: true,\n  imports: [],\n  templateUrl: './development.html',\n  styleUrl: './development.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DevelopmentComponent implements OnInit, OnDestroy {\n  public readonly title = 'True North Insights';\n  private readonly destroy$ = new Subject();\n\n  private readonly toaster = inject(ToasterService);\n  private readonly logger = inject(LoggingService);\n\n  public ngOnInit(): void {\n    this.logger.log('INFO', 'DevelopmentComponent initialized', 'COMPONENT_LIFECYCLE');\n  }\n\n  public onDemonstrateToaster(): void {\n    this.demonstrateTacticalNotifications();\n  }\n\n  public onTestDatabaseOperations(): void {\n    this.logger.info('Testing database operations', 'DB_TEST');\n    timer(500)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.toaster\n          .showStepProgress(\n            'Database Test',\n            1,\n            3,\n            'Connecting to primary data source'\n          )\n          .pipe(takeUntil(this.destroy$))\n          .subscribe();\n      });\n    timer(1500)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.toaster\n          .showStepProgress(\n            'Database Test',\n            2,\n            3,\n            'Running data integrity checks'\n          )\n          .pipe(takeUntil(this.destroy$))\n          .subscribe();\n      });\n    timer(2500)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.toaster\n          .showSuccess('Database operations successful')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe();\n      });\n  }\n\n  public onTestAuthenticationFlow(): void {\n    this.logger.info('Testing authentication flow', 'AUTH_TEST');\n    timer(500)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.toaster\n          .showStepProgress('Auth Test', 1, 3, 'Generating JWT')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe();\n      });\n    timer(1500)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.toaster\n          .showStepProgress('Auth Test', 2, 3, 'Validating MFA token')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe();\n      });\n    timer(2500)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.toaster\n          .showSuccess('Authentication flow successful')\n          .pipe(takeUntil(this.destroy$))\n          .subscribe();\n      });\n  }\n\n  private demonstrateTacticalNotifications(): void {\n    this.logger.info('Starting tactical notification demonstration', 'DEMO');\n\n    timer(1000)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.toaster\n          .showTactical(\n            'Welcome to True North Insights - Traditional Angular Architecture Active',\n            'EXPLORE'\n          )\n          .pipe(takeUntil(this.destroy$))\n          .subscribe();\n      });\n\n    timer(3000)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.toaster\n          .showStepProgress(\n            'System Initialization',\n            1,\n            4,\n            'Loading core services'\n          )\n          .pipe(takeUntil(this.destroy$))\n          .subscribe();\n      });\n\n    timer(4500)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.toaster\n          .showStepProgress(\n            'System Initialization',\n            2,\n            4,\n            'Establishing database connections'\n          )\n          .pipe(takeUntil(this.destroy$))\n          .subscribe();\n      });\n\n    timer(6000)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.toaster\n          .showStepProgress(\n            'System Initialization',\n            3,\n            4,\n            'Configuring authentication'\n          )\n          .pipe(takeUntil(this.destroy$))\n          .subscribe();\n      });\n\n    timer(7500)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.toaster\n          .showStepProgress(\n            'System Initialization',\n            4,\n            4,\n            'Ready for tactical operations'\n          )\n          .pipe(takeUntil(this.destroy$))\n          .subscribe();\n      });\n\n    timer(9000)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.toaster\n          .showSuccess(\n            'All systems initialized and running at peak performance',\n            'SYSTEM_READY'\n          )\n          .pipe(takeUntil(this.destroy$))\n          .subscribe();\n      });\n\n    timer(11000)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.toaster\n          .showInfo(\n            'Architectural pattern: Traditional Angular with NgModules and Material 3 Expressive',\n            'INFO'\n          )\n          .pipe(takeUntil(this.destroy$))\n          .subscribe();\n      });\n\n    timer(13000)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.toaster\n          .showWarning(\n            'Security audit scheduled for 2025-12-01. Ensure all logs are archived.',\n            'AUDIT_WARNING'\n          )\n          .pipe(takeUntil(this.destroy$))\n          .subscribe();\n      });\n\n    timer(15000)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.toaster\n          .showError(\n            'Simulated error: Failed to connect to tertiary backup server. Retrying...',\n            'CONNECTION_ERROR'\n          )\n          .pipe(takeUntil(this.destroy$))\n          .subscribe();\n      });\n  }\n\n  public ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.logger.info('Development page destroyed', 'DEV_PAGE_DESTROY');\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n      {{ title }}\n      Traditional Angular Architecture - Material 3 Expressive\n    \n    \n      \n      All Systems Operational\n    \n  \n\n  \n  \n    \n      \n      \n      \n        🔥 Tactical Notification System\n        Material 3 Expressive toaster with legendary UX feedback\n        \n          \n            Demonstrate All Notifications\n          \n        \n      \n\n      \n      \n        🗄️ Database Operations\n        Observable dual persistence with step-by-step feedback\n        \n          \n            Test Database Operations\n          \n        \n      \n\n      \n      \n        🔐 Authentication Flow\n        JWT + MFA authentication with audit logging\n        \n          \n            Test Auth Flow\n          \n        \n      \n\n      \n      \n        🏛️ Architecture Status\n        \n          \n            NgModules:\n            ✅ Traditional\n          \n          \n            Standalone Components:\n            ❌ FORBIDDEN\n          \n          \n            Observable Patterns:\n            ✅ Hot Observables\n          \n          \n            Change Detection:\n            ✅ OnPush\n          \n          \n            Material Design:\n            ✅ v3 Expressive\n          \n        \n      \n\n    \n\n    \n    \n      🚀 Development Phases\n      \n        \n          1\n          \n            Architectural Foundation\n            Core setup and component design.\n          \n        \n        \n          2\n          \n            Feature Implementation\n            Building out key functionalities.\n          \n        \n        \n          3\n          \n            Integration & Testing\n            End-to-end testing and QA.\n          \n        \n        \n          4\n          \n            Deployment\n            Go-live and production setup.\n          \n        \n      \n    \n  \n\n  \n  \n    &copy; 2025 True North Insights. All Rights Reserved.\n    Unauthorized access is strictly prohibited and will be prosecuted to the fullest extent of the law.\n  \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{ title }}      Traditional Angular Architecture - Material 3 Expressive                    All Systems Operational                                        🔥 Tactical Notification System        Material 3 Expressive toaster with legendary UX feedback                              Demonstrate All Notifications                                            🗄️ Database Operations        Observable dual persistence with step-by-step feedback                              Test Database Operations                                            🔐 Authentication Flow        JWT + MFA authentication with audit logging                              Test Auth Flow                                            🏛️ Architecture Status                              NgModules:            ✅ Traditional                                Standalone Components:            ❌ FORBIDDEN                                Observable Patterns:            ✅ Hot Observables                                Change Detection:            ✅ OnPush                                Material Design:            ✅ v3 Expressive                                          🚀 Development Phases                        1                      Architectural Foundation            Core setup and component design.                                    2                      Feature Implementation            Building out key functionalities.                                    3                      Integration & Testing            End-to-end testing and QA.                                    4                      Deployment            Go-live and production setup.                                      © 2025 True North Insights. All Rights Reserved.    Unauthorized access is strictly prohibited and will be prosecuted to the fullest extent of the law.  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogComponent', 'selector': 'app-blog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DevelopmentComponent', 'selector': 'app-development'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ServicesComponent', 'selector': 'app-services'},{'name': 'SwaggerComponent', 'selector': 'app-swagger'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DevelopmentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    frontend/src/app/layout/header.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                            MatToolbarModule\n                            MatButtonModule\n                            MatIconModule\n                            MatMenuModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./header.html\n            \n\n\n\n            \n                styleUrl\n                ./header.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [\n    RouterModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n  ],\n  templateUrl: './header.html',\n  styleUrl: './header.scss',\n})\nexport class HeaderComponent {}\n\n    \n\n    \n        \n  \n    \n      \n      True North Insights\n    \n  \n\n  \n    Home\n    About\n    Services\n    Blog\n    Contact\n    Development\n  \n\n  \n    \n      search\n    \n    \n      account_circle\n    \n    \n      more_vert\n    \n    \n      \n        settings\n        Settings\n      \n      \n        exit_to_app\n        Logout\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  True North Insights            Home    About    Services    Blog    Contact    Development              search              account_circle              more_vert                      settings        Settings                    exit_to_app        Logout            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogComponent', 'selector': 'app-blog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DevelopmentComponent', 'selector': 'app-development'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ServicesComponent', 'selector': 'app-services'},{'name': 'SwaggerComponent', 'selector': 'app-swagger'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    frontend/src/app/pages/home.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./home.html\n            \n\n\n\n            \n                styleUrl\n                ./home.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [],\n  templateUrl: './home.html',\n  styleUrl: './home.scss',\n})\nexport class HomeComponent {}\n\n    \n\n    \n        home works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'home works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogComponent', 'selector': 'app-blog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DevelopmentComponent', 'selector': 'app-development'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ServicesComponent', 'selector': 'app-services'},{'name': 'SwaggerComponent', 'selector': 'app-swagger'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogEntry.html":{"url":"interfaces/LogEntry.html","title":"interface - LogEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            frontend/src/app/shared/ui-services/logging.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            completedAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            duration\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            eta\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            level\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            metadata\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            milestone\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            operation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phase\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            progress\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sessionId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stackTrace\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        completedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eta:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        level:         LogLevel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LogLevel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        milestone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        milestone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        operation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phase\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phase:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        progress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        progress:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sessionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sessionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stackTrace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stackTrace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Subject, Observable } from 'rxjs';\nimport { shareReplay, takeUntil, map } from 'rxjs/operators';\n\nexport type LogLevel = 'DEBUG' | 'INFO' | 'WARN' | 'ERROR' | 'FATAL' | 'AUDIT';\n\nexport interface LogEntry {\n  readonly id: string;\n  readonly timestamp: Date;\n  readonly level: LogLevel;\n  readonly message: string;\n  readonly category: string;\n  readonly metadata?: Record;\n  readonly operation?: string;\n  readonly userId?: string;\n  readonly sessionId?: string;\n  readonly stackTrace?: string;\n  // Real-time ETA and completion tracking\n  readonly eta?: Date;\n  readonly completedAt?: Date;\n  readonly duration?: number; // milliseconds\n  readonly progress?: number; // 0-100 percentage\n  readonly phase?: string; // e.g., \"Foundation\", \"Market Penetration\", \"Scaling\"\n  readonly milestone?: string; // e.g., \"Tactical Interface\", \"Navigation System\"\n}\n\nexport interface AuditEntry extends LogEntry {\n  readonly action: string;\n  readonly resource: string;\n  readonly previousValue?: unknown;\n  readonly newValue?: unknown;\n  readonly ipAddress?: string;\n  readonly userAgent?: string;\n}\n\n/**\n * @description Traditional Angular logging service with comprehensive audit trails and performance monitoring for federal compliance\n * @author Development Team\n * @since 2025-10-02\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggingService implements OnDestroy {\n  private readonly destroy$ = new Subject();\n  private readonly logsSubject$ = new BehaviorSubject([]);\n  private readonly auditSubject$ = new BehaviorSubject([]);\n  \n  // Hot observables for real-time log monitoring\n  public readonly logs$ = this.logsSubject$.pipe(\n    shareReplay(1),\n    takeUntil(this.destroy$)\n  );\n  \n  public readonly auditLogs$ = this.auditSubject$.pipe(\n    shareReplay(1),\n    takeUntil(this.destroy$)\n  );\n  \n  // Session and user context\n  private sessionId: string = this.generateSessionId();\n  private userId?: string;\n  \n  // Performance monitoring\n  private readonly performanceSubject$ = new BehaviorSubject>(new Map());\n  public readonly performance$ = this.performanceSubject$.pipe(\n    shareReplay(1),\n    takeUntil(this.destroy$)\n  );\n\n  /**\n   * @description Constructor for LoggingService - initializes logging with session tracking\n   * @param None - No parameters required\n   * @returns {void} No return value  \n   * @author Development Team\n   * @since 2025-10-02\n   */\n  constructor() {\n    this.info('LoggingService initialized', 'SYSTEM', {\n      sessionId: this.sessionId,\n      timestamp: new Date(),\n      userAgent: navigator.userAgent\n    });\n  }\n\n  /**\n   * @description Set user context for all future logs\n   * @param {string} userId - The unique identifier for the authenticated user\n   * @returns {void} No return value\n   */\n  public setUserContext(userId: string): void {\n    this.userId = userId;\n    this.info('User context set', 'AUTH', { userId });\n  }\n\n  /**\n   * @description Clear user context (logout) and remove user tracking from future logs\n   * @returns {void} No return value\n   */\n  public clearUserContext(): void {\n    const previousUserId = this.userId;\n    this.userId = undefined;\n    this.info('User context cleared', 'AUTH', { previousUserId });\n  }\n\n  /**\n   * @description Debug level logging for development and troubleshooting\n   * @param {string} message - The debug message to log\n   * @param {string} category - Log category for filtering (defaults to 'GENERAL')\n   * @param {Record} metadata - Additional metadata for the log entry\n   * @returns {Observable} Observable containing the created log entry\n   */\n  public debug(message: string, category = 'GENERAL', metadata?: Record): Observable {\n    return this.logBasic('DEBUG', message, category, metadata);\n  }\n\n  /**\n   * @description Info level logging - general information\n   * @param {string} message - The info message to log\n   * @param {string} [category] - Log category for filtering (defaults to 'GENERAL')\n   * @param {Record} [metadata] - Additional metadata for the log entry\n   * @returns {Observable} Observable containing the created log entry\n   */\n  public info(message: string, category = 'GENERAL', metadata?: Record): Observable {\n    return this.logBasic('INFO', message, category, metadata);\n  }\n\n  /**\n   * @description Warning level logging - potential issues\n   * @param {string} message - The warning message to log\n   * @param {string} [category] - Log category for filtering (defaults to 'GENERAL')\n   * @param {Record} [metadata] - Additional metadata for the log entry\n   * @returns {Observable} Observable containing the created log entry\n   */\n  public warn(message: string, category = 'GENERAL', metadata?: Record): Observable {\n    return this.logBasic('WARN', message, category, metadata);\n  }\n\n  /**\n   * @description Error level logging - errors and exceptions\n   * @param {string} message - The error message to log\n   * @param {string} [category] - Log category for filtering (defaults to 'GENERAL')\n   * @param {Error} [error] - Optional Error object for additional details\n   * @param {Record} [metadata] - Additional metadata for the log entry\n   * @returns {Observable} Observable containing the created log entry\n   */\n  public error(message: string, category = 'GENERAL', error?: Error, metadata?: Record): Observable {\n    const errorMetadata = {\n      ...metadata,\n      error: error ? error.message : undefined,\n      stack: error ? error.stack : undefined\n    };\n    \n    return this.logBasic('ERROR', message, category, errorMetadata, undefined, error ? error.stack : undefined);\n  }\n\n  /**\n   * @description Fatal level logging - critical system failures\n   * @param {string} message - The fatal error message to log\n   * @param {string} [category] - Log category for filtering (defaults to 'SYSTEM')\n   * @param {Error} [error] - Optional Error object for additional details\n   * @param {Record} [metadata] - Additional metadata for the log entry\n   * @returns {Observable} Observable containing the created log entry\n   */\n  public fatal(message: string, category = 'SYSTEM', error?: Error, metadata?: Record): Observable {\n    const fatalMetadata = {\n      ...metadata,\n      error: error ? error.message : undefined,\n      stack: error ? error.stack : undefined,\n      critical: true\n    };\n    \n    return this.logBasic('FATAL', message, category, fatalMetadata, undefined, error ? error.stack : undefined);\n  }\n\n  /**\n   * @description Step-by-step operation logging for tracking multi-step processes\n   * @param {string} operationName - The name of the operation being tracked\n   * @param {number} stepNumber - The current step number\n   * @param {number} totalSteps - The total number of steps in the operation\n   * @param {string} stepDescription - Description of the current step\n   * @param {Record} [metadata] - Additional metadata for the log entry\n   * @returns {Observable} Observable containing the created log entry\n   */\n  public logStep(\n    operationName: string,\n    stepNumber: number,\n    totalSteps: number,\n    stepDescription: string,\n    metadata?: Record\n  ): Observable {\n    const stepMetadata = {\n      ...metadata,\n      operation: operationName,\n      step: stepNumber,\n      totalSteps,\n      stepDescription,\n      progress: Math.round((stepNumber / totalSteps) * 100)\n    };\n\n    return this.info(\n      `Operation: ${operationName} - Step ${stepNumber}/${totalSteps}: ${stepDescription}`,\n      'OPERATION',\n      stepMetadata\n    );\n  }\n\n  /**\n   * @description Database operation logging for CRUD operations with audit trail\n   * @param {string} operation - The database operation type (CREATE, READ, UPDATE, DELETE)\n   * @param {string} entity - The database entity or table being operated on\n   * @param {string} status - The operation status (START, SUCCESS, ERROR)\n   * @param {Record} [metadata] - Additional metadata for the database operation\n   * @returns {Observable} Observable containing the created log entry\n   * @since October 2, 2025\n   * @lastModified October 2, 2025\n   */\n  public logDatabaseOperation(\n    operation: 'CREATE' | 'READ' | 'UPDATE' | 'DELETE',\n    entity: string,\n    status: 'START' | 'SUCCESS' | 'ERROR',\n    metadata?: Record\n  ): Observable {\n    const dbMetadata = {\n      ...metadata,\n      dbOperation: operation,\n      entity,\n      status\n    };\n\n    const message = `Database ${operation} on ${entity}: ${status}`;\n    \n    switch (status) {\n      case 'START':\n        return this.info(message, 'DATABASE', dbMetadata);\n      case 'SUCCESS':\n        return this.info(message, 'DATABASE', dbMetadata);\n      case 'ERROR':\n        return this.error(message, 'DATABASE', undefined, dbMetadata);\n      default:\n        return this.info(message, 'DATABASE', dbMetadata);\n    }\n  }\n\n  /**\n   * @description Authentication flow logging for security audit trail\n   * @param {string} action - The authentication action (LOGIN, LOGOUT, MFA, REFRESH)\n   * @param {string} status - The operation status (START, SUCCESS, FAILURE)\n   * @param {Record} [metadata] - Additional security-related metadata\n   * @returns {Observable} Observable containing the created log entry\n   * @since October 2, 2025\n   * @lastModified October 2, 2025\n   * @federalCompliance Required for security audit trails\n   */\n  public logAuthFlow(\n    action: 'LOGIN' | 'LOGOUT' | 'MFA' | 'REFRESH',\n    status: 'START' | 'SUCCESS' | 'FAILURE',\n    metadata?: Record\n  ): Observable {\n    const authMetadata = {\n      ...metadata,\n      authAction: action,\n      status,\n      sessionId: this.sessionId\n    };\n\n    const message = `Authentication ${action}: ${status}`;\n    \n    switch (status) {\n      case 'START':\n        return this.info(message, 'AUTH', authMetadata);\n      case 'SUCCESS':\n        return this.info(message, 'AUTH', authMetadata);\n      case 'FAILURE':\n        return this.warn(message, 'AUTH', authMetadata);\n      default:\n        return this.info(message, 'AUTH', authMetadata);\n    }\n  }\n\n  /**\n   * @description Audit logging for compliance and security with comprehensive tracking of resource changes\n   * @param {string} action - The action being performed (CREATE, UPDATE, DELETE, ACCESS, etc.)\n   * @param {string} resource - The resource being acted upon (user, document, configuration, etc.)\n   * @param {unknown} previousValue - Optional previous value before the change\n   * @param {unknown} newValue - Optional new value after the change\n   * @param {Record} metadata - Optional additional metadata for the audit entry\n   * @returns {Observable} Observable containing the created audit entry\n   * @author Development Team\n   * @since 2025-10-02\n   * @lastModified 2025-10-02\n   * @federalCompliance Meets federal contracting standards for audit trail documentation\n   */\n  public audit(\n    action: string,\n    resource: string,\n    previousValue?: unknown,\n    newValue?: unknown,\n    metadata?: Record\n  ): Observable {\n    const auditEntry: AuditEntry = {\n      id: this.generateId(),\n      timestamp: new Date(),\n      level: 'AUDIT',\n      message: `AUDIT: ${action} on ${resource}`,\n      category: 'AUDIT',\n      operation: action,\n      userId: this.userId,\n      sessionId: this.sessionId,\n      action,\n      resource,\n      previousValue,\n      newValue,\n      ipAddress: this.getClientIP(),\n      userAgent: navigator.userAgent,\n      metadata\n    };\n\n    // Add to audit log\n    const currentAuditLogs = this.auditSubject$.value;\n    this.auditSubject$.next([...currentAuditLogs, auditEntry]);\n\n    // Also add to regular logs\n    this.addToLogs(auditEntry);\n\n    console.log('AUDIT:', auditEntry);\n\n    return new BehaviorSubject(auditEntry).pipe(\n      shareReplay(1),\n      takeUntil(this.destroy$)\n    );\n  }\n\n  /**\n   * @description Performance timing - start tracking an operation for performance monitoring\n   * @param {string} operationName - The unique name of the operation being timed\n   * @returns {void} No return value\n   * @author Development Team\n   * @since 2025-10-02\n   * @lastModified 2025-10-02\n   * @federalCompliance Meets federal contracting standards for performance monitoring documentation\n   */\n  public startTiming(operationName: string): void {\n    const currentPerf = this.performanceSubject$.value;\n    currentPerf.set(`${operationName}_start`, Date.now());\n    this.performanceSubject$.next(new Map(currentPerf));\n    \n    this.debug(`Started timing: ${operationName}`, 'PERFORMANCE');\n  }\n\n  /**\n   * @description Performance timing - end tracking and log duration for comprehensive performance analysis\n   * @param {string} operationName - The unique name of the operation being timed (must match startTiming call)\n   * @returns {Observable} Observable containing the performance log entry with duration metrics\n   * @author Development Team\n   * @since 2025-10-02\n   * @lastModified 2025-10-02\n   * @federalCompliance Meets federal contracting standards for performance monitoring documentation\n   */\n  public endTiming(operationName: string): Observable {\n    const currentPerf = this.performanceSubject$.value;\n    const startTime = currentPerf.get(`${operationName}_start`);\n    \n    if (startTime) {\n      const duration = Date.now() - startTime;\n      currentPerf.delete(`${operationName}_start`);\n      this.performanceSubject$.next(new Map(currentPerf));\n      \n      return this.info(\n        `Operation completed: ${operationName}`,\n        'PERFORMANCE',\n        { duration, operationName }\n      );\n    }\n    \n    return this.warn(\n      `Timing not found for operation: ${operationName}`,\n      'PERFORMANCE'\n    );\n  }\n\n  /**\n   * @description Get logs filtered by specific severity level for targeted log analysis\n   * @param {LogLevel} level - The log level to filter by (DEBUG, INFO, WARN, ERROR, FATAL)\n   * @returns {Observable} Observable array of log entries matching the specified level\n   * @author Development Team\n   * @since 2025-10-02\n   * @lastModified 2025-10-02\n   * @federalCompliance Meets federal contracting standards for log filtering documentation\n   */\n  public getLogsByLevel(level: LogLevel): Observable {\n    return this.logs$.pipe(\n      map((logs: LogEntry[]) => logs.filter(log => log.level === level))\n    );\n  }\n\n  /**\n   * @description Get logs filtered by specific category for targeted operational analysis\n   * @param {string} category - The log category to filter by (GENERAL, AUTH, PERFORMANCE, SYSTEM, etc.)\n   * @returns {Observable} Observable array of log entries matching the specified category\n   * @author Development Team\n   * @since 2025-10-02\n   * @lastModified 2025-10-02\n   * @federalCompliance Meets federal contracting standards for log categorization documentation\n   */\n  public getLogsByCategory(category: string): Observable {\n    return this.logs$.pipe(\n      map((logs: LogEntry[]) => logs.filter(log => log.category === category))\n    );\n  }\n\n  /**\n   * @description Export logs for external analysis and compliance reporting with optional date range filtering\n   * @param {Date} startDate - Optional start date for log filtering (inclusive)\n   * @param {Date} endDate - Optional end date for log filtering (inclusive)\n   * @returns {Observable} Observable array of log entries within the specified date range\n   * @author Development Team\n   * @since 2025-10-02\n   * @lastModified 2025-10-02\n   * @federalCompliance Meets federal contracting standards for log export and audit documentation\n   */\n  public exportLogs(startDate?: Date, endDate?: Date): Observable {\n    return this.logs$.pipe(\n      map((logs: LogEntry[]) => {\n        if (!startDate && !endDate) return logs;\n        \n        return logs.filter(log => {\n          const logTime = log.timestamp.getTime();\n          const afterStart = !startDate || logTime >= startDate.getTime();\n          const beforeEnd = !endDate || logTime ,\n    operation?: string,\n    stackTrace?: string\n  ): Observable {\n    return this.log(level, message, category, metadata, operation, stackTrace);\n  }\n\n  private addToLogs(entry: LogEntry): void {\n    const currentLogs = this.logsSubject$.value;\n    // Keep only last 1000 entries for performance\n    const newLogs = [...currentLogs, entry].slice(-1000);\n    this.logsSubject$.next(newLogs);\n    \n    // Console output with color coding\n    this.outputToConsole(entry);\n  }\n\n  private outputToConsole(entry: LogEntry): void {\n    const timestamp = entry.timestamp.toISOString();\n    const prefix = `[${timestamp}] [${entry.level}] [${entry.category}]`;\n    \n    switch (entry.level) {\n      case 'DEBUG':\n        console.debug(prefix, entry.message, entry.metadata);\n        break;\n      case 'INFO':\n        console.info(prefix, entry.message, entry.metadata);\n        break;\n      case 'WARN':\n        console.warn(prefix, entry.message, entry.metadata);\n        break;\n      case 'ERROR':\n      case 'FATAL':\n        console.error(prefix, entry.message, entry.metadata, entry.stackTrace);\n        break;\n      case 'AUDIT':\n        console.log('%c' + prefix, 'color: purple; font-weight: bold;', entry.message, entry.metadata);\n        break;\n    }\n  }\n\n  private generateId(): string {\n    return `log_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  private generateSessionId(): string {\n    return `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  private getClientIP(): string {\n    // In a real application, this would be provided by the backend\n    return 'unknown';\n  }\n\n  /**\n   * REAL-TIME ETA & COMPLETION TRACKING\n   * Perfect for federal contracting accountability and transparency\n   */\n\n  /**\n   * @description Start a tracked operation with ETA calculation and comprehensive performance monitoring\n   * @param {string} operationName - The unique name of the operation being tracked\n   * @param {number} estimatedDurationMs - Expected duration in milliseconds for completion time estimation\n   * @param {string} phase - Optional phase identifier for multi-phase operations\n   * @param {string} milestone - Optional milestone marker for progress tracking\n   * @param {Record} metadata - Optional additional metadata for the tracked operation\n   * @returns {Observable} Observable containing the operation start log entry\n   * @author Development Team\n   * @since 2025-10-02\n   * @lastModified 2025-10-02\n   * @federalCompliance Meets federal contracting standards for operation tracking documentation\n   */\n  public startTrackedOperation(\n    operationName: string,\n    estimatedDurationMs: number,\n    phase?: string,\n    milestone?: string,\n    metadata?: Record\n  ): Observable {\n    const startTime = new Date();\n    const estimatedCompletionTime = new Date(startTime.getTime() + estimatedDurationMs);\n    \n    const trackingMetadata = {\n      ...metadata,\n      startTime: startTime.toISOString(),\n      estimatedDuration: estimatedDurationMs,\n      operationType: 'START_TRACKED'\n    };\n\n    return this.log('INFO', `Starting tracked operation: ${operationName}`, 'TRACKING', trackingMetadata, operationName, undefined, estimatedCompletionTime, undefined, undefined, 0, phase, milestone);\n  }\n\n  /**\n   * @description Update progress of a tracked operation with percentage completion and status messaging\n   * @param {string} operationName - The unique name of the operation being tracked\n   * @param {number} progress - Progress percentage (0-100) indicating completion status\n   * @param {string} message - Optional progress message for detailed status reporting\n   * @param {Record} metadata - Optional additional metadata for the progress update\n   * @returns {Observable} Observable containing the progress update log entry\n   * @author Development Team\n   * @since 2025-10-02\n   * @lastModified 2025-10-02\n   * @federalCompliance Meets federal contracting standards for progress tracking documentation\n   */\n  public updateProgress(\n    operationName: string,\n    progress: number,\n    message?: string,\n    metadata?: Record\n  ): Observable {\n    const progressMetadata = {\n      ...metadata,\n      operationType: 'PROGRESS_UPDATE',\n      progressPercentage: progress\n    };\n\n    const logMessage = message || `Progress update for ${operationName}: ${progress}%`;\n    \n    return this.log('INFO', logMessage, 'TRACKING', progressMetadata, operationName, undefined, undefined, undefined, undefined, progress);\n  }\n\n  /**\n   * @description Complete a tracked operation with actual completion time and duration analysis for performance metrics\n   * @param {string} operationName - The unique name of the operation being completed\n   * @param {Date} startTime - The original start time of the operation for duration calculation\n   * @param {boolean} success - Whether the operation completed successfully (default: true)\n   * @param {string} actualResults - Optional description of the actual operation results\n   * @param {Record} metadata - Optional additional metadata for the completion record\n   * @returns {Observable} Observable containing the operation completion log entry\n   * @author Development Team\n   * @since 2025-10-02\n   * @lastModified 2025-10-02\n   * @federalCompliance Meets federal contracting standards for operation completion documentation\n   */\n  public completeTrackedOperation(\n    operationName: string,\n    startTime: Date,\n    success = true,\n    actualResults?: string,\n    metadata?: Record\n  ): Observable {\n    const completedAt = new Date();\n    const duration = completedAt.getTime() - startTime.getTime();\n    \n    const completionMetadata = {\n      ...metadata,\n      operationType: 'COMPLETION',\n      success,\n      actualResults,\n      plannedVsActual: {\n        duration: `${duration}ms`,\n        completedAt: completedAt.toISOString()\n      }\n    };\n\n    const logMessage = success \n      ? `✅ Successfully completed: ${operationName} (${duration}ms)`\n      : `❌ Failed to complete: ${operationName} (${duration}ms)`;\n    \n    return this.log(success ? 'INFO' : 'ERROR', logMessage, 'TRACKING', completionMetadata, operationName, undefined, undefined, completedAt, duration, 100);\n  }\n\n  /**\n   * @description Log phase completion with achievements tracking and next phase preparation for project milestone documentation\n   * @param {string} phaseName - The name of the completed phase (e.g., \"Phase 1 Foundation\")\n   * @param {Date} startDate - The original start date of the phase for duration calculation\n   * @param {string[]} achievements - Array of key achievements accomplished in this phase\n   * @param {string} nextPhase - Optional name of the next phase to be started\n   * @param {Record} metadata - Optional additional metadata for the phase completion\n   * @returns {Observable} Observable containing the phase completion log entry\n   * @author Development Team\n   * @since 2025-10-02\n   * @lastModified 2025-10-02\n   * @federalCompliance Meets federal contracting standards for phase milestone documentation\n   */\n  public logPhaseCompletion(\n    phaseName: string,\n    startDate: Date,\n    achievements: string[],\n    nextPhase?: string,\n    metadata?: Record\n  ): Observable {\n    const completedAt = new Date();\n    const duration = completedAt.getTime() - startDate.getTime();\n    \n    const phaseMetadata = {\n      ...metadata,\n      phaseType: 'COMPLETION',\n      achievements,\n      nextPhase,\n      phaseDuration: `${Math.round(duration / (1000 * 60 * 60 * 24))} days`,\n      completedAt: completedAt.toISOString()\n    };\n\n    return this.log('AUDIT', `🎯 PHASE COMPLETE: ${phaseName}`, 'PHASE_TRACKING', phaseMetadata, `PHASE_${phaseName.toUpperCase()}`, undefined, undefined, completedAt, duration, 100, phaseName);\n  }\n\n  /**\n   * @description Enhanced log method with ETA and completion tracking for comprehensive audit trail creation\n   * @param {LogLevel} level - The severity level of the log entry (DEBUG, INFO, WARN, ERROR, FATAL)\n   * @param {string} message - The log message content\n   * @param {string} category - The category classification for the log entry\n   * @param {Record} metadata - Optional additional metadata for the log entry\n   * @param {string} operation - Optional operation identifier for tracking\n   * @param {string} stackTrace - Optional stack trace for error logging\n   * @param {Date} eta - Optional estimated time of arrival for completion\n   * @param {Date} completedAt - Optional completion timestamp for finished operations\n   * @param {number} duration - Optional operation duration in milliseconds\n   * @param {number} progress - Optional progress percentage (0-100)\n   * @param {string} phase - Optional phase identifier for multi-phase operations\n   * @param {string} milestone - Optional milestone marker for progress tracking\n   * @returns {Observable} Observable containing the created log entry\n   * @author Development Team\n   * @since 2025-10-02\n   * @lastModified 2025-10-02\n   * @federalCompliance Meets federal contracting standards for comprehensive logging documentation\n   */\n  public log(\n    level: LogLevel,\n    message: string,\n    category: string,\n    metadata?: Record,\n    operation?: string,\n    stackTrace?: string,\n    eta?: Date,\n    completedAt?: Date,\n    duration?: number,\n    progress?: number,\n    phase?: string,\n    milestone?: string\n  ): Observable {\n    const entry: LogEntry = {\n      id: this.generateId(),\n      timestamp: new Date(),\n      level,\n      message,\n      category,\n      metadata,\n      operation,\n      userId: this.userId,\n      sessionId: this.sessionId,\n      stackTrace,\n      eta,\n      completedAt,\n      duration,\n      progress,\n      phase,\n      milestone\n    };\n\n    this.addToLogs(entry);\n    \n    return new BehaviorSubject(entry).pipe(\n      shareReplay(1),\n      takeUntil(this.destroy$)\n    );\n  }\n\n  /**\n   * @description Angular lifecycle hook for component destruction - performs cleanup and resource deallocation\n   * @returns {void} No return value\n   * @author Development Team\n   * @since 2025-10-02\n   * @lastModified 2025-10-02\n   * @federalCompliance Meets federal contracting standards for lifecycle management documentation\n   */\n  public ngOnDestroy(): void {\n    this.info('LoggingService shutting down', 'SYSTEM');\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServicesComponent.html":{"url":"components/ServicesComponent.html","title":"component - ServicesComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  ServicesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    frontend/src/app/pages/services.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-services\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./services.html\n            \n\n\n\n            \n                styleUrl\n                ./services.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-services',\n  standalone: true,\n  imports: [],\n  templateUrl: './services.html',\n  styleUrl: './services.scss',\n})\nexport class ServicesComponent {}\n\n    \n\n    \n        services works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'services works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogComponent', 'selector': 'app-blog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DevelopmentComponent', 'selector': 'app-development'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ServicesComponent', 'selector': 'app-services'},{'name': 'SwaggerComponent', 'selector': 'app-swagger'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ServicesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SwaggerComponent.html":{"url":"components/SwaggerComponent.html","title":"component - SwaggerComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Components\n  \n  SwaggerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    frontend/src/app/swagger/swagger.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-swagger\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./swagger.html\n            \n\n\n\n            \n                styleUrl\n                ./swagger.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in frontend/src/app/swagger/swagger.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const SwaggerUIBundle: any;\n\n@Component({\n  selector: 'app-swagger',\n  templateUrl: './swagger.html',\n  styleUrl: './swagger.css'\n})\nexport class SwaggerComponent implements OnInit {\n  ngOnInit(): void {\n    SwaggerUIBundle({\n      url: 'http://localhost:3000/api-json', // URL to your backend's OpenAPI spec\n      dom_id: '#swagger-ui',\n      presets: [\n        SwaggerUIBundle.presets.apis,\n        SwaggerUIBundle.SwaggerUIStandalonePreset\n      ],\n      layout: 'StandaloneLayout'\n    });\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogComponent', 'selector': 'app-blog'},{'name': 'ContactComponent', 'selector': 'app-contact'},{'name': 'DevelopmentComponent', 'selector': 'app-development'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ServicesComponent', 'selector': 'app-services'},{'name': 'SwaggerComponent', 'selector': 'app-swagger'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SwaggerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToasterConfig.html":{"url":"interfaces/ToasterConfig.html","title":"interface - ToasterConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ToasterConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            frontend/src/app/shared/ui-services/toaster.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MatSnackBarConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            action\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            persistent\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showTimestamp\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        persistent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        persistent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showTimestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showTimestamp:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         ToasterType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ToasterType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { MatSnackBar, MatSnackBarConfig, MatSnackBarRef } from '@angular/material/snack-bar';\nimport { BehaviorSubject, Subject, Observable } from 'rxjs';\nimport { shareReplay, takeUntil, tap } from 'rxjs/operators';\n\nexport interface ToasterMessage {\n  readonly id: string;\n  readonly message: string;\n  readonly type: ToasterType;\n  readonly timestamp: Date;\n  readonly duration?: number;\n  readonly action?: string;\n  readonly persistent?: boolean;\n}\n\nexport type ToasterType = 'success' | 'error' | 'warning' | 'info' | 'progress' | 'tactical';\n\nexport interface ToasterConfig extends MatSnackBarConfig {\n  readonly type?: ToasterType;\n  readonly persistent?: boolean;\n  readonly showTimestamp?: boolean;\n  readonly action?: string;\n}\n\n/**\n * @description Traditional Angular toaster service with Material 3 Expressive design and tactical color schemes for federal compliance notifications\n * @author Development Team\n * @since 2025-10-02\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToasterService implements OnDestroy {\n  private readonly destroy$ = new Subject();\n  private readonly messagesSubject$ = new BehaviorSubject([]);\n  \n  // Hot observable for message history\n  public readonly messages$ = this.messagesSubject$.pipe(\n    shareReplay(1),\n    takeUntil(this.destroy$)\n  );\n  \n  // Tactical color scheme for Material 3 Expressive\n  private readonly tacticalColors = {\n    success: 'tactical-success',\n    error: 'tactical-error', \n    warning: 'tactical-warning',\n    info: 'tactical-info',\n    progress: 'tactical-progress',\n    tactical: 'tactical-primary'\n  };\n\n  /**\n   * @description Constructor for ToasterService - initializes the service with required dependencies\n   * @param {MatSnackBar} snackBar - The injected Material snack bar service for displaying notifications\n   * @author True North Development Team\n   * @since October 2, 2025\n   */\n  constructor(private readonly snackBar: MatSnackBar) {}\n\n  /**\n   * @description Display success notification with tactical green theme\n   * @param {string} message - The message to display in the success notification\n   * @param {string} [action] - Optional action button text for the notification\n   * @param {number} [duration] - Duration in milliseconds before auto-dismiss (default: 4000)\n   * @returns {Observable} Observable containing the created toaster message\n   */\n  public showSuccess(message: string, action?: string, duration = 4000): Observable {\n    return this.show(message, 'success', { action, duration });\n  }\n\n  /**\n   * @description Display error notification with tactical red theme\n   * @param {string} message - The error message to display in the notification\n   * @param {string} [action] - Optional action button text for the notification\n   * @param {boolean} [persistent] - Whether the notification should persist until manually dismissed (default: false)\n   * @returns {Observable} Observable containing the created toaster message\n   */\n  public showError(message: string, action?: string, persistent = false): Observable {\n    return this.show(message, 'error', { \n      action, \n      persistent, \n      duration: persistent ? 0 : 8000 \n    });\n  }\n\n  /**\n   * @description Display warning notification with tactical amber theme\n   * @param {string} message - The warning message to display in the notification\n   * @param {string} [action] - Optional action button text for the notification\n   * @param {number} [duration] - Duration in milliseconds before auto-dismiss (default: 6000)\n   * @returns {Observable} Observable containing the created toaster message\n   */\n  public showWarning(message: string, action?: string, duration = 6000): Observable {\n    return this.show(message, 'warning', { action, duration });\n  }\n\n  /**\n   * @description Display info notification with tactical blue theme\n   * @param {string} message - The informational message to display in the notification\n   * @param {string} [action] - Optional action button text for the notification\n   * @param {number} [duration] - Duration in milliseconds before auto-dismiss (default: 4000)\n   * @returns {Observable} Observable containing the created toaster message\n   */\n  public showInfo(message: string, action?: string, duration = 4000): Observable {\n    return this.show(message, 'info', { action, duration });\n  }\n\n  /**\n   * @description Display progress notification for long-running operations\n   * @param {string} message - The progress message to display in the notification\n   * @param {boolean} [persistent] - Whether the notification should persist until manually dismissed (default: true)\n   * @returns {Observable} Observable containing the created toaster message\n   */\n  public showProgress(message: string, persistent = true): Observable {\n    return this.show(message, 'progress', { persistent, duration: 0 });\n  }\n\n  /**\n   * @description Display tactical notification with special military-grade styling\n   * @param {string} message - The tactical message to display in the notification\n   * @param {string} [action] - Optional action button text for the notification\n   * @param {number} [duration] - Duration in milliseconds before auto-dismiss (default: 5000)\n   * @returns {Observable} Observable containing the created toaster message\n   */\n  public showTactical(message: string, action?: string, duration = 5000): Observable {\n    return this.show(message, 'tactical', { action, duration });\n  }\n\n  /**\n   * @description Step-by-step operation notifications with audit logging\n   * @param {string} operationName - The name of the operation being tracked\n   * @param {number} currentStep - The current step number in the operation\n   * @param {number} totalSteps - The total number of steps in the operation\n   * @param {string} stepDescription - Description of the current step being performed\n   * @returns {Observable} Observable containing the created toaster message\n   */\n  public showStepProgress(\n    operationName: string, \n    currentStep: number, \n    totalSteps: number, \n    stepDescription: string\n  ): Observable {\n    const progressMessage = `${operationName}: Step ${currentStep}/${totalSteps} - ${stepDescription}`;\n    \n    return this.show(progressMessage, 'progress', {\n      persistent: currentStep  {\n        // Audit logging integration point\n        console.log('STEP_PROGRESS:', {\n          operation: operationName,\n          step: currentStep,\n          total: totalSteps,\n          description: stepDescription,\n          messageId: message.id,\n          timestamp: message.timestamp\n        });\n      })\n    );\n  }\n\n  /**\n   * @description Database operation notifications for CRUD operations\n   * @param {string} operation - The database operation type (CREATE, READ, UPDATE, DELETE)\n   * @param {string} entity - The name of the entity being operated on\n   * @param {string} status - The current status of the operation (START, SUCCESS, ERROR)\n   * @param {string} [details] - Optional additional details about the operation\n   * @returns {Observable} Observable containing the created toaster message\n   */\n  public showDatabaseOperation(\n    operation: 'CREATE' | 'READ' | 'UPDATE' | 'DELETE',\n    entity: string,\n    status: 'START' | 'SUCCESS' | 'ERROR',\n    details?: string\n  ): Observable {\n    const message = `${operation} ${entity}: ${status}${details ? ` - ${details}` : ''}`;\n    \n    switch (status) {\n      case 'START':\n        return this.showProgress(`Starting ${operation.toLowerCase()} operation on ${entity}...`);\n      case 'SUCCESS':\n        return this.showSuccess(`${operation} ${entity} completed successfully`);\n      case 'ERROR':\n        return this.showError(`${operation} ${entity} failed${details ? `: ${details}` : ''}`, 'RETRY', true);\n      default:\n        return this.showInfo(message);\n    }\n  }\n\n  /**\n   * @description Authentication flow notifications for login, MFA, refresh, and logout operations\n   * @param {string} step - The authentication step being performed (LOGIN, MFA, REFRESH, LOGOUT)\n   * @param {string} status - The current status of the authentication step (START, SUCCESS, ERROR)\n   * @param {string} [details] - Optional additional details about the authentication operation\n   * @returns {Observable} Observable containing the created toaster message\n   */\n  public showAuthFlow(\n    step: 'LOGIN' | 'MFA' | 'REFRESH' | 'LOGOUT',\n    status: 'START' | 'SUCCESS' | 'ERROR',\n    details?: string\n  ): Observable {\n    const stepNames = {\n      'LOGIN': 'Login',\n      'MFA': 'Multi-Factor Authentication',\n      'REFRESH': 'Token Refresh', \n      'LOGOUT': 'Logout'\n    };\n    \n    const stepName = stepNames[step];\n    const message = `${stepName}: ${status}${details ? ` - ${details}` : ''}`;\n    \n    switch (status) {\n      case 'START':\n        return this.showProgress(`${stepName} in progress...`);\n      case 'SUCCESS':\n        return this.showTactical(`${stepName} successful`, 'CONTINUE');\n      case 'ERROR':\n        return this.showError(`${stepName} failed${details ? `: ${details}` : ''}`, 'RETRY', true);\n      default:\n        return this.showInfo(message);\n    }\n  }\n\n  /**\n   * @description Clear all notifications and dismiss any active snackbar\n   * @returns {void} No return value\n   */\n  public clearAll(): void {\n    this.snackBar.dismiss();\n    this.messagesSubject$.next([]);\n  }\n\n  /**\n   * @description Get notification history as an observable stream\n   * @returns {Observable} Observable containing array of all toaster messages\n   */\n  public getHistory(): Observable {\n    return this.messages$;\n  }\n\n  /**\n   * @description Core notification display method with Material 3 Expressive styling\n   * @param {string} message - The message text to display in the notification\n   * @param {ToasterType} type - The type of notification (success, error, warning, info, progress, tactical)\n   * @param {Partial} [options] - Optional configuration options for the notification\n   * @returns {Observable} Observable containing the created toaster message\n   */\n  private show(\n    message: string, \n    type: ToasterType, \n    options: Partial = {}\n  ): Observable {\n    const toasterMessage: ToasterMessage = {\n      id: this.generateId(),\n      message,\n      type,\n      timestamp: new Date(),\n      duration: options.duration,\n      action: options.action,\n      persistent: options.persistent\n    };\n\n    // Add to message history\n    const currentMessages = this.messagesSubject$.value;\n    this.messagesSubject$.next([...currentMessages, toasterMessage]);\n\n    // Configure Material 3 Expressive styling\n    const config: MatSnackBarConfig = {\n      duration: options.persistent ? 0 : (options.duration || 4000),\n      panelClass: [\n        'tactical-toaster',\n        this.tacticalColors[type],\n        options.showTimestamp ? 'with-timestamp' : ''\n      ].filter(Boolean),\n      verticalPosition: 'top',\n      horizontalPosition: 'right',\n      ...options\n    };\n\n    // Display with Material 3 Expressive design\n    const snackBarRef: MatSnackBarRef = this.snackBar.open(\n      options.showTimestamp \n        ? `[${toasterMessage.timestamp.toLocaleTimeString()}] ${message}`\n        : message,\n      options.action,\n      config\n    );\n\n    // Handle action clicks\n    if (options.action) {\n      snackBarRef.onAction().pipe(\n        takeUntil(this.destroy$)\n      ).subscribe(() => {\n        console.log('TOASTER_ACTION:', {\n          messageId: toasterMessage.id,\n          action: options.action,\n          timestamp: new Date()\n        });\n      });\n    }\n\n    return new BehaviorSubject(toasterMessage).pipe(\n      shareReplay(1),\n      takeUntil(this.destroy$)\n    );\n  }\n\n  /**\n   * @description Generate unique identifier for toaster messages\n   * @returns {string} Unique string identifier with timestamp and random suffix\n   */\n  private generateId(): string {\n    return `toaster_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  /**\n   * @description Module destroy lifecycle hook - cleanup resources and dismiss notifications\n   * @returns {void} No return value\n   */\n  public onModuleDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.snackBar.dismiss();\n  }\n\n  /**\n   * @description Angular OnDestroy lifecycle hook - delegates to onModuleDestroy\n   * @returns {void} No return value\n   */\n  public ngOnDestroy(): void {\n    this.onModuleDestroy();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ToasterMessage.html":{"url":"interfaces/ToasterMessage.html","title":"interface - ToasterMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ToasterMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            frontend/src/app/shared/ui-services/toaster.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            action\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            persistent\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        persistent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        persistent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         ToasterType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ToasterType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { MatSnackBar, MatSnackBarConfig, MatSnackBarRef } from '@angular/material/snack-bar';\nimport { BehaviorSubject, Subject, Observable } from 'rxjs';\nimport { shareReplay, takeUntil, tap } from 'rxjs/operators';\n\nexport interface ToasterMessage {\n  readonly id: string;\n  readonly message: string;\n  readonly type: ToasterType;\n  readonly timestamp: Date;\n  readonly duration?: number;\n  readonly action?: string;\n  readonly persistent?: boolean;\n}\n\nexport type ToasterType = 'success' | 'error' | 'warning' | 'info' | 'progress' | 'tactical';\n\nexport interface ToasterConfig extends MatSnackBarConfig {\n  readonly type?: ToasterType;\n  readonly persistent?: boolean;\n  readonly showTimestamp?: boolean;\n  readonly action?: string;\n}\n\n/**\n * @description Traditional Angular toaster service with Material 3 Expressive design and tactical color schemes for federal compliance notifications\n * @author Development Team\n * @since 2025-10-02\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToasterService implements OnDestroy {\n  private readonly destroy$ = new Subject();\n  private readonly messagesSubject$ = new BehaviorSubject([]);\n  \n  // Hot observable for message history\n  public readonly messages$ = this.messagesSubject$.pipe(\n    shareReplay(1),\n    takeUntil(this.destroy$)\n  );\n  \n  // Tactical color scheme for Material 3 Expressive\n  private readonly tacticalColors = {\n    success: 'tactical-success',\n    error: 'tactical-error', \n    warning: 'tactical-warning',\n    info: 'tactical-info',\n    progress: 'tactical-progress',\n    tactical: 'tactical-primary'\n  };\n\n  /**\n   * @description Constructor for ToasterService - initializes the service with required dependencies\n   * @param {MatSnackBar} snackBar - The injected Material snack bar service for displaying notifications\n   * @author True North Development Team\n   * @since October 2, 2025\n   */\n  constructor(private readonly snackBar: MatSnackBar) {}\n\n  /**\n   * @description Display success notification with tactical green theme\n   * @param {string} message - The message to display in the success notification\n   * @param {string} [action] - Optional action button text for the notification\n   * @param {number} [duration] - Duration in milliseconds before auto-dismiss (default: 4000)\n   * @returns {Observable} Observable containing the created toaster message\n   */\n  public showSuccess(message: string, action?: string, duration = 4000): Observable {\n    return this.show(message, 'success', { action, duration });\n  }\n\n  /**\n   * @description Display error notification with tactical red theme\n   * @param {string} message - The error message to display in the notification\n   * @param {string} [action] - Optional action button text for the notification\n   * @param {boolean} [persistent] - Whether the notification should persist until manually dismissed (default: false)\n   * @returns {Observable} Observable containing the created toaster message\n   */\n  public showError(message: string, action?: string, persistent = false): Observable {\n    return this.show(message, 'error', { \n      action, \n      persistent, \n      duration: persistent ? 0 : 8000 \n    });\n  }\n\n  /**\n   * @description Display warning notification with tactical amber theme\n   * @param {string} message - The warning message to display in the notification\n   * @param {string} [action] - Optional action button text for the notification\n   * @param {number} [duration] - Duration in milliseconds before auto-dismiss (default: 6000)\n   * @returns {Observable} Observable containing the created toaster message\n   */\n  public showWarning(message: string, action?: string, duration = 6000): Observable {\n    return this.show(message, 'warning', { action, duration });\n  }\n\n  /**\n   * @description Display info notification with tactical blue theme\n   * @param {string} message - The informational message to display in the notification\n   * @param {string} [action] - Optional action button text for the notification\n   * @param {number} [duration] - Duration in milliseconds before auto-dismiss (default: 4000)\n   * @returns {Observable} Observable containing the created toaster message\n   */\n  public showInfo(message: string, action?: string, duration = 4000): Observable {\n    return this.show(message, 'info', { action, duration });\n  }\n\n  /**\n   * @description Display progress notification for long-running operations\n   * @param {string} message - The progress message to display in the notification\n   * @param {boolean} [persistent] - Whether the notification should persist until manually dismissed (default: true)\n   * @returns {Observable} Observable containing the created toaster message\n   */\n  public showProgress(message: string, persistent = true): Observable {\n    return this.show(message, 'progress', { persistent, duration: 0 });\n  }\n\n  /**\n   * @description Display tactical notification with special military-grade styling\n   * @param {string} message - The tactical message to display in the notification\n   * @param {string} [action] - Optional action button text for the notification\n   * @param {number} [duration] - Duration in milliseconds before auto-dismiss (default: 5000)\n   * @returns {Observable} Observable containing the created toaster message\n   */\n  public showTactical(message: string, action?: string, duration = 5000): Observable {\n    return this.show(message, 'tactical', { action, duration });\n  }\n\n  /**\n   * @description Step-by-step operation notifications with audit logging\n   * @param {string} operationName - The name of the operation being tracked\n   * @param {number} currentStep - The current step number in the operation\n   * @param {number} totalSteps - The total number of steps in the operation\n   * @param {string} stepDescription - Description of the current step being performed\n   * @returns {Observable} Observable containing the created toaster message\n   */\n  public showStepProgress(\n    operationName: string, \n    currentStep: number, \n    totalSteps: number, \n    stepDescription: string\n  ): Observable {\n    const progressMessage = `${operationName}: Step ${currentStep}/${totalSteps} - ${stepDescription}`;\n    \n    return this.show(progressMessage, 'progress', {\n      persistent: currentStep  {\n        // Audit logging integration point\n        console.log('STEP_PROGRESS:', {\n          operation: operationName,\n          step: currentStep,\n          total: totalSteps,\n          description: stepDescription,\n          messageId: message.id,\n          timestamp: message.timestamp\n        });\n      })\n    );\n  }\n\n  /**\n   * @description Database operation notifications for CRUD operations\n   * @param {string} operation - The database operation type (CREATE, READ, UPDATE, DELETE)\n   * @param {string} entity - The name of the entity being operated on\n   * @param {string} status - The current status of the operation (START, SUCCESS, ERROR)\n   * @param {string} [details] - Optional additional details about the operation\n   * @returns {Observable} Observable containing the created toaster message\n   */\n  public showDatabaseOperation(\n    operation: 'CREATE' | 'READ' | 'UPDATE' | 'DELETE',\n    entity: string,\n    status: 'START' | 'SUCCESS' | 'ERROR',\n    details?: string\n  ): Observable {\n    const message = `${operation} ${entity}: ${status}${details ? ` - ${details}` : ''}`;\n    \n    switch (status) {\n      case 'START':\n        return this.showProgress(`Starting ${operation.toLowerCase()} operation on ${entity}...`);\n      case 'SUCCESS':\n        return this.showSuccess(`${operation} ${entity} completed successfully`);\n      case 'ERROR':\n        return this.showError(`${operation} ${entity} failed${details ? `: ${details}` : ''}`, 'RETRY', true);\n      default:\n        return this.showInfo(message);\n    }\n  }\n\n  /**\n   * @description Authentication flow notifications for login, MFA, refresh, and logout operations\n   * @param {string} step - The authentication step being performed (LOGIN, MFA, REFRESH, LOGOUT)\n   * @param {string} status - The current status of the authentication step (START, SUCCESS, ERROR)\n   * @param {string} [details] - Optional additional details about the authentication operation\n   * @returns {Observable} Observable containing the created toaster message\n   */\n  public showAuthFlow(\n    step: 'LOGIN' | 'MFA' | 'REFRESH' | 'LOGOUT',\n    status: 'START' | 'SUCCESS' | 'ERROR',\n    details?: string\n  ): Observable {\n    const stepNames = {\n      'LOGIN': 'Login',\n      'MFA': 'Multi-Factor Authentication',\n      'REFRESH': 'Token Refresh', \n      'LOGOUT': 'Logout'\n    };\n    \n    const stepName = stepNames[step];\n    const message = `${stepName}: ${status}${details ? ` - ${details}` : ''}`;\n    \n    switch (status) {\n      case 'START':\n        return this.showProgress(`${stepName} in progress...`);\n      case 'SUCCESS':\n        return this.showTactical(`${stepName} successful`, 'CONTINUE');\n      case 'ERROR':\n        return this.showError(`${stepName} failed${details ? `: ${details}` : ''}`, 'RETRY', true);\n      default:\n        return this.showInfo(message);\n    }\n  }\n\n  /**\n   * @description Clear all notifications and dismiss any active snackbar\n   * @returns {void} No return value\n   */\n  public clearAll(): void {\n    this.snackBar.dismiss();\n    this.messagesSubject$.next([]);\n  }\n\n  /**\n   * @description Get notification history as an observable stream\n   * @returns {Observable} Observable containing array of all toaster messages\n   */\n  public getHistory(): Observable {\n    return this.messages$;\n  }\n\n  /**\n   * @description Core notification display method with Material 3 Expressive styling\n   * @param {string} message - The message text to display in the notification\n   * @param {ToasterType} type - The type of notification (success, error, warning, info, progress, tactical)\n   * @param {Partial} [options] - Optional configuration options for the notification\n   * @returns {Observable} Observable containing the created toaster message\n   */\n  private show(\n    message: string, \n    type: ToasterType, \n    options: Partial = {}\n  ): Observable {\n    const toasterMessage: ToasterMessage = {\n      id: this.generateId(),\n      message,\n      type,\n      timestamp: new Date(),\n      duration: options.duration,\n      action: options.action,\n      persistent: options.persistent\n    };\n\n    // Add to message history\n    const currentMessages = this.messagesSubject$.value;\n    this.messagesSubject$.next([...currentMessages, toasterMessage]);\n\n    // Configure Material 3 Expressive styling\n    const config: MatSnackBarConfig = {\n      duration: options.persistent ? 0 : (options.duration || 4000),\n      panelClass: [\n        'tactical-toaster',\n        this.tacticalColors[type],\n        options.showTimestamp ? 'with-timestamp' : ''\n      ].filter(Boolean),\n      verticalPosition: 'top',\n      horizontalPosition: 'right',\n      ...options\n    };\n\n    // Display with Material 3 Expressive design\n    const snackBarRef: MatSnackBarRef = this.snackBar.open(\n      options.showTimestamp \n        ? `[${toasterMessage.timestamp.toLocaleTimeString()}] ${message}`\n        : message,\n      options.action,\n      config\n    );\n\n    // Handle action clicks\n    if (options.action) {\n      snackBarRef.onAction().pipe(\n        takeUntil(this.destroy$)\n      ).subscribe(() => {\n        console.log('TOASTER_ACTION:', {\n          messageId: toasterMessage.id,\n          action: options.action,\n          timestamp: new Date()\n        });\n      });\n    }\n\n    return new BehaviorSubject(toasterMessage).pipe(\n      shareReplay(1),\n      takeUntil(this.destroy$)\n    );\n  }\n\n  /**\n   * @description Generate unique identifier for toaster messages\n   * @returns {string} Unique string identifier with timestamp and random suffix\n   */\n  private generateId(): string {\n    return `toaster_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  /**\n   * @description Module destroy lifecycle hook - cleanup resources and dismiss notifications\n   * @returns {void} No return value\n   */\n  public onModuleDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.snackBar.dismiss();\n  }\n\n  /**\n   * @description Angular OnDestroy lifecycle hook - delegates to onModuleDestroy\n   * @returns {void} No return value\n   */\n  public ngOnDestroy(): void {\n    this.onModuleDestroy();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UIServicesModuleService.html":{"url":"modules/UIServicesModuleService.html","title":"module - UIServicesModuleService","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    UIServicesModuleService\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UIServicesModuleService\n\n\n\ncluster_UIServicesModuleService_providers\n\n\n\n\nLoggingService\n\nLoggingService\n\n\n\nUIServicesModuleService\n\nUIServicesModuleService\n\nUIServicesModuleService -->\n\nLoggingService->UIServicesModuleService\n\n\n\n\n\nToasterService\n\nToasterService\n\nUIServicesModuleService -->\n\nToasterService->UIServicesModuleService\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            frontend/src/app/shared/ui-services/ui-services-module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LoggingService\n                        \n                        \n                            ToasterService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { ToasterService } from './toaster.service';\nimport { LoggingService } from './logging.service';\n\n/**\n * @description Traditional Angular UI services module providing enterprise-grade notification and logging services with Material 3 Expressive design and tactical color schemes using observable-driven patterns throughout\n * @author True North Development Team\n * @since October 2, 2025\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatIconModule\n  ],\n  providers: [\n    ToasterService,\n    LoggingService\n  ],\n  exports: [\n    MatSnackBarModule,\n    MatButtonModule,\n    MatIconModule\n  ]\n})\n/**\n * @description UI services module providing shared Material Design components and notification services for federal applications\n * @author Development Team\n * @since 2025-10-02\n */\nexport class UIServicesModuleService { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        frontend/src/app/app.routes.ts\n            \n            variable\n            appRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        frontend/src/app/app.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        frontend/src/app/layout/header.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        frontend/src/app/pages/about.ts\n            \n            component\n            AboutComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        frontend/src/app/pages/blog.ts\n            \n            component\n            BlogComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        frontend/src/app/pages/contact.ts\n            \n            component\n            ContactComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        frontend/src/app/pages/development.ts\n            \n            component\n            DevelopmentComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                        frontend/src/app/pages/home.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        frontend/src/app/pages/services.ts\n            \n            component\n            ServicesComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        frontend/src/app/shared/ui-services/logging.service.ts\n            \n            injectable\n            LoggingService\n            \n                2 %\n                (1/40)\n            \n        \n        \n            \n                \n                        frontend/src/app/shared/ui-services/logging.service.ts\n            \n            interface\n            AuditEntry\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        frontend/src/app/shared/ui-services/logging.service.ts\n            \n            interface\n            LogEntry\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                        frontend/src/app/shared/ui-services/logging.service.ts\n            \n            type alias\n            LogLevel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        frontend/src/app/shared/ui-services/toaster.service.ts\n            \n            injectable\n            ToasterService\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                        frontend/src/app/shared/ui-services/toaster.service.ts\n            \n            interface\n            ToasterConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        frontend/src/app/shared/ui-services/toaster.service.ts\n            \n            interface\n            ToasterMessage\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        frontend/src/app/shared/ui-services/toaster.service.ts\n            \n            type alias\n            ToasterType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        frontend/src/app/swagger/swagger.ts\n            \n            component\n            SwaggerComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        frontend/src/app/swagger/swagger.ts\n            \n            variable\n            SwaggerUIBundle\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^20.3.2\n        \n            @angular/cdk : ^20.2.5\n        \n            @angular/common : ~20.3.0\n        \n            @angular/compiler : ~20.3.0\n        \n            @angular/core : ~20.3.0\n        \n            @angular/forms : ~20.3.0\n        \n            @angular/material : ^20.2.5\n        \n            @angular/platform-browser : ~20.3.0\n        \n            @angular/platform-browser-dynamic : ~20.3.0\n        \n            @angular/router : ~20.3.0\n        \n            @nestjs/apollo : ^13.2.0\n        \n            @nestjs/common : ^11.0.0\n        \n            @nestjs/core : ^11.0.0\n        \n            @nestjs/graphql : ^13.2.0\n        \n            @nestjs/platform-express : ^11.0.0\n        \n            @nestjs/platform-socket.io : ^11.1.6\n        \n            @nestjs/swagger : ^11.2.0\n        \n            @nestjs/websockets : ^11.1.6\n        \n            apollo-server-express : ^3.13.0\n        \n            axios : ^1.6.0\n        \n            graphql : ^16.11.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ~7.8.0\n        \n            swagger-ui-dist : ^5.29.2\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \n\n\nTrue North Insights\nCreated: October 1, 2025 12:00 PM ESTPlanned Duration: 2 hoursActual Duration: 2 hoursStatus: CompletedPriority: CriticalAssigned To: Development TeamActual Completion: October 1, 2025 2:00 PM ESTLast Updated: October 1, 2025 6:30 PM EST\nLegendary Solutions. Veteran Built. Real-Time Ready.\nA veteran-led, pro-American technology platform delivering secure, innovative, real-time solutions to government and defense partners. Specialized in data visualization, Kanban metrics, and time tracking with enterprise-grade accountability.\n🎯 Phase 1 Complete ✅ - October 1, 2025\nTotal Development Time: ~6 hours | Testing Infrastructure: Professional Grade\nLegendary Tactical Interface + Comprehensive Testing Infrastructure\nCore Features\n\nMaterial 3 Expressive design with military-grade tactical aesthetics\nEnterprise notification system with step-by-step user feedback  \nETA tracking & real-time monitoring with automated completion timestamps\nComprehensive audit logging with observable patterns\nTraditional Angular architecture for enterprise reliability\nHot observable patterns with RxJS shareReplay(1) for real-time performance\n\nProfessional Testing Suite\n\nUnit Testing: ✅ Frontend (Angular/Jest) + Backend (NestJS/Jest)\nE2E Testing: ✅ Playwright multi-browser (Chromium, Firefox, WebKit)\nObservable Testing: ✅ Async/await patterns for RxJS streams\nMaterial 3 Testing: ✅ Snackbar/Toaster notification validation\nLinting Compliance: ✅ ESLint, Stylelint, Markdownlint with auto-fix\n\nEnterprise Development Standards\n\nProfessional Scripts: npm run test, npm run lint:fix, npm run test:all\nMulti-browser E2E: Playwright testing across all major browsers\nCode Quality: Zero linting violations with automated compliance\nReal-time Features: ETA tracking, progress monitoring, completion timestamps\nFederal Contracting Ready: Comprehensive audit trails and accountability\n\nTechnical Stack\n\nFrontend: Angular 20.3 + Material Design 3 Expressive\nArchitecture: Traditional NgModule with constructor DI patterns  \nBackend: NestJS 11 with Observable-driven API patterns\nTesting: Jest (Unit) + Playwright (E2E) with multi-browser coverage\nQuality: ESLint + Stylelint + Markdownlint with comprehensive auto-fix\nPersistence: MongoDB + PostgreSQL dual persistence (planned)\nUI/UX: Military-grade tactical interface with responsive design\n\nGenerate a library\nExample :npx nx g @nx/js:lib packages/pkg1 --publishable --importPath=@my-org/pkg1Run tasks\nTo build the library use:\nExample :npx nx build pkg1To run any task with Nx use:\nExample :npx nx  These targets are either inferred automatically or defined in the project.json or package.json files.\nMore about running tasks in the docs »\nVersioning and releasing\nTo version and release the library use\nExample :npx nx releasePass --dry-run to see what would happen without actually releasing the library.\nLearn more about Nx release »\nKeep TypeScript project references up to date\nNx automatically updates TypeScript project references in tsconfig.json files to ensure they remain accurate based on your project dependencies (import or require statements). This sync is automatically done when running tasks such as build or typecheck, which require updated references to function correctly.\nTo manually trigger the process to sync the project graph dependencies information to the TypeScript project references, run the following command:\nExample :npx nx syncYou can enforce that the TypeScript project references are always in the correct state when running in CI by adding a step to your CI job configuration that runs the following command:\nExample :npx nx sync:checkLearn more about nx sync\nSet up CI\nStep 1\nTo connect to Nx Cloud, run the following command:\nExample :npx nx connectConnecting to Nx Cloud ensures a fast and scalable CI pipeline. It includes features such as:\n\nRemote caching\nTask distribution across multiple machines\nAutomated e2e test splitting\nTask flakiness detection and rerunning\n\nStep 2\nUse the following command to configure a CI workflow for your workspace:\nExample :npx nx g ci-workflowLearn more about Nx on CI\nInstall Nx Console\nNx Console is an editor extension that enriches your developer experience. It lets you run tasks, generate code, and improves code autocompletion in your IDE. It is available for VSCode and IntelliJ.\nInstall Nx Console »\nUseful links\nLearn more:\n\nLearn more about this workspace setup\nLearn about Nx on CI\nReleasing Packages with Nx release\nWhat are Nx plugins?\n\nAnd join the Nx community:\n\nDiscord\nFollow us on X or LinkedIn\nOur Youtube channel\nOur blog\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UIServicesModuleService\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n\n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_UIServicesModuleService\n\n\n\ncluster_UIServicesModuleService_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nApp \n\nApp \n\nApp  -->\n\nAppModule->App \n\n\n\n\n\nLoggingService\n\nLoggingService\n\n\n\nUIServicesModuleService\n\nUIServicesModuleService\n\nUIServicesModuleService -->\n\nLoggingService->UIServicesModuleService\n\n\n\n\n\nToasterService\n\nToasterService\n\nUIServicesModuleService -->\n\nToasterService->UIServicesModuleService\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n        \n            License : MIT\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LogLevel   (frontend/.../logging.service.ts)\n                        \n                        \n                            ToasterType   (frontend/.../toaster.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    frontend/src/app/shared/ui-services/logging.service.ts\n    \n    \n        \n            \n                \n                    \n                    LogLevel\n                \n            \n            \n                \n                        \"DEBUG\" | \"INFO\" | \"WARN\" | \"ERROR\" | \"FATAL\" | \"AUDIT\"\n\n                \n            \n        \n    \n    frontend/src/app/shared/ui-services/toaster.service.ts\n    \n    \n        \n            \n                \n                    \n                    ToasterType\n                \n            \n            \n                \n                        \"success\" | \"error\" | \"warning\" | \"info\" | \"progress\" | \"tactical\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appRoutes   (frontend/.../app.routes.ts)\n                        \n                        \n                            SwaggerUIBundle   (frontend/.../swagger.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    frontend/src/app/app.routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Route[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent },\n  { path: 'about', component: AboutComponent },\n  { path: 'services', component: ServicesComponent },\n  { path: 'blog', component: BlogComponent },\n  { path: 'contact', component: ContactComponent },\n  { path: 'development', component: DevelopmentComponent },\n  { path: 'swagger', component: SwaggerComponent },\n]\n                    \n                \n\n\n        \n    \n\n    frontend/src/app/swagger/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SwaggerUIBundle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
